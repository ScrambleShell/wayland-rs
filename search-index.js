var searchIndex = {};
searchIndex["wayland_client"] = {"doc":"Client-side Wayland connector","items":[[3,"AnonymousObject","wayland_client","Anonymous interface",null,null],[8,"Interface","","The description of a wayland interface",null,null],[16,"Request","","Set of requests associated to this interface",0,null],[16,"Event","","Set of events associated to this interface",0,null],[18,"NAME","","Name of this interface",0,null],[18,"VERSION","","Maximum supported version of this interface",0,null],[10,"c_interface","","Pointer to the C representation of this interface",0,null],[8,"MessageGroup","","A group of messages",null,null],[18,"MESSAGES","","Wire representation of this MessageGroup",1,null],[16,"Map","","The wrapper type for ObjectMap allowing the mapping of Object and NewId arguments to the object map during parsing.",1,null],[10,"is_destructor","","Whether this message is a destructor",1,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[10,"child","","Retrieve the child `Object` associated with this message if any",1,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[10,"from_raw","","Construct a message from its raw representation",1,null],[10,"into_raw","","Turn this message into its raw representation",1,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[10,"from_raw_c","","Construct a message of this group from its C representation",1,null],[10,"as_raw_c_in","","Build a C representation of this message",1,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[4,"NoMessage","","An empty enum representing a MessageGroup with no messages",null,null],[3,"Display","","A connection to a wayland server",null,null],[3,"EventQueue","","An event queue for protocol messages",null,null],[3,"QueueToken","","A token representing this event queue",null,null],[3,"ReadEventsGuard","","A guard over a read intention.",null,null],[3,"GlobalManager","","An utility to manage global objects",null,null],[3,"NewProxy","","A newly-created proxy that needs implementation",null,null],[3,"Proxy","","An handle to a wayland proxy",null,null],[4,"ConnectError","","Enum representing the possible reasons why connecting to the wayland server failed",null,null],[13,"NoWaylandLib","","The library was compiled with the `dlopen` feature, and the `libwayland-client.so` library could not be found at runtime",2,null],[13,"XdgRuntimeDirNotSet","","The `XDG_RUNTIME_DIR` variable is not set while it should be",2,null],[13,"NoCompositorListening","","Any needed library was found, but the listening socket of the server could not be found.",2,null],[13,"InvalidName","","The provided socket name is invalid",2,null],[13,"InvalidFd","","The FD provided in `WAYLAND_SOCKET` was invalid",2,null],[4,"GlobalError","","An error that occured trying to bind a global",null,null],[13,"Missing","","The requested global was missing",3,null],[13,"VersionTooLow","","The global abvertized by the server has a lower version number than the one requested",3,null],[4,"GlobalEvent","","Event provided to the user callback of GlobalManager",null,null],[13,"New","","A new global was created",4,null],[12,"id","wayland_client::GlobalEvent","Id of the new global",4,null],[12,"interface","","Interface of the new global",4,null],[12,"version","","Maximum supported version of the new global",4,null],[13,"Removed","wayland_client","A global was removed",4,null],[12,"id","wayland_client::GlobalEvent","Id of the removed global",4,null],[12,"interface","","Interface of the removed global",4,null],[4,"ProxyMap","wayland_client","This type only exists for type-level compatibility with the rust implementation.",null,null],[11,"fmt","","",2,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"connect_to_env","","Attempt to connect to a wayland server using the contents of the environment variables",5,{"o":{"g":["connecterror"],"n":"result"}}],[11,"connect_to_name","","Attempt to connect to a wayland server socket with given name",5,{"i":[{"n":"s"}],"o":{"g":["connecterror"],"n":"result"}}],[11,"from_fd","","Attempt to use an already connected unix socket on given FD to start a wayland connection",5,{"i":[{"n":"rawfd"}],"o":{"g":["connecterror"],"n":"result"}}],[11,"flush","","Non-blocking write to the server",5,{"i":[{"n":"self"}],"o":{"n":"result"}}],[11,"create_event_queue","","Create a new event queue associated with this wayland connection",5,{"i":[{"n":"self"}],"o":{"n":"eventqueue"}}],[11,"from_external_display","","Create a Display and Event Queue from an external display",5,null],[11,"get_display_ptr","","Retrieve the `wl_display` pointer",5,null],[11,"deref","","",5,{"i":[{"n":"self"}],"o":{"n":"proxy"}}],[11,"dispatch","","Dispatches events from the internal buffer.",6,{"i":[{"n":"self"}],"o":{"g":["u32"],"n":"result"}}],[11,"dispatch_pending","","Dispatches pending events from the internal buffer.",6,{"i":[{"n":"self"}],"o":{"g":["u32"],"n":"result"}}],[11,"sync_roundtrip","","Synchronous roundtrip",6,{"i":[{"n":"self"}],"o":{"g":["u32"],"n":"result"}}],[11,"get_token","","Create a new token associated with this event queue",6,{"i":[{"n":"self"}],"o":{"n":"queuetoken"}}],[11,"prepare_read","","Prepare an conccurent read",6,{"i":[{"n":"self"}],"o":{"g":["readeventsguard"],"n":"option"}}],[11,"read_events","","Read events",7,{"i":[{"n":"self"}],"o":{"g":["i32"],"n":"result"}}],[11,"cancel","","Cancel the read",7,{"i":[{"n":"self"}]}],[11,"drop","","",7,{"i":[{"n":"self"}]}],[11,"clone","","",8,{"i":[{"n":"self"}],"o":{"n":"globalmanager"}}],[11,"fmt","","",3,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",3,{"i":[{"n":"self"},{"n":"globalerror"}],"o":{"n":"bool"}}],[11,"ne","","",3,{"i":[{"n":"self"},{"n":"globalerror"}],"o":{"n":"bool"}}],[11,"new","","Create a global manager handling a registry",8,{"i":[{"n":"proxy"}],"o":{"n":"globalmanager"}}],[11,"new_with_cb","","Create a global manager handling a registry with a callback",8,{"i":[{"n":"proxy"},{"n":"f"}],"o":{"n":"globalmanager"}}],[11,"instantiate_auto","","Instanciate a global with highest available version",8,{"i":[{"n":"self"},{"n":"f"}],"o":{"g":["proxy","globalerror"],"n":"result"}}],[11,"instantiate_exact","","Instanciate a global with a specific version",8,{"i":[{"n":"self"},{"n":"u32"},{"n":"f"}],"o":{"g":["proxy","globalerror"],"n":"result"}}],[11,"list","","Retrieve the list of currently known globals",8,{"i":[{"n":"self"}],"o":{"n":"vec"}}],[11,"clone","","",9,{"i":[{"n":"self"}],"o":{"n":"proxy"}}],[11,"eq","","",9,{"i":[{"n":"self"},{"n":"proxy"}],"o":{"n":"bool"}}],[11,"send","","Send a request through this object",9,null],[11,"is_alive","","Check if the object associated with this proxy is still alive",9,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"version","","Retrieve the interface version of this wayland object instance",9,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"id","","Retrieve the object id of this wayland object",9,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"user_data","","Access the arbitrary payload associated to this object",9,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"equals","","Check if the other proxy refers to the same underlying wayland object",9,{"i":[{"n":"self"},{"n":"proxy"}],"o":{"n":"bool"}}],[11,"child","","Create a new child object",9,{"i":[{"n":"self"}],"o":{"n":"newproxy"}}],[11,"anonymize","","Creates a handle of this proxy with its actual type erased",9,{"i":[{"n":"self"}],"o":{"g":["anonymousobject"],"n":"proxy"}}],[11,"make_wrapper","","Create a wrapper for this object for queue management",9,{"i":[{"n":"self"},{"n":"queuetoken"}],"o":{"g":["proxy"],"n":"result"}}],[11,"is_external","","Check whether this proxy is managed by the library or not",9,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"c_ptr","","Get a raw pointer to the underlying wayland object",9,null],[11,"from_c_ptr","","Create a `Proxy` instance from a C pointer",9,null],[11,"implement","","Implement this proxy using given function and implementation data.",10,{"i":[{"n":"self"},{"n":"f"},{"n":"ud"}],"o":{"n":"proxy"}}],[11,"implement_nonsend","","Implement this proxy using given function and implementation data.",10,{"i":[{"n":"self"},{"n":"impl"},{"n":"ud"},{"n":"queuetoken"}],"o":{"n":"proxy"}}],[11,"c_ptr","","Get a raw pointer to the underlying wayland object",10,null],[11,"from_c_ptr","","Create a `NewProxy` instance from a C pointer.",10,null],[0,"cursor","","Cursor utilities",null,null],[3,"CursorTheme","wayland_client::cursor","Represents a cursor theme loaded from the system.",null,null],[3,"Cursor","","A cursor from a theme. Can contain several images if animated.",null,null],[3,"CursorImageBuffer","","A buffer containing a cursor image.",null,null],[5,"is_available","","Checks if the wayland-cursor lib is available and can be used",null,{"o":{"n":"bool"}}],[5,"load_theme","","Attempts to load a cursor theme from given name.",null,{"i":[{"g":["str"],"n":"option"},{"n":"u32"},{"n":"proxy"}],"o":{"n":"cursortheme"}}],[11,"get_cursor","","Retrieve a cursor from the theme.",11,{"i":[{"n":"self"},{"n":"str"}],"o":{"g":["cursor"],"n":"option"}}],[11,"drop","","",11,{"i":[{"n":"self"}]}],[11,"name","","Retrieve the name of this cursor.",12,{"i":[{"n":"self"}],"o":{"n":"string"}}],[11,"image_count","","Retrieve the number of images contained in this animated cursor",12,{"i":[{"n":"self"}],"o":{"n":"usize"}}],[11,"frame","","Retrieve the image number of cursor animation.",12,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"usize"}}],[11,"frame_and_duration","","Retrieve the image number and its duration.",12,null],[11,"frame_buffer","","Retrieve a `CursorImageBuffer` containing the given image of an animation.",12,{"i":[{"n":"self"},{"n":"usize"}],"o":{"g":["cursorimagebuffer"],"n":"option"}}],[11,"frame_info","","Retrive the metadate associated with given frame of the animation.",12,{"i":[{"n":"self"},{"n":"usize"}],"o":{"n":"option"}}],[11,"deref","","",13,{"i":[{"n":"self"}],"o":{"n":"proxy"}}],[0,"egl","wayland_client","EGL utilities",null,null],[3,"WlEglSurface","wayland_client::egl","EGL surface",null,null],[5,"is_available","","Checks if the wayland-egl lib is available and can be used",null,{"o":{"n":"bool"}}],[11,"new","","Create an EGL surface from a wayland surface",14,{"i":[{"n":"proxy"},{"n":"i32"},{"n":"i32"}],"o":{"n":"wleglsurface"}}],[11,"new_from_raw","","Create an EGL surface from a raw pointer to a wayland surface",14,null],[11,"get_size","","Fetch current size of the EGL surface",14,null],[11,"resize","","Resize the EGL surface",14,{"i":[{"n":"self"},{"n":"i32"},{"n":"i32"},{"n":"i32"},{"n":"i32"}]}],[11,"ptr","","Raw pointer to the EGL surface",14,null],[11,"drop","","",14,{"i":[{"n":"self"}]}],[11,"get","wayland_client","Unusable method only existing for type-level compatibility",15,{"i":[{"n":"self"},{"n":"u32"}],"o":{"g":["proxy"],"n":"option"}}],[11,"get_new","","Unusable method only existing for type-level compatibility",15,{"i":[{"n":"self"},{"n":"u32"}],"o":{"g":["newproxy"],"n":"option"}}],[0,"sys","","C-associated types",null,null],[0,"client","wayland_client::sys","Bindings to the client library `libwayland-client.so`",null,null],[4,"wl_proxy","wayland_client::sys::client","",null,null],[4,"wl_display","","",null,null],[4,"wl_event_queue","","",null,null],[3,"WaylandClient","","",null,null],[12,"wl_display_connect_to_fd","","",16,null],[12,"wl_display_connect","","",16,null],[12,"wl_display_disconnect","","",16,null],[12,"wl_display_get_fd","","",16,null],[12,"wl_display_roundtrip","","",16,null],[12,"wl_display_read_events","","",16,null],[12,"wl_display_prepare_read","","",16,null],[12,"wl_display_cancel_read","","",16,null],[12,"wl_display_dispatch","","",16,null],[12,"wl_display_dispatch_pending","","",16,null],[12,"wl_display_get_error","","",16,null],[12,"wl_display_get_protocol_error","","",16,null],[12,"wl_display_flush","","",16,null],[12,"wl_event_queue_destroy","","",16,null],[12,"wl_display_create_queue","","",16,null],[12,"wl_display_roundtrip_queue","","",16,null],[12,"wl_display_prepare_read_queue","","",16,null],[12,"wl_display_dispatch_queue","","",16,null],[12,"wl_display_dispatch_queue_pending","","",16,null],[12,"wl_proxy_create","","",16,null],[12,"wl_proxy_destroy","","",16,null],[12,"wl_proxy_add_listener","","",16,null],[12,"wl_proxy_get_listener","","",16,null],[12,"wl_proxy_add_dispatcher","","",16,null],[12,"wl_proxy_marshal_array_constructor","","",16,null],[12,"wl_proxy_marshal_array_constructor_versioned","","",16,null],[12,"wl_proxy_marshal_array","","",16,null],[12,"wl_proxy_set_user_data","","",16,null],[12,"wl_proxy_get_user_data","","",16,null],[12,"wl_proxy_get_id","","",16,null],[12,"wl_proxy_get_class","","",16,null],[12,"wl_proxy_set_queue","","",16,null],[12,"wl_proxy_get_version","","",16,null],[12,"wl_proxy_create_wrapper","","",16,null],[12,"wl_proxy_wrapper_destroy","","",16,null],[12,"wl_log_set_handler_client","","",16,null],[12,"wl_list_init","","",16,null],[12,"wl_list_insert","","",16,null],[12,"wl_list_remove","","",16,null],[12,"wl_list_length","","",16,null],[12,"wl_list_empty","","",16,null],[12,"wl_list_insert_list","","",16,null],[12,"wl_array_init","","",16,null],[12,"wl_array_release","","",16,null],[12,"wl_array_add","","",16,null],[12,"wl_array_copy","","",16,null],[12,"wl_proxy_marshal_constructor","","",16,null],[12,"wl_proxy_marshal_constructor_versioned","","",16,null],[12,"wl_proxy_marshal","","",16,null],[3,"WAYLAND_CLIENT_OPTION","","",null,null],[3,"WAYLAND_CLIENT_HANDLE","","",null,null],[5,"is_lib_available","","",null,{"o":{"n":"bool"}}],[0,"common","wayland_client::sys","Various types and functions that are used by both the client and the server libraries.",null,null],[3,"wl_message","wayland_client::sys::common","",null,null],[12,"name","","",17,null],[12,"signature","","",17,null],[12,"types","","",17,null],[3,"wl_interface","","",null,null],[12,"name","","",18,null],[12,"version","","",18,null],[12,"request_count","","",18,null],[12,"requests","","",18,null],[12,"event_count","","",18,null],[12,"events","","",18,null],[3,"wl_list","","",null,null],[12,"prev","","",19,null],[12,"next","","",19,null],[3,"wl_array","","",null,null],[12,"size","","",20,null],[12,"alloc","","",20,null],[12,"data","","",20,null],[6,"wl_fixed_t","","",null,null],[5,"wl_fixed_to_double","","",null,{"i":[{"n":"i32"}],"o":{"n":"f64"}}],[5,"wl_fixed_from_double","","",null,{"i":[{"n":"f64"}],"o":{"n":"i32"}}],[5,"wl_fixed_to_int","","",null,{"i":[{"n":"i32"}],"o":{"n":"i32"}}],[5,"wl_fixed_from_int","","",null,{"i":[{"n":"i32"}],"o":{"n":"i32"}}],[19,"wl_argument","","",null,null],[12,"i","","",21,null],[12,"u","","",21,null],[12,"f","","",21,null],[12,"s","","",21,null],[12,"o","","",21,null],[12,"n","","",21,null],[12,"a","","",21,null],[12,"h","","",21,null],[6,"wl_dispatcher_func_t","","",null,null],[6,"wl_log_func_t","","",null,null],[0,"protocol_interfaces","wayland_client::sys","",null,null],[7,"wl_display_requests","wayland_client::sys::protocol_interfaces","",null,null],[7,"wl_display_events","","",null,null],[7,"wl_display_interface","","",null,null],[7,"wl_registry_requests","","",null,null],[7,"wl_registry_events","","",null,null],[7,"wl_registry_interface","","",null,null],[7,"wl_callback_events","","",null,null],[7,"wl_callback_interface","","",null,null],[7,"wl_compositor_requests","","",null,null],[7,"wl_compositor_interface","","",null,null],[7,"wl_shm_pool_requests","","",null,null],[7,"wl_shm_pool_interface","","",null,null],[7,"wl_shm_requests","","",null,null],[7,"wl_shm_events","","",null,null],[7,"wl_shm_interface","","",null,null],[7,"wl_buffer_requests","","",null,null],[7,"wl_buffer_events","","",null,null],[7,"wl_buffer_interface","","",null,null],[7,"wl_data_offer_requests","","",null,null],[7,"wl_data_offer_events","","",null,null],[7,"wl_data_offer_interface","","",null,null],[7,"wl_data_source_requests","","",null,null],[7,"wl_data_source_events","","",null,null],[7,"wl_data_source_interface","","",null,null],[7,"wl_data_device_requests","","",null,null],[7,"wl_data_device_events","","",null,null],[7,"wl_data_device_interface","","",null,null],[7,"wl_data_device_manager_requests","","",null,null],[7,"wl_data_device_manager_interface","","",null,null],[7,"wl_shell_requests","","",null,null],[7,"wl_shell_interface","","",null,null],[7,"wl_shell_surface_requests","","",null,null],[7,"wl_shell_surface_events","","",null,null],[7,"wl_shell_surface_interface","","",null,null],[7,"wl_surface_requests","","",null,null],[7,"wl_surface_events","","",null,null],[7,"wl_surface_interface","","",null,null],[7,"wl_seat_requests","","",null,null],[7,"wl_seat_events","","",null,null],[7,"wl_seat_interface","","",null,null],[7,"wl_pointer_requests","","",null,null],[7,"wl_pointer_events","","",null,null],[7,"wl_pointer_interface","","",null,null],[7,"wl_keyboard_requests","","",null,null],[7,"wl_keyboard_events","","",null,null],[7,"wl_keyboard_interface","","",null,null],[7,"wl_touch_requests","","",null,null],[7,"wl_touch_events","","",null,null],[7,"wl_touch_interface","","",null,null],[7,"wl_output_requests","","",null,null],[7,"wl_output_events","","",null,null],[7,"wl_output_interface","","",null,null],[7,"wl_region_requests","","",null,null],[7,"wl_region_interface","","",null,null],[7,"wl_subcompositor_requests","","",null,null],[7,"wl_subcompositor_interface","","",null,null],[7,"wl_subsurface_requests","","",null,null],[7,"wl_subsurface_interface","","",null,null],[0,"protocol","wayland_client","Generated interfaces for the core wayland protocol",null,null],[0,"wl_display","wayland_client::protocol","core global object",null,null],[3,"WlDisplay","wayland_client::protocol::wl_display","",null,null],[4,"Error","","global error values",null,null],[13,"InvalidObject","","server couldn't find object",22,null],[13,"InvalidMethod","","method doesn't exist on the specified interface",22,null],[13,"NoMemory","","server is out of memory",22,null],[4,"Request","","",null,null],[13,"Sync","","asynchronous roundtrip",23,null],[12,"callback","wayland_client::protocol::wl_display::Request","",23,null],[13,"GetRegistry","wayland_client::protocol::wl_display","get global registry object",23,null],[12,"registry","wayland_client::protocol::wl_display::Request","",23,null],[4,"Event","wayland_client::protocol::wl_display","",null,null],[13,"Error","","fatal error event",24,null],[12,"object_id","wayland_client::protocol::wl_display::Event","",24,null],[12,"code","","",24,null],[12,"message","","",24,null],[13,"DeleteId","wayland_client::protocol::wl_display","acknowledge object ID deletion",24,null],[12,"id","wayland_client::protocol::wl_display::Event","",24,null],[8,"RequestsTrait","wayland_client::protocol::wl_display","",null,null],[10,"sync","","asynchronous roundtrip",25,{"i":[{"n":"self"},{"n":"f"}],"o":{"g":["proxy"],"n":"result"}}],[10,"get_registry","","get global registry object",25,{"i":[{"n":"self"},{"n":"f"}],"o":{"g":["proxy"],"n":"result"}}],[0,"wl_registry","wayland_client::protocol","global registry object",null,null],[3,"WlRegistry","wayland_client::protocol::wl_registry","",null,null],[4,"Request","","",null,null],[13,"Bind","","bind an object to the display",26,null],[12,"name","wayland_client::protocol::wl_registry::Request","",26,null],[12,"id","","",26,null],[4,"Event","wayland_client::protocol::wl_registry","",null,null],[13,"Global","","announce global object",27,null],[12,"name","wayland_client::protocol::wl_registry::Event","",27,null],[12,"interface","","",27,null],[12,"version","","",27,null],[13,"GlobalRemove","wayland_client::protocol::wl_registry","announce removal of global object",27,null],[12,"name","wayland_client::protocol::wl_registry::Event","",27,null],[8,"RequestsTrait","wayland_client::protocol::wl_registry","",null,null],[10,"bind","","bind an object to the display",28,{"i":[{"n":"self"},{"n":"u32"},{"n":"u32"},{"n":"f"}],"o":{"g":["proxy"],"n":"result"}}],[0,"wl_callback","wayland_client::protocol","callback object",null,null],[3,"WlCallback","wayland_client::protocol::wl_callback","",null,null],[4,"Request","","",null,null],[4,"Event","","",null,null],[13,"Done","","done event",29,null],[12,"callback_data","wayland_client::protocol::wl_callback::Event","",29,null],[8,"RequestsTrait","wayland_client::protocol::wl_callback","",null,null],[0,"wl_compositor","wayland_client::protocol","the compositor singleton",null,null],[3,"WlCompositor","wayland_client::protocol::wl_compositor","",null,null],[4,"Request","","",null,null],[13,"CreateSurface","","create new surface",30,null],[12,"id","wayland_client::protocol::wl_compositor::Request","",30,null],[13,"CreateRegion","wayland_client::protocol::wl_compositor","create new region",30,null],[12,"id","wayland_client::protocol::wl_compositor::Request","",30,null],[4,"Event","wayland_client::protocol::wl_compositor","",null,null],[8,"RequestsTrait","","",null,null],[10,"create_surface","","create new surface",31,{"i":[{"n":"self"},{"n":"f"}],"o":{"g":["proxy"],"n":"result"}}],[10,"create_region","","create new region",31,{"i":[{"n":"self"},{"n":"f"}],"o":{"g":["proxy"],"n":"result"}}],[0,"wl_shm_pool","wayland_client::protocol","a shared memory pool",null,null],[3,"WlShmPool","wayland_client::protocol::wl_shm_pool","",null,null],[4,"Request","","",null,null],[13,"CreateBuffer","","create a buffer from the pool",32,null],[12,"id","wayland_client::protocol::wl_shm_pool::Request","",32,null],[12,"offset","","",32,null],[12,"width","","",32,null],[12,"height","","",32,null],[12,"stride","","",32,null],[12,"format","","",32,null],[13,"Destroy","wayland_client::protocol::wl_shm_pool","destroy the pool",32,null],[13,"Resize","","change the size of the pool mapping",32,null],[12,"size","wayland_client::protocol::wl_shm_pool::Request","",32,null],[4,"Event","wayland_client::protocol::wl_shm_pool","",null,null],[8,"RequestsTrait","","",null,null],[10,"create_buffer","","create a buffer from the pool",33,{"i":[{"n":"self"},{"n":"i32"},{"n":"i32"},{"n":"i32"},{"n":"i32"},{"n":"format"},{"n":"f"}],"o":{"g":["proxy"],"n":"result"}}],[10,"destroy","","destroy the pool",33,null],[10,"resize","","change the size of the pool mapping",33,null],[0,"wl_shm","wayland_client::protocol","shared memory support",null,null],[3,"WlShm","wayland_client::protocol::wl_shm","",null,null],[4,"Error","","wl_shm error values",null,null],[13,"InvalidFormat","","buffer format is not known",34,null],[13,"InvalidStride","","invalid size or stride during pool or buffer creation",34,null],[13,"InvalidFd","","mmapping the file descriptor failed",34,null],[4,"Format","","pixel formats",null,null],[13,"Argb8888","","32-bit ARGB format, [31:0] A:R:G:B 8:8:8:8 little endian",35,null],[13,"Xrgb8888","","32-bit RGB format, [31:0] x:R:G:B 8:8:8:8 little endian",35,null],[13,"C8","","8-bit color index format, [7:0] C",35,null],[13,"Rgb332","","8-bit RGB format, [7:0] R:G:B 3:3:2",35,null],[13,"Bgr233","","8-bit BGR format, [7:0] B:G:R 2:3:3",35,null],[13,"Xrgb4444","","16-bit xRGB format, [15:0] x:R:G:B 4:4:4:4 little endian",35,null],[13,"Xbgr4444","","16-bit xBGR format, [15:0] x:B:G:R 4:4:4:4 little endian",35,null],[13,"Rgbx4444","","16-bit RGBx format, [15:0] R:G:B:x 4:4:4:4 little endian",35,null],[13,"Bgrx4444","","16-bit BGRx format, [15:0] B:G:R:x 4:4:4:4 little endian",35,null],[13,"Argb4444","","16-bit ARGB format, [15:0] A:R:G:B 4:4:4:4 little endian",35,null],[13,"Abgr4444","","16-bit ABGR format, [15:0] A:B:G:R 4:4:4:4 little endian",35,null],[13,"Rgba4444","","16-bit RBGA format, [15:0] R:G:B:A 4:4:4:4 little endian",35,null],[13,"Bgra4444","","16-bit BGRA format, [15:0] B:G:R:A 4:4:4:4 little endian",35,null],[13,"Xrgb1555","","16-bit xRGB format, [15:0] x:R:G:B 1:5:5:5 little endian",35,null],[13,"Xbgr1555","","16-bit xBGR 1555 format, [15:0] x:B:G:R 1:5:5:5 little endian",35,null],[13,"Rgbx5551","","16-bit RGBx 5551 format, [15:0] R:G:B:x 5:5:5:1 little endian",35,null],[13,"Bgrx5551","","16-bit BGRx 5551 format, [15:0] B:G:R:x 5:5:5:1 little endian",35,null],[13,"Argb1555","","16-bit ARGB 1555 format, [15:0] A:R:G:B 1:5:5:5 little endian",35,null],[13,"Abgr1555","","16-bit ABGR 1555 format, [15:0] A:B:G:R 1:5:5:5 little endian",35,null],[13,"Rgba5551","","16-bit RGBA 5551 format, [15:0] R:G:B:A 5:5:5:1 little endian",35,null],[13,"Bgra5551","","16-bit BGRA 5551 format, [15:0] B:G:R:A 5:5:5:1 little endian",35,null],[13,"Rgb565","","16-bit RGB 565 format, [15:0] R:G:B 5:6:5 little endian",35,null],[13,"Bgr565","","16-bit BGR 565 format, [15:0] B:G:R 5:6:5 little endian",35,null],[13,"Rgb888","","24-bit RGB format, [23:0] R:G:B little endian",35,null],[13,"Bgr888","","24-bit BGR format, [23:0] B:G:R little endian",35,null],[13,"Xbgr8888","","32-bit xBGR format, [31:0] x:B:G:R 8:8:8:8 little endian",35,null],[13,"Rgbx8888","","32-bit RGBx format, [31:0] R:G:B:x 8:8:8:8 little endian",35,null],[13,"Bgrx8888","","32-bit BGRx format, [31:0] B:G:R:x 8:8:8:8 little endian",35,null],[13,"Abgr8888","","32-bit ABGR format, [31:0] A:B:G:R 8:8:8:8 little endian",35,null],[13,"Rgba8888","","32-bit RGBA format, [31:0] R:G:B:A 8:8:8:8 little endian",35,null],[13,"Bgra8888","","32-bit BGRA format, [31:0] B:G:R:A 8:8:8:8 little endian",35,null],[13,"Xrgb2101010","","32-bit xRGB format, [31:0] x:R:G:B 2:10:10:10 little endian",35,null],[13,"Xbgr2101010","","32-bit xBGR format, [31:0] x:B:G:R 2:10:10:10 little endian",35,null],[13,"Rgbx1010102","","32-bit RGBx format, [31:0] R:G:B:x 10:10:10:2 little endian",35,null],[13,"Bgrx1010102","","32-bit BGRx format, [31:0] B:G:R:x 10:10:10:2 little endian",35,null],[13,"Argb2101010","","32-bit ARGB format, [31:0] A:R:G:B 2:10:10:10 little endian",35,null],[13,"Abgr2101010","","32-bit ABGR format, [31:0] A:B:G:R 2:10:10:10 little endian",35,null],[13,"Rgba1010102","","32-bit RGBA format, [31:0] R:G:B:A 10:10:10:2 little endian",35,null],[13,"Bgra1010102","","32-bit BGRA format, [31:0] B:G:R:A 10:10:10:2 little endian",35,null],[13,"Yuyv","","packed YCbCr format, [31:0] Cr0:Y1:Cb0:Y0 8:8:8:8 little endian",35,null],[13,"Yvyu","","packed YCbCr format, [31:0] Cb0:Y1:Cr0:Y0 8:8:8:8 little endian",35,null],[13,"Uyvy","","packed YCbCr format, [31:0] Y1:Cr0:Y0:Cb0 8:8:8:8 little endian",35,null],[13,"Vyuy","","packed YCbCr format, [31:0] Y1:Cb0:Y0:Cr0 8:8:8:8 little endian",35,null],[13,"Ayuv","","packed AYCbCr format, [31:0] A:Y:Cb:Cr 8:8:8:8 little endian",35,null],[13,"Nv12","","2 plane YCbCr Cr:Cb format, 2x2 subsampled Cr:Cb plane",35,null],[13,"Nv21","","2 plane YCbCr Cb:Cr format, 2x2 subsampled Cb:Cr plane",35,null],[13,"Nv16","","2 plane YCbCr Cr:Cb format, 2x1 subsampled Cr:Cb plane",35,null],[13,"Nv61","","2 plane YCbCr Cb:Cr format, 2x1 subsampled Cb:Cr plane",35,null],[13,"Yuv410","","3 plane YCbCr format, 4x4 subsampled Cb (1) and Cr (2) planes",35,null],[13,"Yvu410","","3 plane YCbCr format, 4x4 subsampled Cr (1) and Cb (2) planes",35,null],[13,"Yuv411","","3 plane YCbCr format, 4x1 subsampled Cb (1) and Cr (2) planes",35,null],[13,"Yvu411","","3 plane YCbCr format, 4x1 subsampled Cr (1) and Cb (2) planes",35,null],[13,"Yuv420","","3 plane YCbCr format, 2x2 subsampled Cb (1) and Cr (2) planes",35,null],[13,"Yvu420","","3 plane YCbCr format, 2x2 subsampled Cr (1) and Cb (2) planes",35,null],[13,"Yuv422","","3 plane YCbCr format, 2x1 subsampled Cb (1) and Cr (2) planes",35,null],[13,"Yvu422","","3 plane YCbCr format, 2x1 subsampled Cr (1) and Cb (2) planes",35,null],[13,"Yuv444","","3 plane YCbCr format, non-subsampled Cb (1) and Cr (2) planes",35,null],[13,"Yvu444","","3 plane YCbCr format, non-subsampled Cr (1) and Cb (2) planes",35,null],[4,"Request","","",null,null],[13,"CreatePool","","create a shm pool",36,null],[12,"id","wayland_client::protocol::wl_shm::Request","",36,null],[12,"fd","","",36,null],[12,"size","","",36,null],[4,"Event","wayland_client::protocol::wl_shm","",null,null],[13,"Format","","pixel format description",37,null],[12,"format","wayland_client::protocol::wl_shm::Event","",37,null],[8,"RequestsTrait","wayland_client::protocol::wl_shm","",null,null],[10,"create_pool","","create a shm pool",38,{"i":[{"n":"self"},{"n":"rawfd"},{"n":"i32"},{"n":"f"}],"o":{"g":["proxy"],"n":"result"}}],[0,"wl_buffer","wayland_client::protocol","content for a wl_surface",null,null],[3,"WlBuffer","wayland_client::protocol::wl_buffer","",null,null],[4,"Request","","",null,null],[13,"Destroy","","destroy a buffer",39,null],[4,"Event","","",null,null],[13,"Release","","compositor releases buffer",40,null],[8,"RequestsTrait","","",null,null],[10,"destroy","","destroy a buffer",41,null],[0,"wl_data_offer","wayland_client::protocol","offer to transfer data",null,null],[3,"WlDataOffer","wayland_client::protocol::wl_data_offer","",null,null],[4,"Error","","",null,null],[13,"InvalidFinish","","finish request was called untimely",42,null],[13,"InvalidActionMask","","action mask contains invalid values",42,null],[13,"InvalidAction","","action argument has an invalid value",42,null],[13,"InvalidOffer","","offer doesn't accept this request",42,null],[4,"Request","","",null,null],[13,"Accept","","accept one of the offered mime types",43,null],[12,"serial","wayland_client::protocol::wl_data_offer::Request","",43,null],[12,"mime_type","","",43,null],[13,"Receive","wayland_client::protocol::wl_data_offer","request that the data is transferred",43,null],[12,"mime_type","wayland_client::protocol::wl_data_offer::Request","",43,null],[12,"fd","","",43,null],[13,"Destroy","wayland_client::protocol::wl_data_offer","destroy data offer",43,null],[13,"Finish","","the offer will no longer be used",43,null],[13,"SetActions","","set the available/preferred drag-and-drop actions",43,null],[12,"dnd_actions","wayland_client::protocol::wl_data_offer::Request","",43,null],[12,"preferred_action","","",43,null],[4,"Event","wayland_client::protocol::wl_data_offer","",null,null],[13,"Offer","","advertise offered mime type",44,null],[12,"mime_type","wayland_client::protocol::wl_data_offer::Event","",44,null],[13,"SourceActions","wayland_client::protocol::wl_data_offer","notify the source-side available actions",44,null],[12,"source_actions","wayland_client::protocol::wl_data_offer::Event","",44,null],[13,"Action","wayland_client::protocol::wl_data_offer","notify the selected action",44,null],[12,"dnd_action","wayland_client::protocol::wl_data_offer::Event","",44,null],[8,"RequestsTrait","wayland_client::protocol::wl_data_offer","",null,null],[10,"accept","","accept one of the offered mime types",45,null],[10,"receive","","request that the data is transferred",45,null],[10,"destroy","","destroy data offer",45,null],[10,"finish","","the offer will no longer be used",45,null],[10,"set_actions","","set the available/preferred drag-and-drop actions",45,null],[0,"wl_data_source","wayland_client::protocol","offer to transfer data",null,null],[3,"WlDataSource","wayland_client::protocol::wl_data_source","",null,null],[4,"Error","","",null,null],[13,"InvalidActionMask","","action mask contains invalid values",46,null],[13,"InvalidSource","","source doesn't accept this request",46,null],[4,"Request","","",null,null],[13,"Offer","","add an offered mime type",47,null],[12,"mime_type","wayland_client::protocol::wl_data_source::Request","",47,null],[13,"Destroy","wayland_client::protocol::wl_data_source","destroy the data source",47,null],[13,"SetActions","","set the available drag-and-drop actions",47,null],[12,"dnd_actions","wayland_client::protocol::wl_data_source::Request","",47,null],[4,"Event","wayland_client::protocol::wl_data_source","",null,null],[13,"Target","","a target accepts an offered mime type",48,null],[12,"mime_type","wayland_client::protocol::wl_data_source::Event","",48,null],[13,"Send","wayland_client::protocol::wl_data_source","send the data",48,null],[12,"mime_type","wayland_client::protocol::wl_data_source::Event","",48,null],[12,"fd","","",48,null],[13,"Cancelled","wayland_client::protocol::wl_data_source","selection was cancelled",48,null],[13,"DndDropPerformed","","the drag-and-drop operation physically finished",48,null],[13,"DndFinished","","the drag-and-drop operation concluded",48,null],[13,"Action","","notify the selected action",48,null],[12,"dnd_action","wayland_client::protocol::wl_data_source::Event","",48,null],[8,"RequestsTrait","wayland_client::protocol::wl_data_source","",null,null],[10,"offer","","add an offered mime type",49,null],[10,"destroy","","destroy the data source",49,null],[10,"set_actions","","set the available drag-and-drop actions",49,null],[0,"wl_data_device","wayland_client::protocol","data transfer device",null,null],[3,"WlDataDevice","wayland_client::protocol::wl_data_device","",null,null],[4,"Error","","",null,null],[13,"Role","","given wl_surface has another role",50,null],[4,"Request","","",null,null],[13,"StartDrag","","start drag-and-drop operation",51,null],[12,"source","wayland_client::protocol::wl_data_device::Request","",51,null],[12,"origin","","",51,null],[12,"icon","","",51,null],[12,"serial","","",51,null],[13,"SetSelection","wayland_client::protocol::wl_data_device","copy data to the selection",51,null],[12,"source","wayland_client::protocol::wl_data_device::Request","",51,null],[12,"serial","","",51,null],[13,"Release","wayland_client::protocol::wl_data_device","destroy data device",51,null],[4,"Event","","",null,null],[13,"DataOffer","","introduce a new wl_data_offer",52,null],[12,"id","wayland_client::protocol::wl_data_device::Event","",52,null],[13,"Enter","wayland_client::protocol::wl_data_device","initiate drag-and-drop session",52,null],[12,"serial","wayland_client::protocol::wl_data_device::Event","",52,null],[12,"surface","","",52,null],[12,"x","","",52,null],[12,"y","","",52,null],[12,"id","","",52,null],[13,"Leave","wayland_client::protocol::wl_data_device","end drag-and-drop session",52,null],[13,"Motion","","drag-and-drop session motion",52,null],[12,"time","wayland_client::protocol::wl_data_device::Event","",52,null],[12,"x","","",52,null],[12,"y","","",52,null],[13,"Drop","wayland_client::protocol::wl_data_device","end drag-and-drop session successfully",52,null],[13,"Selection","","advertise new selection",52,null],[12,"id","wayland_client::protocol::wl_data_device::Event","",52,null],[8,"RequestsTrait","wayland_client::protocol::wl_data_device","",null,null],[10,"start_drag","","start drag-and-drop operation",53,null],[10,"set_selection","","copy data to the selection",53,null],[10,"release","","destroy data device",53,null],[0,"wl_data_device_manager","wayland_client::protocol","data transfer interface",null,null],[3,"DndAction","wayland_client::protocol::wl_data_device_manager","drag and drop actions",null,null],[3,"WlDataDeviceManager","","",null,null],[4,"Request","","",null,null],[13,"CreateDataSource","","create a new data source",54,null],[12,"id","wayland_client::protocol::wl_data_device_manager::Request","",54,null],[13,"GetDataDevice","wayland_client::protocol::wl_data_device_manager","create a new data device",54,null],[12,"id","wayland_client::protocol::wl_data_device_manager::Request","",54,null],[12,"seat","","",54,null],[4,"Event","wayland_client::protocol::wl_data_device_manager","",null,null],[8,"RequestsTrait","","",null,null],[10,"create_data_source","","create a new data source",55,{"i":[{"n":"self"},{"n":"f"}],"o":{"g":["proxy"],"n":"result"}}],[10,"get_data_device","","create a new data device",55,{"i":[{"n":"self"},{"n":"proxy"},{"n":"f"}],"o":{"g":["proxy"],"n":"result"}}],[0,"wl_shell","wayland_client::protocol","create desktop-style surfaces",null,null],[3,"WlShell","wayland_client::protocol::wl_shell","",null,null],[4,"Error","","",null,null],[13,"Role","","given wl_surface has another role",56,null],[4,"Request","","",null,null],[13,"GetShellSurface","","create a shell surface from a surface",57,null],[12,"id","wayland_client::protocol::wl_shell::Request","",57,null],[12,"surface","","",57,null],[4,"Event","wayland_client::protocol::wl_shell","",null,null],[8,"RequestsTrait","","",null,null],[10,"get_shell_surface","","create a shell surface from a surface",58,{"i":[{"n":"self"},{"n":"proxy"},{"n":"f"}],"o":{"g":["proxy"],"n":"result"}}],[0,"wl_shell_surface","wayland_client::protocol","desktop-style metadata interface",null,null],[3,"Resize","wayland_client::protocol::wl_shell_surface","edge values for resizing",null,null],[3,"Transient","","details of transient behaviour",null,null],[3,"WlShellSurface","","",null,null],[4,"FullscreenMethod","","different method to set the surface fullscreen",null,null],[13,"Default","","no preference, apply default policy",59,null],[13,"Scale","","scale, preserve the surface's aspect ratio and center on output",59,null],[13,"Driver","","switch output mode to the smallest mode that can fit the surface, add black borders to compensate size mismatch",59,null],[13,"Fill","","no upscaling, center on output and add black borders to compensate size mismatch",59,null],[4,"Request","","",null,null],[13,"Pong","","respond to a ping event",60,null],[12,"serial","wayland_client::protocol::wl_shell_surface::Request","",60,null],[13,"Move","wayland_client::protocol::wl_shell_surface","start an interactive move",60,null],[12,"seat","wayland_client::protocol::wl_shell_surface::Request","",60,null],[12,"serial","","",60,null],[13,"Resize","wayland_client::protocol::wl_shell_surface","start an interactive resize",60,null],[12,"seat","wayland_client::protocol::wl_shell_surface::Request","",60,null],[12,"serial","","",60,null],[12,"edges","","",60,null],[13,"SetToplevel","wayland_client::protocol::wl_shell_surface","make the surface a toplevel surface",60,null],[13,"SetTransient","","make the surface a transient surface",60,null],[12,"parent","wayland_client::protocol::wl_shell_surface::Request","",60,null],[12,"x","","",60,null],[12,"y","","",60,null],[12,"flags","","",60,null],[13,"SetFullscreen","wayland_client::protocol::wl_shell_surface","make the surface a fullscreen surface",60,null],[12,"method","wayland_client::protocol::wl_shell_surface::Request","",60,null],[12,"framerate","","",60,null],[12,"output","","",60,null],[13,"SetPopup","wayland_client::protocol::wl_shell_surface","make the surface a popup surface",60,null],[12,"seat","wayland_client::protocol::wl_shell_surface::Request","",60,null],[12,"serial","","",60,null],[12,"parent","","",60,null],[12,"x","","",60,null],[12,"y","","",60,null],[12,"flags","","",60,null],[13,"SetMaximized","wayland_client::protocol::wl_shell_surface","make the surface a maximized surface",60,null],[12,"output","wayland_client::protocol::wl_shell_surface::Request","",60,null],[13,"SetTitle","wayland_client::protocol::wl_shell_surface","set surface title",60,null],[12,"title","wayland_client::protocol::wl_shell_surface::Request","",60,null],[13,"SetClass","wayland_client::protocol::wl_shell_surface","set surface class",60,null],[12,"class_","wayland_client::protocol::wl_shell_surface::Request","",60,null],[4,"Event","wayland_client::protocol::wl_shell_surface","",null,null],[13,"Ping","","ping client",61,null],[12,"serial","wayland_client::protocol::wl_shell_surface::Event","",61,null],[13,"Configure","wayland_client::protocol::wl_shell_surface","suggest resize",61,null],[12,"edges","wayland_client::protocol::wl_shell_surface::Event","",61,null],[12,"width","","",61,null],[12,"height","","",61,null],[13,"PopupDone","wayland_client::protocol::wl_shell_surface","popup interaction is done",61,null],[8,"RequestsTrait","","",null,null],[10,"pong","","respond to a ping event",62,null],[10,"_move","","start an interactive move",62,null],[10,"resize","","start an interactive resize",62,null],[10,"set_toplevel","","make the surface a toplevel surface",62,null],[10,"set_transient","","make the surface a transient surface",62,null],[10,"set_fullscreen","","make the surface a fullscreen surface",62,null],[10,"set_popup","","make the surface a popup surface",62,null],[10,"set_maximized","","make the surface a maximized surface",62,null],[10,"set_title","","set surface title",62,null],[10,"set_class","","set surface class",62,null],[0,"wl_surface","wayland_client::protocol","an onscreen surface",null,null],[3,"WlSurface","wayland_client::protocol::wl_surface","",null,null],[4,"Error","","wl_surface error values",null,null],[13,"InvalidScale","","buffer scale value is invalid",63,null],[13,"InvalidTransform","","buffer transform value is invalid",63,null],[4,"Request","","",null,null],[13,"Destroy","","delete surface",64,null],[13,"Attach","","set the surface contents",64,null],[12,"buffer","wayland_client::protocol::wl_surface::Request","",64,null],[12,"x","","",64,null],[12,"y","","",64,null],[13,"Damage","wayland_client::protocol::wl_surface","mark part of the surface damaged",64,null],[12,"x","wayland_client::protocol::wl_surface::Request","",64,null],[12,"y","","",64,null],[12,"width","","",64,null],[12,"height","","",64,null],[13,"Frame","wayland_client::protocol::wl_surface","request a frame throttling hint",64,null],[12,"callback","wayland_client::protocol::wl_surface::Request","",64,null],[13,"SetOpaqueRegion","wayland_client::protocol::wl_surface","set opaque region",64,null],[12,"region","wayland_client::protocol::wl_surface::Request","",64,null],[13,"SetInputRegion","wayland_client::protocol::wl_surface","set input region",64,null],[12,"region","wayland_client::protocol::wl_surface::Request","",64,null],[13,"Commit","wayland_client::protocol::wl_surface","commit pending surface state",64,null],[13,"SetBufferTransform","","sets the buffer transformation",64,null],[12,"transform","wayland_client::protocol::wl_surface::Request","",64,null],[13,"SetBufferScale","wayland_client::protocol::wl_surface","sets the buffer scaling factor",64,null],[12,"scale","wayland_client::protocol::wl_surface::Request","",64,null],[13,"DamageBuffer","wayland_client::protocol::wl_surface","mark part of the surface damaged using buffer coordinates",64,null],[12,"x","wayland_client::protocol::wl_surface::Request","",64,null],[12,"y","","",64,null],[12,"width","","",64,null],[12,"height","","",64,null],[4,"Event","wayland_client::protocol::wl_surface","",null,null],[13,"Enter","","surface enters an output",65,null],[12,"output","wayland_client::protocol::wl_surface::Event","",65,null],[13,"Leave","wayland_client::protocol::wl_surface","surface leaves an output",65,null],[12,"output","wayland_client::protocol::wl_surface::Event","",65,null],[8,"RequestsTrait","wayland_client::protocol::wl_surface","",null,null],[10,"destroy","","delete surface",66,null],[10,"attach","","set the surface contents",66,null],[10,"damage","","mark part of the surface damaged",66,null],[10,"frame","","request a frame throttling hint",66,{"i":[{"n":"self"},{"n":"f"}],"o":{"g":["proxy"],"n":"result"}}],[10,"set_opaque_region","","set opaque region",66,null],[10,"set_input_region","","set input region",66,null],[10,"commit","","commit pending surface state",66,null],[10,"set_buffer_transform","","sets the buffer transformation",66,null],[10,"set_buffer_scale","","sets the buffer scaling factor",66,null],[10,"damage_buffer","","mark part of the surface damaged using buffer coordinates",66,null],[0,"wl_seat","wayland_client::protocol","group of input devices",null,null],[3,"Capability","wayland_client::protocol::wl_seat","seat capability bitmask",null,null],[3,"WlSeat","","",null,null],[4,"Request","","",null,null],[13,"GetPointer","","return pointer object",67,null],[12,"id","wayland_client::protocol::wl_seat::Request","",67,null],[13,"GetKeyboard","wayland_client::protocol::wl_seat","return keyboard object",67,null],[12,"id","wayland_client::protocol::wl_seat::Request","",67,null],[13,"GetTouch","wayland_client::protocol::wl_seat","return touch object",67,null],[12,"id","wayland_client::protocol::wl_seat::Request","",67,null],[13,"Release","wayland_client::protocol::wl_seat","release the seat object",67,null],[4,"Event","","",null,null],[13,"Capabilities","","seat capabilities changed",68,null],[12,"capabilities","wayland_client::protocol::wl_seat::Event","",68,null],[13,"Name","wayland_client::protocol::wl_seat","unique identifier for this seat",68,null],[12,"name","wayland_client::protocol::wl_seat::Event","",68,null],[8,"RequestsTrait","wayland_client::protocol::wl_seat","",null,null],[10,"get_pointer","","return pointer object",69,{"i":[{"n":"self"},{"n":"f"}],"o":{"g":["proxy"],"n":"result"}}],[10,"get_keyboard","","return keyboard object",69,{"i":[{"n":"self"},{"n":"f"}],"o":{"g":["proxy"],"n":"result"}}],[10,"get_touch","","return touch object",69,{"i":[{"n":"self"},{"n":"f"}],"o":{"g":["proxy"],"n":"result"}}],[10,"release","","release the seat object",69,null],[0,"wl_pointer","wayland_client::protocol","pointer input device",null,null],[3,"WlPointer","wayland_client::protocol::wl_pointer","",null,null],[4,"Error","","",null,null],[13,"Role","","given wl_surface has another role",70,null],[4,"ButtonState","","physical button state",null,null],[13,"Released","","the button is not pressed",71,null],[13,"Pressed","","the button is pressed",71,null],[4,"Axis","","axis types",null,null],[13,"VerticalScroll","","vertical axis",72,null],[13,"HorizontalScroll","","horizontal axis",72,null],[4,"AxisSource","","axis source types",null,null],[13,"Wheel","","a physical wheel",73,null],[13,"Finger","","finger on a touch surface",73,null],[13,"Continuous","","continuous coordinate space",73,null],[4,"Request","","",null,null],[13,"SetCursor","","set the pointer surface",74,null],[12,"serial","wayland_client::protocol::wl_pointer::Request","",74,null],[12,"surface","","",74,null],[12,"hotspot_x","","",74,null],[12,"hotspot_y","","",74,null],[13,"Release","wayland_client::protocol::wl_pointer","release the pointer object",74,null],[4,"Event","","",null,null],[13,"Enter","","enter event",75,null],[12,"serial","wayland_client::protocol::wl_pointer::Event","",75,null],[12,"surface","","",75,null],[12,"surface_x","","",75,null],[12,"surface_y","","",75,null],[13,"Leave","wayland_client::protocol::wl_pointer","leave event",75,null],[12,"serial","wayland_client::protocol::wl_pointer::Event","",75,null],[12,"surface","","",75,null],[13,"Motion","wayland_client::protocol::wl_pointer","pointer motion event",75,null],[12,"time","wayland_client::protocol::wl_pointer::Event","",75,null],[12,"surface_x","","",75,null],[12,"surface_y","","",75,null],[13,"Button","wayland_client::protocol::wl_pointer","pointer button event",75,null],[12,"serial","wayland_client::protocol::wl_pointer::Event","",75,null],[12,"time","","",75,null],[12,"button","","",75,null],[12,"state","","",75,null],[13,"Axis","wayland_client::protocol::wl_pointer","axis event",75,null],[12,"time","wayland_client::protocol::wl_pointer::Event","",75,null],[12,"axis","","",75,null],[12,"value","","",75,null],[13,"Frame","wayland_client::protocol::wl_pointer","end of a pointer event sequence",75,null],[13,"AxisSource","","axis source event",75,null],[12,"axis_source","wayland_client::protocol::wl_pointer::Event","",75,null],[13,"AxisStop","wayland_client::protocol::wl_pointer","axis stop event",75,null],[12,"time","wayland_client::protocol::wl_pointer::Event","",75,null],[12,"axis","","",75,null],[13,"AxisDiscrete","wayland_client::protocol::wl_pointer","axis click event",75,null],[12,"axis","wayland_client::protocol::wl_pointer::Event","",75,null],[12,"discrete","","",75,null],[8,"RequestsTrait","wayland_client::protocol::wl_pointer","",null,null],[10,"set_cursor","","set the pointer surface",76,null],[10,"release","","release the pointer object",76,null],[0,"wl_keyboard","wayland_client::protocol","keyboard input device",null,null],[3,"WlKeyboard","wayland_client::protocol::wl_keyboard","",null,null],[4,"KeymapFormat","","keyboard mapping format",null,null],[13,"NoKeymap","","no keymap; client must understand how to interpret the raw keycode",77,null],[13,"XkbV1","","libxkbcommon compatible; to determine the xkb keycode, clients must add 8 to the key event keycode",77,null],[4,"KeyState","","physical key state",null,null],[13,"Released","","key is not pressed",78,null],[13,"Pressed","","key is pressed",78,null],[4,"Request","","",null,null],[13,"Release","","release the keyboard object",79,null],[4,"Event","","",null,null],[13,"Keymap","","keyboard mapping",80,null],[12,"format","wayland_client::protocol::wl_keyboard::Event","",80,null],[12,"fd","","",80,null],[12,"size","","",80,null],[13,"Enter","wayland_client::protocol::wl_keyboard","enter event",80,null],[12,"serial","wayland_client::protocol::wl_keyboard::Event","",80,null],[12,"surface","","",80,null],[12,"keys","","",80,null],[13,"Leave","wayland_client::protocol::wl_keyboard","leave event",80,null],[12,"serial","wayland_client::protocol::wl_keyboard::Event","",80,null],[12,"surface","","",80,null],[13,"Key","wayland_client::protocol::wl_keyboard","key event",80,null],[12,"serial","wayland_client::protocol::wl_keyboard::Event","",80,null],[12,"time","","",80,null],[12,"key","","",80,null],[12,"state","","",80,null],[13,"Modifiers","wayland_client::protocol::wl_keyboard","modifier and group state",80,null],[12,"serial","wayland_client::protocol::wl_keyboard::Event","",80,null],[12,"mods_depressed","","",80,null],[12,"mods_latched","","",80,null],[12,"mods_locked","","",80,null],[12,"group","","",80,null],[13,"RepeatInfo","wayland_client::protocol::wl_keyboard","repeat rate and delay",80,null],[12,"rate","wayland_client::protocol::wl_keyboard::Event","",80,null],[12,"delay","","",80,null],[8,"RequestsTrait","wayland_client::protocol::wl_keyboard","",null,null],[10,"release","","release the keyboard object",81,null],[0,"wl_touch","wayland_client::protocol","touchscreen input device",null,null],[3,"WlTouch","wayland_client::protocol::wl_touch","",null,null],[4,"Request","","",null,null],[13,"Release","","release the touch object",82,null],[4,"Event","","",null,null],[13,"Down","","touch down event and beginning of a touch sequence",83,null],[12,"serial","wayland_client::protocol::wl_touch::Event","",83,null],[12,"time","","",83,null],[12,"surface","","",83,null],[12,"id","","",83,null],[12,"x","","",83,null],[12,"y","","",83,null],[13,"Up","wayland_client::protocol::wl_touch","end of a touch event sequence",83,null],[12,"serial","wayland_client::protocol::wl_touch::Event","",83,null],[12,"time","","",83,null],[12,"id","","",83,null],[13,"Motion","wayland_client::protocol::wl_touch","update of touch point coordinates",83,null],[12,"time","wayland_client::protocol::wl_touch::Event","",83,null],[12,"id","","",83,null],[12,"x","","",83,null],[12,"y","","",83,null],[13,"Frame","wayland_client::protocol::wl_touch","end of touch frame event",83,null],[13,"Cancel","","touch session cancelled",83,null],[8,"RequestsTrait","","",null,null],[10,"release","","release the touch object",84,null],[0,"wl_output","wayland_client::protocol","compositor output region",null,null],[3,"Mode","wayland_client::protocol::wl_output","mode information",null,null],[3,"WlOutput","","",null,null],[4,"Subpixel","","subpixel geometry information",null,null],[13,"Unknown","","unknown geometry",85,null],[13,"None","","no geometry",85,null],[13,"HorizontalRgb","","horizontal RGB",85,null],[13,"HorizontalBgr","","horizontal BGR",85,null],[13,"VerticalRgb","","vertical RGB",85,null],[13,"VerticalBgr","","vertical BGR",85,null],[4,"Transform","","transform from framebuffer to output",null,null],[13,"Normal","","no transform",86,null],[13,"_90","","90 degrees counter-clockwise",86,null],[13,"_180","","180 degrees counter-clockwise",86,null],[13,"_270","","270 degrees counter-clockwise",86,null],[13,"Flipped","","180 degree flip around a vertical axis",86,null],[13,"Flipped90","","flip and rotate 90 degrees counter-clockwise",86,null],[13,"Flipped180","","flip and rotate 180 degrees counter-clockwise",86,null],[13,"Flipped270","","flip and rotate 270 degrees counter-clockwise",86,null],[4,"Request","","",null,null],[13,"Release","","release the output object",87,null],[4,"Event","","",null,null],[13,"Geometry","","properties of the output",88,null],[12,"x","wayland_client::protocol::wl_output::Event","",88,null],[12,"y","","",88,null],[12,"physical_width","","",88,null],[12,"physical_height","","",88,null],[12,"subpixel","","",88,null],[12,"make","","",88,null],[12,"model","","",88,null],[12,"transform","","",88,null],[13,"Mode","wayland_client::protocol::wl_output","advertise available modes for the output",88,null],[12,"flags","wayland_client::protocol::wl_output::Event","",88,null],[12,"width","","",88,null],[12,"height","","",88,null],[12,"refresh","","",88,null],[13,"Done","wayland_client::protocol::wl_output","sent all information about output",88,null],[13,"Scale","","output scaling properties",88,null],[12,"factor","wayland_client::protocol::wl_output::Event","",88,null],[8,"RequestsTrait","wayland_client::protocol::wl_output","",null,null],[10,"release","","release the output object",89,null],[0,"wl_region","wayland_client::protocol","region interface",null,null],[3,"WlRegion","wayland_client::protocol::wl_region","",null,null],[4,"Request","","",null,null],[13,"Destroy","","destroy region",90,null],[13,"Add","","add rectangle to region",90,null],[12,"x","wayland_client::protocol::wl_region::Request","",90,null],[12,"y","","",90,null],[12,"width","","",90,null],[12,"height","","",90,null],[13,"Subtract","wayland_client::protocol::wl_region","subtract rectangle from region",90,null],[12,"x","wayland_client::protocol::wl_region::Request","",90,null],[12,"y","","",90,null],[12,"width","","",90,null],[12,"height","","",90,null],[4,"Event","wayland_client::protocol::wl_region","",null,null],[8,"RequestsTrait","","",null,null],[10,"destroy","","destroy region",91,null],[10,"add","","add rectangle to region",91,null],[10,"subtract","","subtract rectangle from region",91,null],[0,"wl_subcompositor","wayland_client::protocol","sub-surface compositing",null,null],[3,"WlSubcompositor","wayland_client::protocol::wl_subcompositor","",null,null],[4,"Error","","",null,null],[13,"BadSurface","","the to-be sub-surface is invalid",92,null],[4,"Request","","",null,null],[13,"Destroy","","unbind from the subcompositor interface",93,null],[13,"GetSubsurface","","give a surface the role sub-surface",93,null],[12,"id","wayland_client::protocol::wl_subcompositor::Request","",93,null],[12,"surface","","",93,null],[12,"parent","","",93,null],[4,"Event","wayland_client::protocol::wl_subcompositor","",null,null],[8,"RequestsTrait","","",null,null],[10,"destroy","","unbind from the subcompositor interface",94,null],[10,"get_subsurface","","give a surface the role sub-surface",94,{"i":[{"n":"self"},{"n":"proxy"},{"n":"proxy"},{"n":"f"}],"o":{"g":["proxy"],"n":"result"}}],[0,"wl_subsurface","wayland_client::protocol","sub-surface interface to a wl_surface",null,null],[3,"WlSubsurface","wayland_client::protocol::wl_subsurface","",null,null],[4,"Error","","",null,null],[13,"BadSurface","","wl_surface is not a sibling or the parent",95,null],[4,"Request","","",null,null],[13,"Destroy","","remove sub-surface interface",96,null],[13,"SetPosition","","reposition the sub-surface",96,null],[12,"x","wayland_client::protocol::wl_subsurface::Request","",96,null],[12,"y","","",96,null],[13,"PlaceAbove","wayland_client::protocol::wl_subsurface","restack the sub-surface",96,null],[12,"sibling","wayland_client::protocol::wl_subsurface::Request","",96,null],[13,"PlaceBelow","wayland_client::protocol::wl_subsurface","restack the sub-surface",96,null],[12,"sibling","wayland_client::protocol::wl_subsurface::Request","",96,null],[13,"SetSync","wayland_client::protocol::wl_subsurface","set sub-surface to synchronized mode",96,null],[13,"SetDesync","","set sub-surface to desynchronized mode",96,null],[4,"Event","","",null,null],[8,"RequestsTrait","","",null,null],[10,"destroy","","remove sub-surface interface",97,null],[10,"set_position","","reposition the sub-surface",97,null],[10,"place_above","","restack the sub-surface",97,null],[10,"place_below","","restack the sub-surface",97,null],[10,"set_sync","","set sub-surface to synchronized mode",97,null],[10,"set_desync","","set sub-surface to desynchronized mode",97,null],[11,"clone","wayland_client::protocol::wl_display","",22,{"i":[{"n":"self"}],"o":{"n":"error"}}],[11,"fmt","","",22,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",22,{"i":[{"n":"self"},{"n":"error"}],"o":{"n":"bool"}}],[11,"from_raw","","",22,{"i":[{"n":"u32"}],"o":{"g":["error"],"n":"option"}}],[11,"to_raw","","",22,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"is_destructor","","",23,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",23,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",23,null],[11,"into_raw","","",23,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",23,null],[11,"as_raw_c_in","","",23,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",24,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",24,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",24,null],[11,"into_raw","","",24,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",24,null],[11,"as_raw_c_in","","",24,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",98,null],[11,"sync","wayland_client","",9,{"i":[{"n":"self"},{"n":"f"}],"o":{"g":["proxy"],"n":"result"}}],[11,"get_registry","","",9,{"i":[{"n":"self"},{"n":"f"}],"o":{"g":["proxy"],"n":"result"}}],[11,"is_destructor","wayland_client::protocol::wl_registry","",26,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",26,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",26,null],[11,"into_raw","","",26,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",26,null],[11,"as_raw_c_in","","",26,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",27,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",27,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",27,null],[11,"into_raw","","",27,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",27,null],[11,"as_raw_c_in","","",27,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",99,null],[11,"bind","wayland_client","",9,{"i":[{"n":"self"},{"n":"u32"},{"n":"u32"},{"n":"f"}],"o":{"g":["proxy"],"n":"result"}}],[11,"is_destructor","wayland_client::protocol::wl_callback","",100,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",100,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",100,null],[11,"into_raw","","",100,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",100,null],[11,"as_raw_c_in","","",100,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",29,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",29,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",29,null],[11,"into_raw","","",29,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",29,null],[11,"as_raw_c_in","","",29,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",101,null],[11,"is_destructor","wayland_client::protocol::wl_compositor","",30,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",30,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",30,null],[11,"into_raw","","",30,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",30,null],[11,"as_raw_c_in","","",30,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",102,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",102,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",102,null],[11,"into_raw","","",102,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",102,null],[11,"as_raw_c_in","","",102,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",103,null],[11,"create_surface","wayland_client","",9,{"i":[{"n":"self"},{"n":"f"}],"o":{"g":["proxy"],"n":"result"}}],[11,"create_region","","",9,{"i":[{"n":"self"},{"n":"f"}],"o":{"g":["proxy"],"n":"result"}}],[11,"is_destructor","wayland_client::protocol::wl_shm_pool","",32,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",32,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",32,null],[11,"into_raw","","",32,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",32,null],[11,"as_raw_c_in","","",32,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",104,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",104,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",104,null],[11,"into_raw","","",104,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",104,null],[11,"as_raw_c_in","","",104,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",105,null],[11,"create_buffer","wayland_client","",9,{"i":[{"n":"self"},{"n":"i32"},{"n":"i32"},{"n":"i32"},{"n":"i32"},{"n":"format"},{"n":"f"}],"o":{"g":["proxy"],"n":"result"}}],[11,"destroy","","",9,null],[11,"resize","","",9,null],[11,"clone","wayland_client::protocol::wl_shm","",34,{"i":[{"n":"self"}],"o":{"n":"error"}}],[11,"fmt","","",34,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",34,{"i":[{"n":"self"},{"n":"error"}],"o":{"n":"bool"}}],[11,"from_raw","","",34,{"i":[{"n":"u32"}],"o":{"g":["error"],"n":"option"}}],[11,"to_raw","","",34,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"clone","","",35,{"i":[{"n":"self"}],"o":{"n":"format"}}],[11,"fmt","","",35,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",35,{"i":[{"n":"self"},{"n":"format"}],"o":{"n":"bool"}}],[11,"from_raw","","",35,{"i":[{"n":"u32"}],"o":{"g":["format"],"n":"option"}}],[11,"to_raw","","",35,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"is_destructor","","",36,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",36,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",36,null],[11,"into_raw","","",36,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",36,null],[11,"as_raw_c_in","","",36,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",37,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",37,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",37,null],[11,"into_raw","","",37,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",37,null],[11,"as_raw_c_in","","",37,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",106,null],[11,"create_pool","wayland_client","",9,{"i":[{"n":"self"},{"n":"rawfd"},{"n":"i32"},{"n":"f"}],"o":{"g":["proxy"],"n":"result"}}],[11,"is_destructor","wayland_client::protocol::wl_buffer","",39,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",39,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",39,null],[11,"into_raw","","",39,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",39,null],[11,"as_raw_c_in","","",39,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",40,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",40,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",40,null],[11,"into_raw","","",40,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",40,null],[11,"as_raw_c_in","","",40,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",107,null],[11,"destroy","wayland_client","",9,null],[11,"clone","wayland_client::protocol::wl_data_offer","",42,{"i":[{"n":"self"}],"o":{"n":"error"}}],[11,"fmt","","",42,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",42,{"i":[{"n":"self"},{"n":"error"}],"o":{"n":"bool"}}],[11,"from_raw","","",42,{"i":[{"n":"u32"}],"o":{"g":["error"],"n":"option"}}],[11,"to_raw","","",42,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"is_destructor","","",43,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",43,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",43,null],[11,"into_raw","","",43,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",43,null],[11,"as_raw_c_in","","",43,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",44,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",44,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",44,null],[11,"into_raw","","",44,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",44,null],[11,"as_raw_c_in","","",44,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",108,null],[11,"accept","wayland_client","",9,null],[11,"receive","","",9,null],[11,"destroy","","",9,null],[11,"finish","","",9,null],[11,"set_actions","","",9,null],[11,"clone","wayland_client::protocol::wl_data_source","",46,{"i":[{"n":"self"}],"o":{"n":"error"}}],[11,"fmt","","",46,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",46,{"i":[{"n":"self"},{"n":"error"}],"o":{"n":"bool"}}],[11,"from_raw","","",46,{"i":[{"n":"u32"}],"o":{"g":["error"],"n":"option"}}],[11,"to_raw","","",46,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"is_destructor","","",47,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",47,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",47,null],[11,"into_raw","","",47,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",47,null],[11,"as_raw_c_in","","",47,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",48,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",48,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",48,null],[11,"into_raw","","",48,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",48,null],[11,"as_raw_c_in","","",48,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",109,null],[11,"offer","wayland_client","",9,null],[11,"destroy","","",9,null],[11,"set_actions","","",9,null],[11,"clone","wayland_client::protocol::wl_data_device","",50,{"i":[{"n":"self"}],"o":{"n":"error"}}],[11,"fmt","","",50,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",50,{"i":[{"n":"self"},{"n":"error"}],"o":{"n":"bool"}}],[11,"from_raw","","",50,{"i":[{"n":"u32"}],"o":{"g":["error"],"n":"option"}}],[11,"to_raw","","",50,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"is_destructor","","",51,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",51,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",51,null],[11,"into_raw","","",51,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",51,null],[11,"as_raw_c_in","","",51,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",52,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",52,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",52,null],[11,"into_raw","","",52,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",52,null],[11,"as_raw_c_in","","",52,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",110,null],[11,"start_drag","wayland_client","",9,null],[11,"set_selection","","",9,null],[11,"release","","",9,null],[11,"eq","wayland_client::protocol::wl_data_device_manager","",111,{"i":[{"n":"self"},{"n":"dndaction"}],"o":{"n":"bool"}}],[11,"ne","","",111,{"i":[{"n":"self"},{"n":"dndaction"}],"o":{"n":"bool"}}],[11,"clone","","",111,{"i":[{"n":"self"}],"o":{"n":"dndaction"}}],[11,"partial_cmp","","",111,{"i":[{"n":"self"},{"n":"dndaction"}],"o":{"g":["ordering"],"n":"option"}}],[11,"lt","","",111,{"i":[{"n":"self"},{"n":"dndaction"}],"o":{"n":"bool"}}],[11,"le","","",111,{"i":[{"n":"self"},{"n":"dndaction"}],"o":{"n":"bool"}}],[11,"gt","","",111,{"i":[{"n":"self"},{"n":"dndaction"}],"o":{"n":"bool"}}],[11,"ge","","",111,{"i":[{"n":"self"},{"n":"dndaction"}],"o":{"n":"bool"}}],[11,"cmp","","",111,{"i":[{"n":"self"},{"n":"dndaction"}],"o":{"n":"ordering"}}],[11,"hash","","",111,null],[11,"fmt","","",111,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",111,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",111,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",111,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",111,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[18,"None","","no action",111,null],[18,"Copy","","copy action",111,null],[18,"Move","","move action",111,null],[18,"Ask","","ask action",111,null],[11,"empty","","Returns an empty set of flags.",111,{"o":{"n":"dndaction"}}],[11,"all","","Returns the set containing all flags.",111,{"o":{"n":"dndaction"}}],[11,"bits","","Returns the raw value of the flags currently stored.",111,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",111,{"i":[{"n":"u32"}],"o":{"g":["dndaction"],"n":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",111,{"i":[{"n":"u32"}],"o":{"n":"dndaction"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",111,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",111,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",111,{"i":[{"n":"self"},{"n":"dndaction"}],"o":{"n":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",111,{"i":[{"n":"self"},{"n":"dndaction"}],"o":{"n":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",111,{"i":[{"n":"self"},{"n":"dndaction"}]}],[11,"remove","","Removes the specified flags in-place.",111,{"i":[{"n":"self"},{"n":"dndaction"}]}],[11,"toggle","","Toggles the specified flags in-place.",111,{"i":[{"n":"self"},{"n":"dndaction"}]}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",111,{"i":[{"n":"self"},{"n":"dndaction"},{"n":"bool"}]}],[11,"bitor","","Returns the union of the two sets of flags.",111,{"i":[{"n":"self"},{"n":"dndaction"}],"o":{"n":"dndaction"}}],[11,"bitor_assign","","Adds the set of flags.",111,{"i":[{"n":"self"},{"n":"dndaction"}]}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",111,{"i":[{"n":"self"},{"n":"dndaction"}],"o":{"n":"dndaction"}}],[11,"bitxor_assign","","Toggles the set of flags.",111,{"i":[{"n":"self"},{"n":"dndaction"}]}],[11,"bitand","","Returns the intersection between the two sets of flags.",111,{"i":[{"n":"self"},{"n":"dndaction"}],"o":{"n":"dndaction"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",111,{"i":[{"n":"self"},{"n":"dndaction"}]}],[11,"sub","","Returns the set difference of the two sets of flags.",111,{"i":[{"n":"self"},{"n":"dndaction"}],"o":{"n":"dndaction"}}],[11,"sub_assign","","Disables all flags enabled in the set.",111,{"i":[{"n":"self"},{"n":"dndaction"}]}],[11,"not","","Returns the complement of this set of flags.",111,{"i":[{"n":"self"}],"o":{"n":"dndaction"}}],[11,"extend","","",111,{"i":[{"n":"self"},{"n":"t"}]}],[11,"from_iter","","",111,{"i":[{"n":"t"}],"o":{"n":"dndaction"}}],[11,"from_raw","","",111,{"i":[{"n":"u32"}],"o":{"g":["dndaction"],"n":"option"}}],[11,"to_raw","","",111,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"is_destructor","","",54,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",54,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",54,null],[11,"into_raw","","",54,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",54,null],[11,"as_raw_c_in","","",54,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",112,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",112,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",112,null],[11,"into_raw","","",112,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",112,null],[11,"as_raw_c_in","","",112,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",113,null],[11,"create_data_source","wayland_client","",9,{"i":[{"n":"self"},{"n":"f"}],"o":{"g":["proxy"],"n":"result"}}],[11,"get_data_device","","",9,{"i":[{"n":"self"},{"n":"proxy"},{"n":"f"}],"o":{"g":["proxy"],"n":"result"}}],[11,"clone","wayland_client::protocol::wl_shell","",56,{"i":[{"n":"self"}],"o":{"n":"error"}}],[11,"fmt","","",56,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",56,{"i":[{"n":"self"},{"n":"error"}],"o":{"n":"bool"}}],[11,"from_raw","","",56,{"i":[{"n":"u32"}],"o":{"g":["error"],"n":"option"}}],[11,"to_raw","","",56,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"is_destructor","","",57,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",57,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",57,null],[11,"into_raw","","",57,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",57,null],[11,"as_raw_c_in","","",57,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",114,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",114,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",114,null],[11,"into_raw","","",114,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",114,null],[11,"as_raw_c_in","","",114,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",115,null],[11,"get_shell_surface","wayland_client","",9,{"i":[{"n":"self"},{"n":"proxy"},{"n":"f"}],"o":{"g":["proxy"],"n":"result"}}],[11,"eq","wayland_client::protocol::wl_shell_surface","",116,{"i":[{"n":"self"},{"n":"resize"}],"o":{"n":"bool"}}],[11,"ne","","",116,{"i":[{"n":"self"},{"n":"resize"}],"o":{"n":"bool"}}],[11,"clone","","",116,{"i":[{"n":"self"}],"o":{"n":"resize"}}],[11,"partial_cmp","","",116,{"i":[{"n":"self"},{"n":"resize"}],"o":{"g":["ordering"],"n":"option"}}],[11,"lt","","",116,{"i":[{"n":"self"},{"n":"resize"}],"o":{"n":"bool"}}],[11,"le","","",116,{"i":[{"n":"self"},{"n":"resize"}],"o":{"n":"bool"}}],[11,"gt","","",116,{"i":[{"n":"self"},{"n":"resize"}],"o":{"n":"bool"}}],[11,"ge","","",116,{"i":[{"n":"self"},{"n":"resize"}],"o":{"n":"bool"}}],[11,"cmp","","",116,{"i":[{"n":"self"},{"n":"resize"}],"o":{"n":"ordering"}}],[11,"hash","","",116,null],[11,"fmt","","",116,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",116,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",116,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",116,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",116,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[18,"None","","no edge",116,null],[18,"Top","","top edge",116,null],[18,"Bottom","","bottom edge",116,null],[18,"Left","","left edge",116,null],[18,"TopLeft","","top and left edges",116,null],[18,"BottomLeft","","bottom and left edges",116,null],[18,"Right","","right edge",116,null],[18,"TopRight","","top and right edges",116,null],[18,"BottomRight","","bottom and right edges",116,null],[11,"empty","","Returns an empty set of flags.",116,{"o":{"n":"resize"}}],[11,"all","","Returns the set containing all flags.",116,{"o":{"n":"resize"}}],[11,"bits","","Returns the raw value of the flags currently stored.",116,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",116,{"i":[{"n":"u32"}],"o":{"g":["resize"],"n":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",116,{"i":[{"n":"u32"}],"o":{"n":"resize"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",116,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",116,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",116,{"i":[{"n":"self"},{"n":"resize"}],"o":{"n":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",116,{"i":[{"n":"self"},{"n":"resize"}],"o":{"n":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",116,{"i":[{"n":"self"},{"n":"resize"}]}],[11,"remove","","Removes the specified flags in-place.",116,{"i":[{"n":"self"},{"n":"resize"}]}],[11,"toggle","","Toggles the specified flags in-place.",116,{"i":[{"n":"self"},{"n":"resize"}]}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",116,{"i":[{"n":"self"},{"n":"resize"},{"n":"bool"}]}],[11,"bitor","","Returns the union of the two sets of flags.",116,{"i":[{"n":"self"},{"n":"resize"}],"o":{"n":"resize"}}],[11,"bitor_assign","","Adds the set of flags.",116,{"i":[{"n":"self"},{"n":"resize"}]}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",116,{"i":[{"n":"self"},{"n":"resize"}],"o":{"n":"resize"}}],[11,"bitxor_assign","","Toggles the set of flags.",116,{"i":[{"n":"self"},{"n":"resize"}]}],[11,"bitand","","Returns the intersection between the two sets of flags.",116,{"i":[{"n":"self"},{"n":"resize"}],"o":{"n":"resize"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",116,{"i":[{"n":"self"},{"n":"resize"}]}],[11,"sub","","Returns the set difference of the two sets of flags.",116,{"i":[{"n":"self"},{"n":"resize"}],"o":{"n":"resize"}}],[11,"sub_assign","","Disables all flags enabled in the set.",116,{"i":[{"n":"self"},{"n":"resize"}]}],[11,"not","","Returns the complement of this set of flags.",116,{"i":[{"n":"self"}],"o":{"n":"resize"}}],[11,"extend","","",116,{"i":[{"n":"self"},{"n":"t"}]}],[11,"from_iter","","",116,{"i":[{"n":"t"}],"o":{"n":"resize"}}],[11,"from_raw","","",116,{"i":[{"n":"u32"}],"o":{"g":["resize"],"n":"option"}}],[11,"to_raw","","",116,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"eq","","",117,{"i":[{"n":"self"},{"n":"transient"}],"o":{"n":"bool"}}],[11,"ne","","",117,{"i":[{"n":"self"},{"n":"transient"}],"o":{"n":"bool"}}],[11,"clone","","",117,{"i":[{"n":"self"}],"o":{"n":"transient"}}],[11,"partial_cmp","","",117,{"i":[{"n":"self"},{"n":"transient"}],"o":{"g":["ordering"],"n":"option"}}],[11,"lt","","",117,{"i":[{"n":"self"},{"n":"transient"}],"o":{"n":"bool"}}],[11,"le","","",117,{"i":[{"n":"self"},{"n":"transient"}],"o":{"n":"bool"}}],[11,"gt","","",117,{"i":[{"n":"self"},{"n":"transient"}],"o":{"n":"bool"}}],[11,"ge","","",117,{"i":[{"n":"self"},{"n":"transient"}],"o":{"n":"bool"}}],[11,"cmp","","",117,{"i":[{"n":"self"},{"n":"transient"}],"o":{"n":"ordering"}}],[11,"hash","","",117,null],[11,"fmt","","",117,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",117,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",117,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",117,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",117,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[18,"Inactive","","do not set keyboard focus",117,null],[11,"empty","","Returns an empty set of flags.",117,{"o":{"n":"transient"}}],[11,"all","","Returns the set containing all flags.",117,{"o":{"n":"transient"}}],[11,"bits","","Returns the raw value of the flags currently stored.",117,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",117,{"i":[{"n":"u32"}],"o":{"g":["transient"],"n":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",117,{"i":[{"n":"u32"}],"o":{"n":"transient"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",117,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",117,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",117,{"i":[{"n":"self"},{"n":"transient"}],"o":{"n":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",117,{"i":[{"n":"self"},{"n":"transient"}],"o":{"n":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",117,{"i":[{"n":"self"},{"n":"transient"}]}],[11,"remove","","Removes the specified flags in-place.",117,{"i":[{"n":"self"},{"n":"transient"}]}],[11,"toggle","","Toggles the specified flags in-place.",117,{"i":[{"n":"self"},{"n":"transient"}]}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",117,{"i":[{"n":"self"},{"n":"transient"},{"n":"bool"}]}],[11,"bitor","","Returns the union of the two sets of flags.",117,{"i":[{"n":"self"},{"n":"transient"}],"o":{"n":"transient"}}],[11,"bitor_assign","","Adds the set of flags.",117,{"i":[{"n":"self"},{"n":"transient"}]}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",117,{"i":[{"n":"self"},{"n":"transient"}],"o":{"n":"transient"}}],[11,"bitxor_assign","","Toggles the set of flags.",117,{"i":[{"n":"self"},{"n":"transient"}]}],[11,"bitand","","Returns the intersection between the two sets of flags.",117,{"i":[{"n":"self"},{"n":"transient"}],"o":{"n":"transient"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",117,{"i":[{"n":"self"},{"n":"transient"}]}],[11,"sub","","Returns the set difference of the two sets of flags.",117,{"i":[{"n":"self"},{"n":"transient"}],"o":{"n":"transient"}}],[11,"sub_assign","","Disables all flags enabled in the set.",117,{"i":[{"n":"self"},{"n":"transient"}]}],[11,"not","","Returns the complement of this set of flags.",117,{"i":[{"n":"self"}],"o":{"n":"transient"}}],[11,"extend","","",117,{"i":[{"n":"self"},{"n":"t"}]}],[11,"from_iter","","",117,{"i":[{"n":"t"}],"o":{"n":"transient"}}],[11,"from_raw","","",117,{"i":[{"n":"u32"}],"o":{"g":["transient"],"n":"option"}}],[11,"to_raw","","",117,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"clone","","",59,{"i":[{"n":"self"}],"o":{"n":"fullscreenmethod"}}],[11,"fmt","","",59,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",59,{"i":[{"n":"self"},{"n":"fullscreenmethod"}],"o":{"n":"bool"}}],[11,"from_raw","","",59,{"i":[{"n":"u32"}],"o":{"g":["fullscreenmethod"],"n":"option"}}],[11,"to_raw","","",59,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"is_destructor","","",60,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",60,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",60,null],[11,"into_raw","","",60,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",60,null],[11,"as_raw_c_in","","",60,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",61,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",61,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",61,null],[11,"into_raw","","",61,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",61,null],[11,"as_raw_c_in","","",61,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",118,null],[11,"pong","wayland_client","",9,null],[11,"_move","","",9,null],[11,"resize","","",9,null],[11,"set_toplevel","","",9,null],[11,"set_transient","","",9,null],[11,"set_fullscreen","","",9,null],[11,"set_popup","","",9,null],[11,"set_maximized","","",9,null],[11,"set_title","","",9,null],[11,"set_class","","",9,null],[11,"clone","wayland_client::protocol::wl_surface","",63,{"i":[{"n":"self"}],"o":{"n":"error"}}],[11,"fmt","","",63,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",63,{"i":[{"n":"self"},{"n":"error"}],"o":{"n":"bool"}}],[11,"from_raw","","",63,{"i":[{"n":"u32"}],"o":{"g":["error"],"n":"option"}}],[11,"to_raw","","",63,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"is_destructor","","",64,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",64,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",64,null],[11,"into_raw","","",64,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",64,null],[11,"as_raw_c_in","","",64,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",65,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",65,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",65,null],[11,"into_raw","","",65,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",65,null],[11,"as_raw_c_in","","",65,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",119,null],[11,"destroy","wayland_client","",9,null],[11,"attach","","",9,null],[11,"damage","","",9,null],[11,"frame","","",9,{"i":[{"n":"self"},{"n":"f"}],"o":{"g":["proxy"],"n":"result"}}],[11,"set_opaque_region","","",9,null],[11,"set_input_region","","",9,null],[11,"commit","","",9,null],[11,"set_buffer_transform","","",9,null],[11,"set_buffer_scale","","",9,null],[11,"damage_buffer","","",9,null],[11,"eq","wayland_client::protocol::wl_seat","",120,{"i":[{"n":"self"},{"n":"capability"}],"o":{"n":"bool"}}],[11,"ne","","",120,{"i":[{"n":"self"},{"n":"capability"}],"o":{"n":"bool"}}],[11,"clone","","",120,{"i":[{"n":"self"}],"o":{"n":"capability"}}],[11,"partial_cmp","","",120,{"i":[{"n":"self"},{"n":"capability"}],"o":{"g":["ordering"],"n":"option"}}],[11,"lt","","",120,{"i":[{"n":"self"},{"n":"capability"}],"o":{"n":"bool"}}],[11,"le","","",120,{"i":[{"n":"self"},{"n":"capability"}],"o":{"n":"bool"}}],[11,"gt","","",120,{"i":[{"n":"self"},{"n":"capability"}],"o":{"n":"bool"}}],[11,"ge","","",120,{"i":[{"n":"self"},{"n":"capability"}],"o":{"n":"bool"}}],[11,"cmp","","",120,{"i":[{"n":"self"},{"n":"capability"}],"o":{"n":"ordering"}}],[11,"hash","","",120,null],[11,"fmt","","",120,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",120,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",120,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",120,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",120,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[18,"Pointer","","the seat has pointer devices",120,null],[18,"Keyboard","","the seat has one or more keyboards",120,null],[18,"Touch","","the seat has touch devices",120,null],[11,"empty","","Returns an empty set of flags.",120,{"o":{"n":"capability"}}],[11,"all","","Returns the set containing all flags.",120,{"o":{"n":"capability"}}],[11,"bits","","Returns the raw value of the flags currently stored.",120,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",120,{"i":[{"n":"u32"}],"o":{"g":["capability"],"n":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",120,{"i":[{"n":"u32"}],"o":{"n":"capability"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",120,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",120,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",120,{"i":[{"n":"self"},{"n":"capability"}],"o":{"n":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",120,{"i":[{"n":"self"},{"n":"capability"}],"o":{"n":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",120,{"i":[{"n":"self"},{"n":"capability"}]}],[11,"remove","","Removes the specified flags in-place.",120,{"i":[{"n":"self"},{"n":"capability"}]}],[11,"toggle","","Toggles the specified flags in-place.",120,{"i":[{"n":"self"},{"n":"capability"}]}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",120,{"i":[{"n":"self"},{"n":"capability"},{"n":"bool"}]}],[11,"bitor","","Returns the union of the two sets of flags.",120,{"i":[{"n":"self"},{"n":"capability"}],"o":{"n":"capability"}}],[11,"bitor_assign","","Adds the set of flags.",120,{"i":[{"n":"self"},{"n":"capability"}]}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",120,{"i":[{"n":"self"},{"n":"capability"}],"o":{"n":"capability"}}],[11,"bitxor_assign","","Toggles the set of flags.",120,{"i":[{"n":"self"},{"n":"capability"}]}],[11,"bitand","","Returns the intersection between the two sets of flags.",120,{"i":[{"n":"self"},{"n":"capability"}],"o":{"n":"capability"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",120,{"i":[{"n":"self"},{"n":"capability"}]}],[11,"sub","","Returns the set difference of the two sets of flags.",120,{"i":[{"n":"self"},{"n":"capability"}],"o":{"n":"capability"}}],[11,"sub_assign","","Disables all flags enabled in the set.",120,{"i":[{"n":"self"},{"n":"capability"}]}],[11,"not","","Returns the complement of this set of flags.",120,{"i":[{"n":"self"}],"o":{"n":"capability"}}],[11,"extend","","",120,{"i":[{"n":"self"},{"n":"t"}]}],[11,"from_iter","","",120,{"i":[{"n":"t"}],"o":{"n":"capability"}}],[11,"from_raw","","",120,{"i":[{"n":"u32"}],"o":{"g":["capability"],"n":"option"}}],[11,"to_raw","","",120,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"is_destructor","","",67,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",67,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",67,null],[11,"into_raw","","",67,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",67,null],[11,"as_raw_c_in","","",67,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",68,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",68,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",68,null],[11,"into_raw","","",68,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",68,null],[11,"as_raw_c_in","","",68,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",121,null],[11,"get_pointer","wayland_client","",9,{"i":[{"n":"self"},{"n":"f"}],"o":{"g":["proxy"],"n":"result"}}],[11,"get_keyboard","","",9,{"i":[{"n":"self"},{"n":"f"}],"o":{"g":["proxy"],"n":"result"}}],[11,"get_touch","","",9,{"i":[{"n":"self"},{"n":"f"}],"o":{"g":["proxy"],"n":"result"}}],[11,"release","","",9,null],[11,"clone","wayland_client::protocol::wl_pointer","",70,{"i":[{"n":"self"}],"o":{"n":"error"}}],[11,"fmt","","",70,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",70,{"i":[{"n":"self"},{"n":"error"}],"o":{"n":"bool"}}],[11,"from_raw","","",70,{"i":[{"n":"u32"}],"o":{"g":["error"],"n":"option"}}],[11,"to_raw","","",70,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"clone","","",71,{"i":[{"n":"self"}],"o":{"n":"buttonstate"}}],[11,"fmt","","",71,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",71,{"i":[{"n":"self"},{"n":"buttonstate"}],"o":{"n":"bool"}}],[11,"from_raw","","",71,{"i":[{"n":"u32"}],"o":{"g":["buttonstate"],"n":"option"}}],[11,"to_raw","","",71,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"clone","","",72,{"i":[{"n":"self"}],"o":{"n":"axis"}}],[11,"fmt","","",72,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",72,{"i":[{"n":"self"},{"n":"axis"}],"o":{"n":"bool"}}],[11,"from_raw","","",72,{"i":[{"n":"u32"}],"o":{"g":["axis"],"n":"option"}}],[11,"to_raw","","",72,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"clone","","",73,{"i":[{"n":"self"}],"o":{"n":"axissource"}}],[11,"fmt","","",73,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",73,{"i":[{"n":"self"},{"n":"axissource"}],"o":{"n":"bool"}}],[11,"from_raw","","",73,{"i":[{"n":"u32"}],"o":{"g":["axissource"],"n":"option"}}],[11,"to_raw","","",73,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"is_destructor","","",74,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",74,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",74,null],[11,"into_raw","","",74,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",74,null],[11,"as_raw_c_in","","",74,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",75,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",75,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",75,null],[11,"into_raw","","",75,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",75,null],[11,"as_raw_c_in","","",75,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",122,null],[11,"set_cursor","wayland_client","",9,null],[11,"release","","",9,null],[11,"clone","wayland_client::protocol::wl_keyboard","",77,{"i":[{"n":"self"}],"o":{"n":"keymapformat"}}],[11,"fmt","","",77,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",77,{"i":[{"n":"self"},{"n":"keymapformat"}],"o":{"n":"bool"}}],[11,"from_raw","","",77,{"i":[{"n":"u32"}],"o":{"g":["keymapformat"],"n":"option"}}],[11,"to_raw","","",77,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"clone","","",78,{"i":[{"n":"self"}],"o":{"n":"keystate"}}],[11,"fmt","","",78,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",78,{"i":[{"n":"self"},{"n":"keystate"}],"o":{"n":"bool"}}],[11,"from_raw","","",78,{"i":[{"n":"u32"}],"o":{"g":["keystate"],"n":"option"}}],[11,"to_raw","","",78,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"is_destructor","","",79,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",79,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",79,null],[11,"into_raw","","",79,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",79,null],[11,"as_raw_c_in","","",79,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",80,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",80,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",80,null],[11,"into_raw","","",80,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",80,null],[11,"as_raw_c_in","","",80,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",123,null],[11,"release","wayland_client","",9,null],[11,"is_destructor","wayland_client::protocol::wl_touch","",82,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",82,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",82,null],[11,"into_raw","","",82,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",82,null],[11,"as_raw_c_in","","",82,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",83,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",83,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",83,null],[11,"into_raw","","",83,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",83,null],[11,"as_raw_c_in","","",83,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",124,null],[11,"release","wayland_client","",9,null],[11,"clone","wayland_client::protocol::wl_output","",85,{"i":[{"n":"self"}],"o":{"n":"subpixel"}}],[11,"fmt","","",85,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",85,{"i":[{"n":"self"},{"n":"subpixel"}],"o":{"n":"bool"}}],[11,"from_raw","","",85,{"i":[{"n":"u32"}],"o":{"g":["subpixel"],"n":"option"}}],[11,"to_raw","","",85,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"clone","","",86,{"i":[{"n":"self"}],"o":{"n":"transform"}}],[11,"fmt","","",86,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",86,{"i":[{"n":"self"},{"n":"transform"}],"o":{"n":"bool"}}],[11,"from_raw","","",86,{"i":[{"n":"u32"}],"o":{"g":["transform"],"n":"option"}}],[11,"to_raw","","",86,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"eq","","",125,{"i":[{"n":"self"},{"n":"mode"}],"o":{"n":"bool"}}],[11,"ne","","",125,{"i":[{"n":"self"},{"n":"mode"}],"o":{"n":"bool"}}],[11,"clone","","",125,{"i":[{"n":"self"}],"o":{"n":"mode"}}],[11,"partial_cmp","","",125,{"i":[{"n":"self"},{"n":"mode"}],"o":{"g":["ordering"],"n":"option"}}],[11,"lt","","",125,{"i":[{"n":"self"},{"n":"mode"}],"o":{"n":"bool"}}],[11,"le","","",125,{"i":[{"n":"self"},{"n":"mode"}],"o":{"n":"bool"}}],[11,"gt","","",125,{"i":[{"n":"self"},{"n":"mode"}],"o":{"n":"bool"}}],[11,"ge","","",125,{"i":[{"n":"self"},{"n":"mode"}],"o":{"n":"bool"}}],[11,"cmp","","",125,{"i":[{"n":"self"},{"n":"mode"}],"o":{"n":"ordering"}}],[11,"hash","","",125,null],[11,"fmt","","",125,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",125,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",125,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",125,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",125,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[18,"Current","","indicates this is the current mode",125,null],[18,"Preferred","","indicates this is the preferred mode",125,null],[11,"empty","","Returns an empty set of flags.",125,{"o":{"n":"mode"}}],[11,"all","","Returns the set containing all flags.",125,{"o":{"n":"mode"}}],[11,"bits","","Returns the raw value of the flags currently stored.",125,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",125,{"i":[{"n":"u32"}],"o":{"g":["mode"],"n":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",125,{"i":[{"n":"u32"}],"o":{"n":"mode"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",125,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",125,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",125,{"i":[{"n":"self"},{"n":"mode"}],"o":{"n":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",125,{"i":[{"n":"self"},{"n":"mode"}],"o":{"n":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",125,{"i":[{"n":"self"},{"n":"mode"}]}],[11,"remove","","Removes the specified flags in-place.",125,{"i":[{"n":"self"},{"n":"mode"}]}],[11,"toggle","","Toggles the specified flags in-place.",125,{"i":[{"n":"self"},{"n":"mode"}]}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",125,{"i":[{"n":"self"},{"n":"mode"},{"n":"bool"}]}],[11,"bitor","","Returns the union of the two sets of flags.",125,{"i":[{"n":"self"},{"n":"mode"}],"o":{"n":"mode"}}],[11,"bitor_assign","","Adds the set of flags.",125,{"i":[{"n":"self"},{"n":"mode"}]}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",125,{"i":[{"n":"self"},{"n":"mode"}],"o":{"n":"mode"}}],[11,"bitxor_assign","","Toggles the set of flags.",125,{"i":[{"n":"self"},{"n":"mode"}]}],[11,"bitand","","Returns the intersection between the two sets of flags.",125,{"i":[{"n":"self"},{"n":"mode"}],"o":{"n":"mode"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",125,{"i":[{"n":"self"},{"n":"mode"}]}],[11,"sub","","Returns the set difference of the two sets of flags.",125,{"i":[{"n":"self"},{"n":"mode"}],"o":{"n":"mode"}}],[11,"sub_assign","","Disables all flags enabled in the set.",125,{"i":[{"n":"self"},{"n":"mode"}]}],[11,"not","","Returns the complement of this set of flags.",125,{"i":[{"n":"self"}],"o":{"n":"mode"}}],[11,"extend","","",125,{"i":[{"n":"self"},{"n":"t"}]}],[11,"from_iter","","",125,{"i":[{"n":"t"}],"o":{"n":"mode"}}],[11,"from_raw","","",125,{"i":[{"n":"u32"}],"o":{"g":["mode"],"n":"option"}}],[11,"to_raw","","",125,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"is_destructor","","",87,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",87,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",87,null],[11,"into_raw","","",87,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",87,null],[11,"as_raw_c_in","","",87,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",88,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",88,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",88,null],[11,"into_raw","","",88,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",88,null],[11,"as_raw_c_in","","",88,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",126,null],[11,"release","wayland_client","",9,null],[11,"is_destructor","wayland_client::protocol::wl_region","",90,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",90,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",90,null],[11,"into_raw","","",90,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",90,null],[11,"as_raw_c_in","","",90,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",127,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",127,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",127,null],[11,"into_raw","","",127,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",127,null],[11,"as_raw_c_in","","",127,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",128,null],[11,"destroy","wayland_client","",9,null],[11,"add","","",9,null],[11,"subtract","","",9,null],[11,"clone","wayland_client::protocol::wl_subcompositor","",92,{"i":[{"n":"self"}],"o":{"n":"error"}}],[11,"fmt","","",92,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",92,{"i":[{"n":"self"},{"n":"error"}],"o":{"n":"bool"}}],[11,"from_raw","","",92,{"i":[{"n":"u32"}],"o":{"g":["error"],"n":"option"}}],[11,"to_raw","","",92,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"is_destructor","","",93,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",93,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",93,null],[11,"into_raw","","",93,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",93,null],[11,"as_raw_c_in","","",93,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",129,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",129,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",129,null],[11,"into_raw","","",129,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",129,null],[11,"as_raw_c_in","","",129,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",130,null],[11,"destroy","wayland_client","",9,null],[11,"get_subsurface","","",9,{"i":[{"n":"self"},{"n":"proxy"},{"n":"proxy"},{"n":"f"}],"o":{"g":["proxy"],"n":"result"}}],[11,"clone","wayland_client::protocol::wl_subsurface","",95,{"i":[{"n":"self"}],"o":{"n":"error"}}],[11,"fmt","","",95,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",95,{"i":[{"n":"self"},{"n":"error"}],"o":{"n":"bool"}}],[11,"from_raw","","",95,{"i":[{"n":"u32"}],"o":{"g":["error"],"n":"option"}}],[11,"to_raw","","",95,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"is_destructor","","",96,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",96,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",96,null],[11,"into_raw","","",96,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",96,null],[11,"as_raw_c_in","","",96,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",131,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",131,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",131,null],[11,"into_raw","","",131,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",131,null],[11,"as_raw_c_in","","",131,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",132,null],[11,"destroy","wayland_client","",9,null],[11,"set_position","","",9,null],[11,"place_above","","",9,null],[11,"place_below","","",9,null],[11,"set_sync","","",9,null],[11,"set_desync","","",9,null],[8,"GlobalImplementor","","A trait for implementation of the global advertizement",null,null],[10,"new_global","","A new global of given interface has been instanciated and you are supposed to provide an implementation for it.",133,{"i":[{"n":"self"},{"n":"newproxy"}],"o":{"n":"proxy"}}],[11,"error","","A global was advertized but its version was lower than the minimal version you requested.",133,{"i":[{"n":"self"},{"n":"u32"}]}],[11,"register","","",6,{"i":[{"n":"self"},{"n":"poll"},{"n":"token"},{"n":"ready"},{"n":"pollopt"}],"o":{"n":"result"}}],[11,"reregister","","",6,{"i":[{"n":"self"},{"n":"poll"},{"n":"token"},{"n":"ready"},{"n":"pollopt"}],"o":{"n":"result"}}],[11,"deregister","","",6,{"i":[{"n":"self"},{"n":"poll"}],"o":{"n":"result"}}],[11,"interest","","",6,{"i":[{"n":"self"}],"o":{"n":"ready"}}],[11,"pollopts","","",6,{"i":[{"n":"self"}],"o":{"n":"pollopt"}}],[11,"make_dispatcher","","",6,{"i":[{"n":"self"},{"n":"f"}],"o":{"g":["refcell"],"n":"rc"}}],[14,"global_filter","","Convenience macro to create a `GlobalManager` callback",null,null],[11,"is_destructor","","",134,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",134,{"i":[{"n":"u16"},{"n":"u32"},{"n":"m"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",134,null],[11,"into_raw","","",134,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",134,null],[11,"as_raw_c_in","","",134,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",135,null],[11,"initialize","wayland_client::sys::client","",136,null],[11,"initialize","","",137,null],[11,"deref","","",137,{"i":[{"n":"self"}],"o":{"n":"waylandclient"}}],[11,"deref","","",136,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"error","wayland_client","A global was advertized but its version was lower than the minimal version you requested.",133,{"i":[{"n":"self"},{"n":"u32"}]}],[11,"open","wayland_client::sys::client","",16,{"i":[{"n":"str"}],"o":{"g":["waylandclient","dlerror"],"n":"result"}}]],"paths":[[8,"Interface"],[8,"MessageGroup"],[4,"ConnectError"],[4,"GlobalError"],[4,"GlobalEvent"],[3,"Display"],[3,"EventQueue"],[3,"ReadEventsGuard"],[3,"GlobalManager"],[3,"Proxy"],[3,"NewProxy"],[3,"CursorTheme"],[3,"Cursor"],[3,"CursorImageBuffer"],[3,"WlEglSurface"],[4,"ProxyMap"],[3,"WaylandClient"],[3,"wl_message"],[3,"wl_interface"],[3,"wl_list"],[3,"wl_array"],[19,"wl_argument"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Event"],[4,"Request"],[8,"RequestsTrait"],[4,"Request"],[8,"RequestsTrait"],[4,"Error"],[4,"Format"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[8,"RequestsTrait"],[4,"Error"],[4,"Request"],[8,"RequestsTrait"],[4,"FullscreenMethod"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Error"],[4,"ButtonState"],[4,"Axis"],[4,"AxisSource"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"KeymapFormat"],[4,"KeyState"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Subpixel"],[4,"Transform"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[8,"RequestsTrait"],[4,"Error"],[4,"Request"],[8,"RequestsTrait"],[4,"Error"],[4,"Request"],[8,"RequestsTrait"],[3,"WlDisplay"],[3,"WlRegistry"],[4,"Request"],[3,"WlCallback"],[4,"Event"],[3,"WlCompositor"],[4,"Event"],[3,"WlShmPool"],[3,"WlShm"],[3,"WlBuffer"],[3,"WlDataOffer"],[3,"WlDataSource"],[3,"WlDataDevice"],[3,"DndAction"],[4,"Event"],[3,"WlDataDeviceManager"],[4,"Event"],[3,"WlShell"],[3,"Resize"],[3,"Transient"],[3,"WlShellSurface"],[3,"WlSurface"],[3,"Capability"],[3,"WlSeat"],[3,"WlPointer"],[3,"WlKeyboard"],[3,"WlTouch"],[3,"Mode"],[3,"WlOutput"],[4,"Event"],[3,"WlRegion"],[4,"Event"],[3,"WlSubcompositor"],[4,"Event"],[3,"WlSubsurface"],[8,"GlobalImplementor"],[4,"NoMessage"],[3,"AnonymousObject"],[3,"WAYLAND_CLIENT_OPTION"],[3,"WAYLAND_CLIENT_HANDLE"]]};
searchIndex["wayland_commons"] = {"doc":"Common definitions for wayland","items":[[3,"AnonymousObject","wayland_commons","Anonymous interface",null,null],[4,"NoMessage","","An empty enum representing a MessageGroup with no messages",null,null],[0,"map","","Wayland objects map",null,null],[3,"Object","wayland_commons::map","The representation of a protocol object",null,null],[12,"interface","","Interface name of this object",0,null],[12,"version","","Version of this object",0,null],[12,"requests","","Description of the requests of this object",0,null],[12,"events","","Description of the events of this object",0,null],[12,"meta","","Metadata associated to this object (ex: its event queue client side)",0,null],[12,"childs_from_events","","A function which, from an opcode, a version, and the Meta, creates a child object associated with this event if any",0,null],[12,"childs_from_requests","","A function which, from an opcode, a version, and the Meta, creates a child object associated with this request if any",0,null],[3,"ObjectMap","","A holder for the object store of a connection",null,null],[17,"SERVER_ID_LIMIT","","Limit separating server-created from client-created objects IDs in the namespace",null,null],[8,"ObjectMetadata","","A trait representing the metadata a wayland implementation may attach to an object.",null,null],[10,"child","","Create the metadata for a child object",1,{"i":[{"n":"self"}],"o":{"n":"self"}}],[11,"clone","","",0,{"i":[{"n":"self"}],"o":{"n":"object"}}],[11,"from_interface","","Create an Object corresponding to given interface and version",0,{"i":[{"n":"u32"},{"n":"meta"}],"o":{"n":"object"}}],[11,"event_child","","Create an optional `Object` corresponding to the possible `new_id` associated with given event opcode",0,{"i":[{"n":"self"},{"n":"u16"}],"o":{"g":["object"],"n":"option"}}],[11,"request_child","","Create an optional `Object` corresponding to the possible `new_id` associated with given request opcode",0,{"i":[{"n":"self"},{"n":"u16"}],"o":{"g":["object"],"n":"option"}}],[11,"is_interface","","Check whether this object is of given interface",0,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"new","","Create a new empty object map",2,{"o":{"n":"objectmap"}}],[11,"find","","Find an object in the store",2,{"i":[{"n":"self"},{"n":"u32"}],"o":{"g":["object"],"n":"option"}}],[11,"remove","","Remove an object from the store",2,{"i":[{"n":"self"},{"n":"u32"}]}],[11,"insert_at","","Insert given object for given id",2,{"i":[{"n":"self"},{"n":"u32"},{"n":"object"}],"o":{"n":"result"}}],[11,"client_insert_new","","Allocate a new id for an object in the client namespace",2,{"i":[{"n":"self"},{"n":"object"}],"o":{"n":"u32"}}],[11,"server_insert_new","","Allocate a new id for an object in the server namespace",2,{"i":[{"n":"self"},{"n":"object"}],"o":{"n":"u32"}}],[11,"with","","Mutably access an object of the map",2,{"i":[{"n":"self"},{"n":"u32"},{"n":"f"}],"o":{"n":"result"}}],[11,"with_all","","Mutably access all objects of the map in sequence",2,{"i":[{"n":"self"},{"n":"f"}]}],[0,"socket","wayland_commons","Wayland socket manipulation",null,null],[3,"Socket","wayland_commons::socket","A wayland socket",null,null],[3,"BufferedSocket","","An adapter around a raw Socket that directly handles buffering and conversion from/to wayland messages",null,null],[17,"MAX_FDS_OUT","","Maximum number of FD that can be sent in a single socket message",null,null],[17,"MAX_BYTES_OUT","","Maximum number of bytes that can be sent in a single socket message",null,null],[11,"send_msg","","Send a single message to the socket",3,null],[11,"rcv_msg","","Receive a single message from the socket",3,null],[11,"from_raw_fd","","",3,{"i":[{"n":"rawfd"}],"o":{"n":"socket"}}],[11,"as_raw_fd","","",3,{"i":[{"n":"self"}],"o":{"n":"rawfd"}}],[11,"into_raw_fd","","",3,{"i":[{"n":"self"}],"o":{"n":"rawfd"}}],[11,"drop","","",3,{"i":[{"n":"self"}]}],[11,"new","","Wrap a Socket into a Buffered Socket",4,{"i":[{"n":"socket"}],"o":{"n":"bufferedsocket"}}],[11,"get_socket","","Get direct access to the underlying socket",4,{"i":[{"n":"self"}],"o":{"n":"socket"}}],[11,"into_socket","","Retreive ownership of the underlying Socket",4,{"i":[{"n":"self"}],"o":{"n":"socket"}}],[11,"flush","","Flush the contents of the outgoing buffer into the socket",4,{"i":[{"n":"self"}],"o":{"n":"nixresult"}}],[11,"write_message","","Write a message to the outgoing buffer",4,{"i":[{"n":"self"},{"n":"message"}],"o":{"n":"nixresult"}}],[11,"fill_incoming_buffers","","Try to fill the incoming buffers of this socket, to prepare a new round of parsing.",4,{"i":[{"n":"self"}],"o":{"n":"nixresult"}}],[11,"read_one_message","","Read and deserialize a single message from the incoming buffers socket",4,{"i":[{"n":"self"},{"n":"f"}],"o":{"g":["message","messageparseerror"],"n":"result"}}],[11,"read_messages","","Read and deserialize messages from the socket",4,{"i":[{"n":"self"},{"n":"f1"},{"n":"f2"}],"o":{"g":["result"],"n":"nixresult"}}],[0,"utils","wayland_commons","Various utilities used for other implementations",null,null],[3,"UserData","wayland_commons::utils","A wrapper for user data, able to store any type, and correctly handling access from a wrong thread",null,null],[3,"UserDataMap","","A storage able to store several values of `UserData` of different types. It behaves similarly to a `TypeMap`.",null,null],[11,"new_threadsafe","","Create a new `UserData` using a threadsafe type",5,{"i":[{"n":"t"}],"o":{"n":"userdata"}}],[11,"new","","Create a new `UserData` using a non-threadsafe type",5,{"i":[{"n":"t"}],"o":{"n":"userdata"}}],[11,"empty","","Create a new `UserData` containing nothing",5,{"o":{"n":"userdata"}}],[11,"get","","Attempt to access the wrapped user data",5,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"new","","Create a new map",6,{"o":{"n":"userdatamap"}}],[11,"get","","Attempt to access the wrapped user data of a given type",6,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"insert_if_missing","","Insert a value in the map if it is not already there",6,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"bool"}}],[11,"insert_if_missing_threadsafe","","Insert a value in the map if it is not already there",6,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"bool"}}],[0,"wire","wayland_commons","Types and routines used to manipulate arguments from the wire format",null,null],[3,"MessageDesc","wayland_commons::wire","Wire metadata of a given message",null,null],[12,"name","","Name of this message",7,null],[12,"signature","","Signature of the message",7,null],[12,"since","","Minimum required version of the interface",7,null],[3,"Message","","A wire message",null,null],[12,"sender_id","","ID of the object sending this message",8,null],[12,"opcode","","Opcode of the message",8,null],[12,"args","","Arguments of the message",8,null],[4,"ArgumentType","","Enum of possible argument types as recognized by the wire",null,null],[13,"Int","","i32",9,null],[13,"Uint","","u32",9,null],[13,"Fixed","","fixed point, 1/256 precision",9,null],[13,"Str","","CString",9,null],[13,"Object","","id of a wayland object",9,null],[13,"NewId","","id of a newly created wayland object",9,null],[13,"Array","","Vec",9,null],[13,"Fd","","RawFd",9,null],[4,"Argument","","Enum of possible argument as recognized by the wire, including values",null,null],[13,"Int","","i32",10,null],[13,"Uint","","u32",10,null],[13,"Fixed","","fixed point, 1/256 precision",10,null],[13,"Str","","CString",10,null],[13,"Object","","id of a wayland object",10,null],[13,"NewId","","id of a newly created wayland object",10,null],[13,"Array","","Vec",10,null],[13,"Fd","","RawFd",10,null],[4,"MessageWriteError","","Error generated when trying to serialize a message into buffers",null,null],[13,"BufferTooSmall","","The buffer is too small to hold the message contents",11,null],[13,"DupFdFailed","","The message contains a FD that could not be dup-ed",11,null],[4,"MessageParseError","","Error generated when trying to deserialize a message from buffers",null,null],[13,"MissingFD","","The message references a FD but the buffer FD is empty",12,null],[13,"MissingData","","More data is nedded to deserialize the message",12,null],[13,"Malformed","","The message is malformed and cannot be parsed",12,null],[5,"dup_fd_cloexec","","Duplicate a `RawFd` and set the CLOEXEC flag on the copy",null,{"i":[{"n":"rawfd"}],"o":{"g":["rawfd"],"n":"nixresult"}}],[11,"clone","","",9,{"i":[{"n":"self"}],"o":{"n":"argumenttype"}}],[11,"eq","","",9,{"i":[{"n":"self"},{"n":"argumenttype"}],"o":{"n":"bool"}}],[11,"fmt","","",9,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",10,{"i":[{"n":"self"}],"o":{"n":"argument"}}],[11,"eq","","",10,{"i":[{"n":"self"},{"n":"argument"}],"o":{"n":"bool"}}],[11,"ne","","",10,{"i":[{"n":"self"},{"n":"argument"}],"o":{"n":"bool"}}],[11,"fmt","","",10,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"get_type","","Retrieve the type of a given argument isntance",10,{"i":[{"n":"self"}],"o":{"n":"argumenttype"}}],[11,"fmt","","",8,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",8,{"i":[{"n":"self"}],"o":{"n":"message"}}],[11,"eq","","",8,{"i":[{"n":"self"},{"n":"message"}],"o":{"n":"bool"}}],[11,"ne","","",8,{"i":[{"n":"self"},{"n":"message"}],"o":{"n":"bool"}}],[11,"fmt","","",11,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",11,{"i":[{"n":"self"}],"o":{"n":"messagewriteerror"}}],[11,"fmt","","",12,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"clone","","",12,{"i":[{"n":"self"}],"o":{"n":"messageparseerror"}}],[11,"write_to_buffers","","Serialize the contents of this message into provided buffers",8,null],[11,"from_raw","","Attempts to parse a single wayland message with the given signature.",8,null],[8,"MessageGroup","wayland_commons","A group of messages",null,null],[18,"MESSAGES","","Wire representation of this MessageGroup",13,null],[16,"Map","","The wrapper type for ObjectMap allowing the mapping of Object and NewId arguments to the object map during parsing.",13,null],[10,"is_destructor","","Whether this message is a destructor",13,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[10,"child","","Retrieve the child `Object` associated with this message if any",13,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[10,"from_raw","","Construct a message from its raw representation",13,null],[10,"into_raw","","Turn this message into its raw representation",13,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[10,"from_raw_c","","Construct a message of this group from its C representation",13,null],[10,"as_raw_c_in","","Build a C representation of this message",13,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[8,"Interface","","The description of a wayland interface",null,null],[16,"Request","","Set of requests associated to this interface",14,null],[16,"Event","","Set of events associated to this interface",14,null],[18,"NAME","","Name of this interface",14,null],[18,"VERSION","","Maximum supported version of this interface",14,null],[10,"c_interface","","Pointer to the C representation of this interface",14,null],[11,"c_interface","","",15,null],[11,"is_destructor","","",16,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",16,{"i":[{"n":"u16"},{"n":"u32"},{"n":"m"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",16,null],[11,"into_raw","","",16,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",16,null],[11,"as_raw_c_in","","",16,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}]],"paths":[[3,"Object"],[8,"ObjectMetadata"],[3,"ObjectMap"],[3,"Socket"],[3,"BufferedSocket"],[3,"UserData"],[3,"UserDataMap"],[3,"MessageDesc"],[3,"Message"],[4,"ArgumentType"],[4,"Argument"],[4,"MessageWriteError"],[4,"MessageParseError"],[8,"MessageGroup"],[8,"Interface"],[3,"AnonymousObject"],[4,"NoMessage"]]};
searchIndex["wayland_protocols"] = {"doc":"This crate provides bindings to the official wayland protocol extensions provided in https://cgit.freedesktop.org/wayland/wayland-protocols","items":[[0,"unstable","wayland_protocols","Unstable protocols from wayland-protocols",null,null],[0,"fullscreen_shell","wayland_protocols::unstable","Fullscreen shell protocol",null,null],[0,"v1","wayland_protocols::unstable::fullscreen_shell","",null,null],[0,"client","wayland_protocols::unstable::fullscreen_shell::v1","Client-side API of this protocol",null,null],[0,"zwp_fullscreen_shell_v1","wayland_protocols::unstable::fullscreen_shell::v1::client","displays a single surface per output",null,null],[3,"ZwpFullscreenShellV1","wayland_protocols::unstable::fullscreen_shell::v1::client::zwp_fullscreen_shell_v1","",null,null],[4,"Capability","","capabilities advertised by the compositor",null,null],[13,"ArbitraryModes","","compositor is capable of almost any output mode",0,null],[13,"CursorPlane","","compositor has a separate cursor plane",0,null],[4,"PresentMethod","","different method to set the surface fullscreen",null,null],[13,"Default","","no preference, apply default policy",1,null],[13,"Center","","center the surface on the output",1,null],[13,"Zoom","","scale the surface, preserving aspect ratio, to the largest size that will fit on the output",1,null],[13,"ZoomCrop","","scale the surface, preserving aspect ratio, to fully fill the output cropping if needed",1,null],[13,"Stretch","","scale the surface to the size of the output ignoring aspect ratio",1,null],[4,"Error","","wl_fullscreen_shell error values",null,null],[13,"InvalidMethod","","present_method is not known",2,null],[4,"Request","","",null,null],[13,"Release","","release the wl_fullscreen_shell interface",3,null],[13,"PresentSurface","","present surface for display",3,null],[12,"surface","wayland_protocols::unstable::fullscreen_shell::v1::client::zwp_fullscreen_shell_v1::Request","",3,null],[12,"method","","",3,null],[12,"output","","",3,null],[13,"PresentSurfaceForMode","wayland_protocols::unstable::fullscreen_shell::v1::client::zwp_fullscreen_shell_v1","present surface for display at a particular mode",3,null],[12,"surface","wayland_protocols::unstable::fullscreen_shell::v1::client::zwp_fullscreen_shell_v1::Request","",3,null],[12,"output","","",3,null],[12,"framerate","","",3,null],[12,"feedback","","",3,null],[4,"Event","wayland_protocols::unstable::fullscreen_shell::v1::client::zwp_fullscreen_shell_v1","",null,null],[13,"Capability","","advertises a capability of the compositor",4,null],[12,"capability","wayland_protocols::unstable::fullscreen_shell::v1::client::zwp_fullscreen_shell_v1::Event","",4,null],[8,"RequestsTrait","wayland_protocols::unstable::fullscreen_shell::v1::client::zwp_fullscreen_shell_v1","",null,null],[10,"release","","release the wl_fullscreen_shell interface",5,null],[10,"present_surface","","present surface for display",5,null],[10,"present_surface_for_mode","","present surface for display at a particular mode",5,{"i":[{"n":"self"},{"n":"proxy"},{"n":"proxy"},{"n":"i32"},{"n":"f"}],"o":{"g":["proxy"],"n":"result"}}],[0,"zwp_fullscreen_shell_mode_feedback_v1","wayland_protocols::unstable::fullscreen_shell::v1::client","",null,null],[3,"ZwpFullscreenShellModeFeedbackV1","wayland_protocols::unstable::fullscreen_shell::v1::client::zwp_fullscreen_shell_mode_feedback_v1","",null,null],[4,"Request","","",null,null],[4,"Event","","",null,null],[13,"ModeSuccessful","","mode switch succeeded",6,null],[13,"ModeFailed","","mode switch failed",6,null],[13,"PresentCancelled","","mode switch cancelled",6,null],[8,"RequestsTrait","","",null,null],[0,"server","wayland_protocols::unstable::fullscreen_shell::v1","Server-side API of this protocol",null,null],[0,"zwp_fullscreen_shell_v1","wayland_protocols::unstable::fullscreen_shell::v1::server","displays a single surface per output",null,null],[3,"ZwpFullscreenShellV1","wayland_protocols::unstable::fullscreen_shell::v1::server::zwp_fullscreen_shell_v1","",null,null],[4,"Capability","","capabilities advertised by the compositor",null,null],[13,"ArbitraryModes","","compositor is capable of almost any output mode",7,null],[13,"CursorPlane","","compositor has a separate cursor plane",7,null],[4,"PresentMethod","","different method to set the surface fullscreen",null,null],[13,"Default","","no preference, apply default policy",8,null],[13,"Center","","center the surface on the output",8,null],[13,"Zoom","","scale the surface, preserving aspect ratio, to the largest size that will fit on the output",8,null],[13,"ZoomCrop","","scale the surface, preserving aspect ratio, to fully fill the output cropping if needed",8,null],[13,"Stretch","","scale the surface to the size of the output ignoring aspect ratio",8,null],[4,"Error","","wl_fullscreen_shell error values",null,null],[13,"InvalidMethod","","present_method is not known",9,null],[4,"Request","","",null,null],[13,"Release","","release the wl_fullscreen_shell interface",10,null],[13,"PresentSurface","","present surface for display",10,null],[12,"surface","wayland_protocols::unstable::fullscreen_shell::v1::server::zwp_fullscreen_shell_v1::Request","",10,null],[12,"method","","",10,null],[12,"output","","",10,null],[13,"PresentSurfaceForMode","wayland_protocols::unstable::fullscreen_shell::v1::server::zwp_fullscreen_shell_v1","present surface for display at a particular mode",10,null],[12,"surface","wayland_protocols::unstable::fullscreen_shell::v1::server::zwp_fullscreen_shell_v1::Request","",10,null],[12,"output","","",10,null],[12,"framerate","","",10,null],[12,"feedback","","",10,null],[4,"Event","wayland_protocols::unstable::fullscreen_shell::v1::server::zwp_fullscreen_shell_v1","",null,null],[13,"Capability","","advertises a capability of the compositor",11,null],[12,"capability","wayland_protocols::unstable::fullscreen_shell::v1::server::zwp_fullscreen_shell_v1::Event","",11,null],[0,"zwp_fullscreen_shell_mode_feedback_v1","wayland_protocols::unstable::fullscreen_shell::v1::server","",null,null],[3,"ZwpFullscreenShellModeFeedbackV1","wayland_protocols::unstable::fullscreen_shell::v1::server::zwp_fullscreen_shell_mode_feedback_v1","",null,null],[4,"Request","","",null,null],[4,"Event","","",null,null],[13,"ModeSuccessful","","mode switch succeeded",12,null],[13,"ModeFailed","","mode switch failed",12,null],[13,"PresentCancelled","","mode switch cancelled",12,null],[0,"c_interfaces","wayland_protocols::unstable::fullscreen_shell::v1","C interfaces for this protocol",null,null],[7,"wl_surface_interface","wayland_protocols::unstable::fullscreen_shell::v1::c_interfaces","",null,null],[7,"wl_output_interface","","",null,null],[7,"zwp_fullscreen_shell_v1_requests","","",null,null],[7,"zwp_fullscreen_shell_v1_events","","",null,null],[7,"zwp_fullscreen_shell_v1_interface","","",null,null],[7,"zwp_fullscreen_shell_mode_feedback_v1_events","","",null,null],[7,"zwp_fullscreen_shell_mode_feedback_v1_interface","","",null,null],[11,"clone","wayland_protocols::unstable::fullscreen_shell::v1::client::zwp_fullscreen_shell_v1","",0,{"i":[{"n":"self"}],"o":{"n":"capability"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",0,{"i":[{"n":"self"},{"n":"capability"}],"o":{"n":"bool"}}],[11,"from_raw","","",0,{"i":[{"n":"u32"}],"o":{"g":["capability"],"n":"option"}}],[11,"to_raw","","",0,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"clone","","",1,{"i":[{"n":"self"}],"o":{"n":"presentmethod"}}],[11,"fmt","","",1,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",1,{"i":[{"n":"self"},{"n":"presentmethod"}],"o":{"n":"bool"}}],[11,"from_raw","","",1,{"i":[{"n":"u32"}],"o":{"g":["presentmethod"],"n":"option"}}],[11,"to_raw","","",1,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"clone","","",2,{"i":[{"n":"self"}],"o":{"n":"error"}}],[11,"fmt","","",2,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",2,{"i":[{"n":"self"},{"n":"error"}],"o":{"n":"bool"}}],[11,"from_raw","","",2,{"i":[{"n":"u32"}],"o":{"g":["error"],"n":"option"}}],[11,"to_raw","","",2,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"is_destructor","","",3,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",3,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",3,null],[11,"into_raw","","",3,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",3,null],[11,"as_raw_c_in","","",3,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",4,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",4,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",4,null],[11,"into_raw","","",4,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",4,null],[11,"as_raw_c_in","","",4,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",13,null],[11,"is_destructor","wayland_protocols::unstable::fullscreen_shell::v1::client::zwp_fullscreen_shell_mode_feedback_v1","",14,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",14,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",14,null],[11,"into_raw","","",14,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",14,null],[11,"as_raw_c_in","","",14,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",6,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",6,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",6,null],[11,"into_raw","","",6,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",6,null],[11,"as_raw_c_in","","",6,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",15,null],[11,"clone","wayland_protocols::unstable::fullscreen_shell::v1::server::zwp_fullscreen_shell_v1","",7,{"i":[{"n":"self"}],"o":{"n":"capability"}}],[11,"fmt","","",7,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",7,{"i":[{"n":"self"},{"n":"capability"}],"o":{"n":"bool"}}],[11,"from_raw","","",7,{"i":[{"n":"u32"}],"o":{"g":["capability"],"n":"option"}}],[11,"to_raw","","",7,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"clone","","",8,{"i":[{"n":"self"}],"o":{"n":"presentmethod"}}],[11,"fmt","","",8,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",8,{"i":[{"n":"self"},{"n":"presentmethod"}],"o":{"n":"bool"}}],[11,"from_raw","","",8,{"i":[{"n":"u32"}],"o":{"g":["presentmethod"],"n":"option"}}],[11,"to_raw","","",8,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"clone","","",9,{"i":[{"n":"self"}],"o":{"n":"error"}}],[11,"fmt","","",9,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",9,{"i":[{"n":"self"},{"n":"error"}],"o":{"n":"bool"}}],[11,"from_raw","","",9,{"i":[{"n":"u32"}],"o":{"g":["error"],"n":"option"}}],[11,"to_raw","","",9,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"is_destructor","","",10,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",10,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",10,null],[11,"into_raw","","",10,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",10,null],[11,"as_raw_c_in","","",10,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",11,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",11,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",11,null],[11,"into_raw","","",11,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",11,null],[11,"as_raw_c_in","","",11,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",16,null],[11,"is_destructor","wayland_protocols::unstable::fullscreen_shell::v1::server::zwp_fullscreen_shell_mode_feedback_v1","",17,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",17,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",17,null],[11,"into_raw","","",17,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",17,null],[11,"as_raw_c_in","","",17,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",12,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",12,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",12,null],[11,"into_raw","","",12,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",12,null],[11,"as_raw_c_in","","",12,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",18,null],[0,"idle_inhibit","wayland_protocols::unstable","Screensaver inhibition protocol",null,null],[0,"v1","wayland_protocols::unstable::idle_inhibit","",null,null],[0,"client","wayland_protocols::unstable::idle_inhibit::v1","Client-side API of this protocol",null,null],[0,"zwp_idle_inhibit_manager_v1","wayland_protocols::unstable::idle_inhibit::v1::client","control behavior when display idles",null,null],[3,"ZwpIdleInhibitManagerV1","wayland_protocols::unstable::idle_inhibit::v1::client::zwp_idle_inhibit_manager_v1","",null,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the idle inhibitor object",19,null],[13,"CreateInhibitor","","create a new inhibitor object",19,null],[12,"id","wayland_protocols::unstable::idle_inhibit::v1::client::zwp_idle_inhibit_manager_v1::Request","",19,null],[12,"surface","","",19,null],[4,"Event","wayland_protocols::unstable::idle_inhibit::v1::client::zwp_idle_inhibit_manager_v1","",null,null],[8,"RequestsTrait","","",null,null],[10,"destroy","","destroy the idle inhibitor object",20,null],[10,"create_inhibitor","","create a new inhibitor object",20,{"i":[{"n":"self"},{"n":"proxy"},{"n":"f"}],"o":{"g":["proxy"],"n":"result"}}],[0,"zwp_idle_inhibitor_v1","wayland_protocols::unstable::idle_inhibit::v1::client","context object for inhibiting idle behavior",null,null],[3,"ZwpIdleInhibitorV1","wayland_protocols::unstable::idle_inhibit::v1::client::zwp_idle_inhibitor_v1","",null,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the idle inhibitor object",21,null],[4,"Event","","",null,null],[8,"RequestsTrait","","",null,null],[10,"destroy","","destroy the idle inhibitor object",22,null],[0,"server","wayland_protocols::unstable::idle_inhibit::v1","Server-side API of this protocol",null,null],[0,"zwp_idle_inhibit_manager_v1","wayland_protocols::unstable::idle_inhibit::v1::server","control behavior when display idles",null,null],[3,"ZwpIdleInhibitManagerV1","wayland_protocols::unstable::idle_inhibit::v1::server::zwp_idle_inhibit_manager_v1","",null,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the idle inhibitor object",23,null],[13,"CreateInhibitor","","create a new inhibitor object",23,null],[12,"id","wayland_protocols::unstable::idle_inhibit::v1::server::zwp_idle_inhibit_manager_v1::Request","",23,null],[12,"surface","","",23,null],[4,"Event","wayland_protocols::unstable::idle_inhibit::v1::server::zwp_idle_inhibit_manager_v1","",null,null],[0,"zwp_idle_inhibitor_v1","wayland_protocols::unstable::idle_inhibit::v1::server","context object for inhibiting idle behavior",null,null],[3,"ZwpIdleInhibitorV1","wayland_protocols::unstable::idle_inhibit::v1::server::zwp_idle_inhibitor_v1","",null,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the idle inhibitor object",24,null],[4,"Event","","",null,null],[0,"c_interfaces","wayland_protocols::unstable::idle_inhibit::v1","C interfaces for this protocol",null,null],[7,"wl_surface_interface","wayland_protocols::unstable::idle_inhibit::v1::c_interfaces","",null,null],[7,"zwp_idle_inhibit_manager_v1_requests","","",null,null],[7,"zwp_idle_inhibit_manager_v1_interface","","",null,null],[7,"zwp_idle_inhibitor_v1_requests","","",null,null],[7,"zwp_idle_inhibitor_v1_interface","","",null,null],[11,"is_destructor","wayland_protocols::unstable::idle_inhibit::v1::client::zwp_idle_inhibit_manager_v1","",19,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",19,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",19,null],[11,"into_raw","","",19,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",19,null],[11,"as_raw_c_in","","",19,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",25,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",25,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",25,null],[11,"into_raw","","",25,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",25,null],[11,"as_raw_c_in","","",25,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",26,null],[11,"is_destructor","wayland_protocols::unstable::idle_inhibit::v1::client::zwp_idle_inhibitor_v1","",21,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",21,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",21,null],[11,"into_raw","","",21,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",21,null],[11,"as_raw_c_in","","",21,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",27,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",27,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",27,null],[11,"into_raw","","",27,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",27,null],[11,"as_raw_c_in","","",27,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",28,null],[11,"is_destructor","wayland_protocols::unstable::idle_inhibit::v1::server::zwp_idle_inhibit_manager_v1","",23,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",23,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",23,null],[11,"into_raw","","",23,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",23,null],[11,"as_raw_c_in","","",23,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",29,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",29,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",29,null],[11,"into_raw","","",29,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",29,null],[11,"as_raw_c_in","","",29,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",30,null],[11,"is_destructor","wayland_protocols::unstable::idle_inhibit::v1::server::zwp_idle_inhibitor_v1","",24,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",24,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",24,null],[11,"into_raw","","",24,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",24,null],[11,"as_raw_c_in","","",24,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",31,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",31,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",31,null],[11,"into_raw","","",31,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",31,null],[11,"as_raw_c_in","","",31,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",32,null],[0,"input_method","wayland_protocols::unstable","Input method protocol",null,null],[0,"v1","wayland_protocols::unstable::input_method","",null,null],[0,"client","wayland_protocols::unstable::input_method::v1","Client-side API of this protocol",null,null],[0,"zwp_input_method_context_v1","wayland_protocols::unstable::input_method::v1::client","input method context",null,null],[3,"ZwpInputMethodContextV1","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","",null,null],[4,"Request","","",null,null],[13,"Destroy","","This is a destructor, once sent this object cannot be used any longer.",33,null],[13,"CommitString","","commit string",33,null],[12,"serial","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1::Request","",33,null],[12,"text","","",33,null],[13,"PreeditString","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","pre-edit string",33,null],[12,"serial","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1::Request","",33,null],[12,"text","","",33,null],[12,"commit","","",33,null],[13,"PreeditStyling","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","pre-edit styling",33,null],[12,"index","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1::Request","",33,null],[12,"length","","",33,null],[12,"style","","",33,null],[13,"PreeditCursor","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","pre-edit cursor",33,null],[12,"index","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1::Request","",33,null],[13,"DeleteSurroundingText","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","delete text",33,null],[12,"index","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1::Request","",33,null],[12,"length","","",33,null],[13,"CursorPosition","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","set cursor to a new position",33,null],[12,"index","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1::Request","",33,null],[12,"anchor","","",33,null],[13,"ModifiersMap","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","",33,null],[12,"map","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1::Request","",33,null],[13,"Keysym","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","keysym",33,null],[12,"serial","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1::Request","",33,null],[12,"time","","",33,null],[12,"sym","","",33,null],[12,"state","","",33,null],[12,"modifiers","","",33,null],[13,"GrabKeyboard","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","grab hardware keyboard",33,null],[12,"keyboard","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1::Request","",33,null],[13,"Key","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","forward key event",33,null],[12,"serial","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1::Request","",33,null],[12,"time","","",33,null],[12,"key","","",33,null],[12,"state","","",33,null],[13,"Modifiers","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","forward modifiers event",33,null],[12,"serial","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1::Request","",33,null],[12,"mods_depressed","","",33,null],[12,"mods_latched","","",33,null],[12,"mods_locked","","",33,null],[12,"group","","",33,null],[13,"Language","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","",33,null],[12,"serial","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1::Request","",33,null],[12,"language","","",33,null],[13,"TextDirection","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","",33,null],[12,"serial","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1::Request","",33,null],[12,"direction","","",33,null],[4,"Event","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","",null,null],[13,"SurroundingText","","surrounding text event",34,null],[12,"text","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1::Event","",34,null],[12,"cursor","","",34,null],[12,"anchor","","",34,null],[13,"Reset","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","",34,null],[13,"ContentType","","",34,null],[12,"hint","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1::Event","",34,null],[12,"purpose","","",34,null],[13,"InvokeAction","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","",34,null],[12,"button","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1::Event","",34,null],[12,"index","","",34,null],[13,"CommitState","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","",34,null],[12,"serial","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1::Event","",34,null],[13,"PreferredLanguage","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","",34,null],[12,"language","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1::Event","",34,null],[8,"RequestsTrait","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","",null,null],[10,"destroy","","This is a destructor, you cannot send requests to this object any longer once this method is called.",35,null],[10,"commit_string","","commit string",35,null],[10,"preedit_string","","pre-edit string",35,null],[10,"preedit_styling","","pre-edit styling",35,null],[10,"preedit_cursor","","pre-edit cursor",35,null],[10,"delete_surrounding_text","","delete text",35,null],[10,"cursor_position","","set cursor to a new position",35,null],[10,"modifiers_map","","",35,null],[10,"keysym","","keysym",35,null],[10,"grab_keyboard","","grab hardware keyboard",35,{"i":[{"n":"self"},{"n":"f"}],"o":{"g":["proxy"],"n":"result"}}],[10,"key","","forward key event",35,null],[10,"modifiers","","forward modifiers event",35,null],[10,"language","","",35,null],[10,"text_direction","","",35,null],[0,"zwp_input_method_v1","wayland_protocols::unstable::input_method::v1::client","input method",null,null],[3,"ZwpInputMethodV1","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_v1","",null,null],[4,"Request","","",null,null],[4,"Event","","",null,null],[13,"Activate","","activate event",36,null],[12,"id","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_v1::Event","",36,null],[13,"Deactivate","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_v1","deactivate event",36,null],[12,"context","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_v1::Event","",36,null],[8,"RequestsTrait","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_v1","",null,null],[0,"zwp_input_panel_v1","wayland_protocols::unstable::input_method::v1::client","interface for implementing keyboards",null,null],[3,"ZwpInputPanelV1","wayland_protocols::unstable::input_method::v1::client::zwp_input_panel_v1","",null,null],[4,"Request","","",null,null],[13,"GetInputPanelSurface","","",37,null],[12,"id","wayland_protocols::unstable::input_method::v1::client::zwp_input_panel_v1::Request","",37,null],[12,"surface","","",37,null],[4,"Event","wayland_protocols::unstable::input_method::v1::client::zwp_input_panel_v1","",null,null],[8,"RequestsTrait","","",null,null],[10,"get_input_panel_surface","","",38,{"i":[{"n":"self"},{"n":"proxy"},{"n":"f"}],"o":{"g":["proxy"],"n":"result"}}],[0,"zwp_input_panel_surface_v1","wayland_protocols::unstable::input_method::v1::client","",null,null],[3,"ZwpInputPanelSurfaceV1","wayland_protocols::unstable::input_method::v1::client::zwp_input_panel_surface_v1","",null,null],[4,"Position","","",null,null],[13,"CenterBottom","","",39,null],[4,"Request","","",null,null],[13,"SetToplevel","","set the surface type as a keyboard",40,null],[12,"output","wayland_protocols::unstable::input_method::v1::client::zwp_input_panel_surface_v1::Request","",40,null],[12,"position","","",40,null],[13,"SetOverlayPanel","wayland_protocols::unstable::input_method::v1::client::zwp_input_panel_surface_v1","set the surface type as an overlay panel",40,null],[4,"Event","","",null,null],[8,"RequestsTrait","","",null,null],[10,"set_toplevel","","set the surface type as a keyboard",41,null],[10,"set_overlay_panel","","set the surface type as an overlay panel",41,null],[0,"server","wayland_protocols::unstable::input_method::v1","Server-side API of this protocol",null,null],[0,"zwp_input_method_context_v1","wayland_protocols::unstable::input_method::v1::server","input method context",null,null],[3,"ZwpInputMethodContextV1","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1","",null,null],[4,"Request","","",null,null],[13,"Destroy","","This is a destructor, once received this object cannot be used any longer.",42,null],[13,"CommitString","","commit string",42,null],[12,"serial","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1::Request","",42,null],[12,"text","","",42,null],[13,"PreeditString","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1","pre-edit string",42,null],[12,"serial","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1::Request","",42,null],[12,"text","","",42,null],[12,"commit","","",42,null],[13,"PreeditStyling","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1","pre-edit styling",42,null],[12,"index","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1::Request","",42,null],[12,"length","","",42,null],[12,"style","","",42,null],[13,"PreeditCursor","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1","pre-edit cursor",42,null],[12,"index","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1::Request","",42,null],[13,"DeleteSurroundingText","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1","delete text",42,null],[12,"index","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1::Request","",42,null],[12,"length","","",42,null],[13,"CursorPosition","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1","set cursor to a new position",42,null],[12,"index","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1::Request","",42,null],[12,"anchor","","",42,null],[13,"ModifiersMap","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1","",42,null],[12,"map","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1::Request","",42,null],[13,"Keysym","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1","keysym",42,null],[12,"serial","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1::Request","",42,null],[12,"time","","",42,null],[12,"sym","","",42,null],[12,"state","","",42,null],[12,"modifiers","","",42,null],[13,"GrabKeyboard","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1","grab hardware keyboard",42,null],[12,"keyboard","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1::Request","",42,null],[13,"Key","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1","forward key event",42,null],[12,"serial","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1::Request","",42,null],[12,"time","","",42,null],[12,"key","","",42,null],[12,"state","","",42,null],[13,"Modifiers","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1","forward modifiers event",42,null],[12,"serial","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1::Request","",42,null],[12,"mods_depressed","","",42,null],[12,"mods_latched","","",42,null],[12,"mods_locked","","",42,null],[12,"group","","",42,null],[13,"Language","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1","",42,null],[12,"serial","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1::Request","",42,null],[12,"language","","",42,null],[13,"TextDirection","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1","",42,null],[12,"serial","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1::Request","",42,null],[12,"direction","","",42,null],[4,"Event","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1","",null,null],[13,"SurroundingText","","surrounding text event",43,null],[12,"text","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1::Event","",43,null],[12,"cursor","","",43,null],[12,"anchor","","",43,null],[13,"Reset","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1","",43,null],[13,"ContentType","","",43,null],[12,"hint","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1::Event","",43,null],[12,"purpose","","",43,null],[13,"InvokeAction","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1","",43,null],[12,"button","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1::Event","",43,null],[12,"index","","",43,null],[13,"CommitState","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1","",43,null],[12,"serial","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1::Event","",43,null],[13,"PreferredLanguage","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1","",43,null],[12,"language","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1::Event","",43,null],[0,"zwp_input_method_v1","wayland_protocols::unstable::input_method::v1::server","input method",null,null],[3,"ZwpInputMethodV1","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_v1","",null,null],[4,"Request","","",null,null],[4,"Event","","",null,null],[13,"Activate","","activate event",44,null],[12,"id","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_v1::Event","",44,null],[13,"Deactivate","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_v1","deactivate event",44,null],[12,"context","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_v1::Event","",44,null],[0,"zwp_input_panel_v1","wayland_protocols::unstable::input_method::v1::server","interface for implementing keyboards",null,null],[3,"ZwpInputPanelV1","wayland_protocols::unstable::input_method::v1::server::zwp_input_panel_v1","",null,null],[4,"Request","","",null,null],[13,"GetInputPanelSurface","","",45,null],[12,"id","wayland_protocols::unstable::input_method::v1::server::zwp_input_panel_v1::Request","",45,null],[12,"surface","","",45,null],[4,"Event","wayland_protocols::unstable::input_method::v1::server::zwp_input_panel_v1","",null,null],[0,"zwp_input_panel_surface_v1","wayland_protocols::unstable::input_method::v1::server","",null,null],[3,"ZwpInputPanelSurfaceV1","wayland_protocols::unstable::input_method::v1::server::zwp_input_panel_surface_v1","",null,null],[4,"Position","","",null,null],[13,"CenterBottom","","",46,null],[4,"Request","","",null,null],[13,"SetToplevel","","set the surface type as a keyboard",47,null],[12,"output","wayland_protocols::unstable::input_method::v1::server::zwp_input_panel_surface_v1::Request","",47,null],[12,"position","","",47,null],[13,"SetOverlayPanel","wayland_protocols::unstable::input_method::v1::server::zwp_input_panel_surface_v1","set the surface type as an overlay panel",47,null],[4,"Event","","",null,null],[0,"c_interfaces","wayland_protocols::unstable::input_method::v1","C interfaces for this protocol",null,null],[7,"wl_surface_interface","wayland_protocols::unstable::input_method::v1::c_interfaces","",null,null],[7,"wl_output_interface","","",null,null],[7,"wl_keyboard_interface","","",null,null],[7,"zwp_input_method_context_v1_requests","","",null,null],[7,"zwp_input_method_context_v1_events","","",null,null],[7,"zwp_input_method_context_v1_interface","","",null,null],[7,"zwp_input_method_v1_events","","",null,null],[7,"zwp_input_method_v1_interface","","",null,null],[7,"zwp_input_panel_v1_requests","","",null,null],[7,"zwp_input_panel_v1_interface","","",null,null],[7,"zwp_input_panel_surface_v1_requests","","",null,null],[7,"zwp_input_panel_surface_v1_interface","","",null,null],[11,"is_destructor","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_context_v1","",33,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",33,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",33,null],[11,"into_raw","","",33,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",33,null],[11,"as_raw_c_in","","",33,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",34,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",34,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",34,null],[11,"into_raw","","",34,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",34,null],[11,"as_raw_c_in","","",34,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",48,null],[11,"is_destructor","wayland_protocols::unstable::input_method::v1::client::zwp_input_method_v1","",49,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",49,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",49,null],[11,"into_raw","","",49,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",49,null],[11,"as_raw_c_in","","",49,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",36,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",36,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",36,null],[11,"into_raw","","",36,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",36,null],[11,"as_raw_c_in","","",36,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",50,null],[11,"is_destructor","wayland_protocols::unstable::input_method::v1::client::zwp_input_panel_v1","",37,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",37,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",37,null],[11,"into_raw","","",37,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",37,null],[11,"as_raw_c_in","","",37,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",51,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",51,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",51,null],[11,"into_raw","","",51,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",51,null],[11,"as_raw_c_in","","",51,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",52,null],[11,"clone","wayland_protocols::unstable::input_method::v1::client::zwp_input_panel_surface_v1","",39,{"i":[{"n":"self"}],"o":{"n":"position"}}],[11,"fmt","","",39,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",39,{"i":[{"n":"self"},{"n":"position"}],"o":{"n":"bool"}}],[11,"from_raw","","",39,{"i":[{"n":"u32"}],"o":{"g":["position"],"n":"option"}}],[11,"to_raw","","",39,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"is_destructor","","",40,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",40,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",40,null],[11,"into_raw","","",40,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",40,null],[11,"as_raw_c_in","","",40,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",53,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",53,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",53,null],[11,"into_raw","","",53,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",53,null],[11,"as_raw_c_in","","",53,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",54,null],[11,"is_destructor","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_context_v1","",42,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",42,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",42,null],[11,"into_raw","","",42,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",42,null],[11,"as_raw_c_in","","",42,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",43,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",43,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",43,null],[11,"into_raw","","",43,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",43,null],[11,"as_raw_c_in","","",43,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",55,null],[11,"is_destructor","wayland_protocols::unstable::input_method::v1::server::zwp_input_method_v1","",56,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",56,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",56,null],[11,"into_raw","","",56,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",56,null],[11,"as_raw_c_in","","",56,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",44,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",44,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",44,null],[11,"into_raw","","",44,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",44,null],[11,"as_raw_c_in","","",44,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",57,null],[11,"is_destructor","wayland_protocols::unstable::input_method::v1::server::zwp_input_panel_v1","",45,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",45,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",45,null],[11,"into_raw","","",45,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",45,null],[11,"as_raw_c_in","","",45,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",58,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",58,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",58,null],[11,"into_raw","","",58,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",58,null],[11,"as_raw_c_in","","",58,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",59,null],[11,"clone","wayland_protocols::unstable::input_method::v1::server::zwp_input_panel_surface_v1","",46,{"i":[{"n":"self"}],"o":{"n":"position"}}],[11,"fmt","","",46,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",46,{"i":[{"n":"self"},{"n":"position"}],"o":{"n":"bool"}}],[11,"from_raw","","",46,{"i":[{"n":"u32"}],"o":{"g":["position"],"n":"option"}}],[11,"to_raw","","",46,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"is_destructor","","",47,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",47,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",47,null],[11,"into_raw","","",47,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",47,null],[11,"as_raw_c_in","","",47,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",60,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",60,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",60,null],[11,"into_raw","","",60,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",60,null],[11,"as_raw_c_in","","",60,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",61,null],[0,"keyboard_shortcuts_inhibit","wayland_protocols::unstable","Protocol for inhibiting the compositor keyboard shortcuts",null,null],[0,"v1","wayland_protocols::unstable::keyboard_shortcuts_inhibit","",null,null],[0,"client","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1","Client-side API of this protocol",null,null],[0,"zwp_keyboard_shortcuts_inhibit_manager_v1","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::client","context object for keyboard grab_manager",null,null],[3,"ZwpKeyboardShortcutsInhibitManagerV1","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::client::zwp_keyboard_shortcuts_inhibit_manager_v1","",null,null],[4,"Error","","",null,null],[13,"AlreadyInhibited","","the shortcuts are already inhibited for this surface",62,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the keyboard shortcuts inhibitor object",63,null],[13,"InhibitShortcuts","","create a new keyboard shortcuts inhibitor object",63,null],[12,"id","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::client::zwp_keyboard_shortcuts_inhibit_manager_v1::Request","",63,null],[12,"surface","","",63,null],[12,"seat","","",63,null],[4,"Event","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::client::zwp_keyboard_shortcuts_inhibit_manager_v1","",null,null],[8,"RequestsTrait","","",null,null],[10,"destroy","","destroy the keyboard shortcuts inhibitor object",64,null],[10,"inhibit_shortcuts","","create a new keyboard shortcuts inhibitor object",64,{"i":[{"n":"self"},{"n":"proxy"},{"n":"proxy"},{"n":"f"}],"o":{"g":["proxy"],"n":"result"}}],[0,"zwp_keyboard_shortcuts_inhibitor_v1","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::client","context object for keyboard shortcuts inhibitor",null,null],[3,"ZwpKeyboardShortcutsInhibitorV1","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::client::zwp_keyboard_shortcuts_inhibitor_v1","",null,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the keyboard shortcuts inhibitor object",65,null],[4,"Event","","",null,null],[13,"Active","","shortcuts are inhibited",66,null],[13,"Inactive","","shortcuts are restored",66,null],[8,"RequestsTrait","","",null,null],[10,"destroy","","destroy the keyboard shortcuts inhibitor object",67,null],[0,"server","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1","Server-side API of this protocol",null,null],[0,"zwp_keyboard_shortcuts_inhibit_manager_v1","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::server","context object for keyboard grab_manager",null,null],[3,"ZwpKeyboardShortcutsInhibitManagerV1","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::server::zwp_keyboard_shortcuts_inhibit_manager_v1","",null,null],[4,"Error","","",null,null],[13,"AlreadyInhibited","","the shortcuts are already inhibited for this surface",68,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the keyboard shortcuts inhibitor object",69,null],[13,"InhibitShortcuts","","create a new keyboard shortcuts inhibitor object",69,null],[12,"id","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::server::zwp_keyboard_shortcuts_inhibit_manager_v1::Request","",69,null],[12,"surface","","",69,null],[12,"seat","","",69,null],[4,"Event","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::server::zwp_keyboard_shortcuts_inhibit_manager_v1","",null,null],[0,"zwp_keyboard_shortcuts_inhibitor_v1","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::server","context object for keyboard shortcuts inhibitor",null,null],[3,"ZwpKeyboardShortcutsInhibitorV1","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::server::zwp_keyboard_shortcuts_inhibitor_v1","",null,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the keyboard shortcuts inhibitor object",70,null],[4,"Event","","",null,null],[13,"Active","","shortcuts are inhibited",71,null],[13,"Inactive","","shortcuts are restored",71,null],[0,"c_interfaces","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1","C interfaces for this protocol",null,null],[7,"wl_seat_interface","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::c_interfaces","",null,null],[7,"wl_surface_interface","","",null,null],[7,"zwp_keyboard_shortcuts_inhibit_manager_v1_requests","","",null,null],[7,"zwp_keyboard_shortcuts_inhibit_manager_v1_interface","","",null,null],[7,"zwp_keyboard_shortcuts_inhibitor_v1_requests","","",null,null],[7,"zwp_keyboard_shortcuts_inhibitor_v1_events","","",null,null],[7,"zwp_keyboard_shortcuts_inhibitor_v1_interface","","",null,null],[11,"clone","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::client::zwp_keyboard_shortcuts_inhibit_manager_v1","",62,{"i":[{"n":"self"}],"o":{"n":"error"}}],[11,"fmt","","",62,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",62,{"i":[{"n":"self"},{"n":"error"}],"o":{"n":"bool"}}],[11,"from_raw","","",62,{"i":[{"n":"u32"}],"o":{"g":["error"],"n":"option"}}],[11,"to_raw","","",62,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"is_destructor","","",63,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",63,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",63,null],[11,"into_raw","","",63,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",63,null],[11,"as_raw_c_in","","",63,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",72,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",72,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",72,null],[11,"into_raw","","",72,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",72,null],[11,"as_raw_c_in","","",72,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",73,null],[11,"is_destructor","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::client::zwp_keyboard_shortcuts_inhibitor_v1","",65,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",65,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",65,null],[11,"into_raw","","",65,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",65,null],[11,"as_raw_c_in","","",65,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",66,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",66,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",66,null],[11,"into_raw","","",66,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",66,null],[11,"as_raw_c_in","","",66,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",74,null],[11,"clone","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::server::zwp_keyboard_shortcuts_inhibit_manager_v1","",68,{"i":[{"n":"self"}],"o":{"n":"error"}}],[11,"fmt","","",68,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",68,{"i":[{"n":"self"},{"n":"error"}],"o":{"n":"bool"}}],[11,"from_raw","","",68,{"i":[{"n":"u32"}],"o":{"g":["error"],"n":"option"}}],[11,"to_raw","","",68,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"is_destructor","","",69,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",69,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",69,null],[11,"into_raw","","",69,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",69,null],[11,"as_raw_c_in","","",69,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",75,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",75,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",75,null],[11,"into_raw","","",75,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",75,null],[11,"as_raw_c_in","","",75,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",76,null],[11,"is_destructor","wayland_protocols::unstable::keyboard_shortcuts_inhibit::v1::server::zwp_keyboard_shortcuts_inhibitor_v1","",70,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",70,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",70,null],[11,"into_raw","","",70,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",70,null],[11,"as_raw_c_in","","",70,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",71,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",71,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",71,null],[11,"into_raw","","",71,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",71,null],[11,"as_raw_c_in","","",71,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",77,null],[0,"linux_dmabuf","wayland_protocols::unstable","Linux DMA-BUF protocol",null,null],[0,"v1","wayland_protocols::unstable::linux_dmabuf","",null,null],[0,"client","wayland_protocols::unstable::linux_dmabuf::v1","Client-side API of this protocol",null,null],[0,"zwp_linux_dmabuf_v1","wayland_protocols::unstable::linux_dmabuf::v1::client","factory for creating dmabuf-based wl_buffers",null,null],[3,"ZwpLinuxDmabufV1","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_dmabuf_v1","",null,null],[4,"Request","","",null,null],[13,"Destroy","","unbind the factory",78,null],[13,"CreateParams","","create a temporary object for buffer parameters",78,null],[12,"params_id","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_dmabuf_v1::Request","",78,null],[4,"Event","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_dmabuf_v1","",null,null],[13,"Format","","supported buffer format",79,null],[12,"format","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_dmabuf_v1::Event","",79,null],[13,"Modifier","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_dmabuf_v1","supported buffer format modifier",79,null],[12,"format","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_dmabuf_v1::Event","",79,null],[12,"modifier_hi","","",79,null],[12,"modifier_lo","","",79,null],[8,"RequestsTrait","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_dmabuf_v1","",null,null],[10,"destroy","","unbind the factory",80,null],[10,"create_params","","create a temporary object for buffer parameters",80,{"i":[{"n":"self"},{"n":"f"}],"o":{"g":["proxy"],"n":"result"}}],[0,"zwp_linux_buffer_params_v1","wayland_protocols::unstable::linux_dmabuf::v1::client","parameters for creating a dmabuf-based wl_buffer",null,null],[3,"ZwpLinuxBufferParamsV1","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_buffer_params_v1","",null,null],[4,"Error","","",null,null],[13,"AlreadyUsed","","the dmabuf_batch object has already been used to create a wl_buffer",81,null],[13,"PlaneIdx","","plane index out of bounds",81,null],[13,"PlaneSet","","the plane index was already set",81,null],[13,"Incomplete","","missing or too many planes to create a buffer",81,null],[13,"InvalidFormat","","format not supported",81,null],[13,"InvalidDimensions","","invalid width or height",81,null],[13,"OutOfBounds","","offset + stride * height goes out of dmabuf bounds",81,null],[13,"InvalidWlBuffer","","invalid wl_buffer resulted from importing dmabufs via the create_immed request on given buffer_params",81,null],[4,"Flags","","",null,null],[13,"YInvert","","contents are y-inverted",82,null],[13,"Interlaced","","content is interlaced",82,null],[13,"BottomFirst","","bottom field first",82,null],[4,"Request","","",null,null],[13,"Destroy","","delete this object, used or not",83,null],[13,"Add","","add a dmabuf to the temporary set",83,null],[12,"fd","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_buffer_params_v1::Request","",83,null],[12,"plane_idx","","",83,null],[12,"offset","","",83,null],[12,"stride","","",83,null],[12,"modifier_hi","","",83,null],[12,"modifier_lo","","",83,null],[13,"Create","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_buffer_params_v1","create a wl_buffer from the given dmabufs",83,null],[12,"width","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_buffer_params_v1::Request","",83,null],[12,"height","","",83,null],[12,"format","","",83,null],[12,"flags","","",83,null],[13,"CreateImmed","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_buffer_params_v1","immediately create a wl_buffer from the given dmabufs",83,null],[12,"buffer_id","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_buffer_params_v1::Request","",83,null],[12,"width","","",83,null],[12,"height","","",83,null],[12,"format","","",83,null],[12,"flags","","",83,null],[4,"Event","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_buffer_params_v1","",null,null],[13,"Created","","buffer creation succeeded",84,null],[12,"buffer","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_buffer_params_v1::Event","",84,null],[13,"Failed","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_buffer_params_v1","buffer creation failed",84,null],[8,"RequestsTrait","","",null,null],[10,"destroy","","delete this object, used or not",85,null],[10,"add","","add a dmabuf to the temporary set",85,null],[10,"create","","create a wl_buffer from the given dmabufs",85,null],[10,"create_immed","","immediately create a wl_buffer from the given dmabufs",85,{"i":[{"n":"self"},{"n":"i32"},{"n":"i32"},{"n":"u32"},{"n":"u32"},{"n":"f"}],"o":{"g":["proxy"],"n":"result"}}],[0,"server","wayland_protocols::unstable::linux_dmabuf::v1","Server-side API of this protocol",null,null],[0,"zwp_linux_dmabuf_v1","wayland_protocols::unstable::linux_dmabuf::v1::server","factory for creating dmabuf-based wl_buffers",null,null],[3,"ZwpLinuxDmabufV1","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_dmabuf_v1","",null,null],[4,"Request","","",null,null],[13,"Destroy","","unbind the factory",86,null],[13,"CreateParams","","create a temporary object for buffer parameters",86,null],[12,"params_id","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_dmabuf_v1::Request","",86,null],[4,"Event","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_dmabuf_v1","",null,null],[13,"Format","","supported buffer format",87,null],[12,"format","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_dmabuf_v1::Event","",87,null],[13,"Modifier","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_dmabuf_v1","supported buffer format modifier",87,null],[12,"format","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_dmabuf_v1::Event","",87,null],[12,"modifier_hi","","",87,null],[12,"modifier_lo","","",87,null],[0,"zwp_linux_buffer_params_v1","wayland_protocols::unstable::linux_dmabuf::v1::server","parameters for creating a dmabuf-based wl_buffer",null,null],[3,"ZwpLinuxBufferParamsV1","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_buffer_params_v1","",null,null],[4,"Error","","",null,null],[13,"AlreadyUsed","","the dmabuf_batch object has already been used to create a wl_buffer",88,null],[13,"PlaneIdx","","plane index out of bounds",88,null],[13,"PlaneSet","","the plane index was already set",88,null],[13,"Incomplete","","missing or too many planes to create a buffer",88,null],[13,"InvalidFormat","","format not supported",88,null],[13,"InvalidDimensions","","invalid width or height",88,null],[13,"OutOfBounds","","offset + stride * height goes out of dmabuf bounds",88,null],[13,"InvalidWlBuffer","","invalid wl_buffer resulted from importing dmabufs via the create_immed request on given buffer_params",88,null],[4,"Flags","","",null,null],[13,"YInvert","","contents are y-inverted",89,null],[13,"Interlaced","","content is interlaced",89,null],[13,"BottomFirst","","bottom field first",89,null],[4,"Request","","",null,null],[13,"Destroy","","delete this object, used or not",90,null],[13,"Add","","add a dmabuf to the temporary set",90,null],[12,"fd","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_buffer_params_v1::Request","",90,null],[12,"plane_idx","","",90,null],[12,"offset","","",90,null],[12,"stride","","",90,null],[12,"modifier_hi","","",90,null],[12,"modifier_lo","","",90,null],[13,"Create","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_buffer_params_v1","create a wl_buffer from the given dmabufs",90,null],[12,"width","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_buffer_params_v1::Request","",90,null],[12,"height","","",90,null],[12,"format","","",90,null],[12,"flags","","",90,null],[13,"CreateImmed","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_buffer_params_v1","immediately create a wl_buffer from the given dmabufs",90,null],[12,"buffer_id","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_buffer_params_v1::Request","",90,null],[12,"width","","",90,null],[12,"height","","",90,null],[12,"format","","",90,null],[12,"flags","","",90,null],[4,"Event","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_buffer_params_v1","",null,null],[13,"Created","","buffer creation succeeded",91,null],[12,"buffer","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_buffer_params_v1::Event","",91,null],[13,"Failed","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_buffer_params_v1","buffer creation failed",91,null],[0,"c_interfaces","wayland_protocols::unstable::linux_dmabuf::v1","C interfaces for this protocol",null,null],[7,"wl_buffer_interface","wayland_protocols::unstable::linux_dmabuf::v1::c_interfaces","",null,null],[7,"zwp_linux_dmabuf_v1_requests","","",null,null],[7,"zwp_linux_dmabuf_v1_events","","",null,null],[7,"zwp_linux_dmabuf_v1_interface","","",null,null],[7,"zwp_linux_buffer_params_v1_requests","","",null,null],[7,"zwp_linux_buffer_params_v1_events","","",null,null],[7,"zwp_linux_buffer_params_v1_interface","","",null,null],[11,"is_destructor","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_dmabuf_v1","",78,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",78,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",78,null],[11,"into_raw","","",78,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",78,null],[11,"as_raw_c_in","","",78,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",79,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",79,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",79,null],[11,"into_raw","","",79,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",79,null],[11,"as_raw_c_in","","",79,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",92,null],[11,"clone","wayland_protocols::unstable::linux_dmabuf::v1::client::zwp_linux_buffer_params_v1","",81,{"i":[{"n":"self"}],"o":{"n":"error"}}],[11,"fmt","","",81,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",81,{"i":[{"n":"self"},{"n":"error"}],"o":{"n":"bool"}}],[11,"from_raw","","",81,{"i":[{"n":"u32"}],"o":{"g":["error"],"n":"option"}}],[11,"to_raw","","",81,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"clone","","",82,{"i":[{"n":"self"}],"o":{"n":"flags"}}],[11,"fmt","","",82,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",82,{"i":[{"n":"self"},{"n":"flags"}],"o":{"n":"bool"}}],[11,"from_raw","","",82,{"i":[{"n":"u32"}],"o":{"g":["flags"],"n":"option"}}],[11,"to_raw","","",82,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"is_destructor","","",83,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",83,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",83,null],[11,"into_raw","","",83,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",83,null],[11,"as_raw_c_in","","",83,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",84,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",84,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",84,null],[11,"into_raw","","",84,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",84,null],[11,"as_raw_c_in","","",84,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",93,null],[11,"is_destructor","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_dmabuf_v1","",86,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",86,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",86,null],[11,"into_raw","","",86,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",86,null],[11,"as_raw_c_in","","",86,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",87,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",87,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",87,null],[11,"into_raw","","",87,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",87,null],[11,"as_raw_c_in","","",87,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",94,null],[11,"clone","wayland_protocols::unstable::linux_dmabuf::v1::server::zwp_linux_buffer_params_v1","",88,{"i":[{"n":"self"}],"o":{"n":"error"}}],[11,"fmt","","",88,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",88,{"i":[{"n":"self"},{"n":"error"}],"o":{"n":"bool"}}],[11,"from_raw","","",88,{"i":[{"n":"u32"}],"o":{"g":["error"],"n":"option"}}],[11,"to_raw","","",88,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"clone","","",89,{"i":[{"n":"self"}],"o":{"n":"flags"}}],[11,"fmt","","",89,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",89,{"i":[{"n":"self"},{"n":"flags"}],"o":{"n":"bool"}}],[11,"from_raw","","",89,{"i":[{"n":"u32"}],"o":{"g":["flags"],"n":"option"}}],[11,"to_raw","","",89,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"is_destructor","","",90,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",90,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",90,null],[11,"into_raw","","",90,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",90,null],[11,"as_raw_c_in","","",90,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",91,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",91,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",91,null],[11,"into_raw","","",91,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",91,null],[11,"as_raw_c_in","","",91,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",95,null],[0,"pointer_constraints","wayland_protocols::unstable","protocol for constraining pointer motions",null,null],[0,"v1","wayland_protocols::unstable::pointer_constraints","",null,null],[0,"client","wayland_protocols::unstable::pointer_constraints::v1","Client-side API of this protocol",null,null],[0,"zwp_pointer_constraints_v1","wayland_protocols::unstable::pointer_constraints::v1::client","constrain the movement of a pointer",null,null],[3,"ZwpPointerConstraintsV1","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_pointer_constraints_v1","",null,null],[4,"Error","","wp_pointer_constraints error values",null,null],[13,"AlreadyConstrained","","pointer constraint already requested on that surface",96,null],[4,"Lifetime","","constraint lifetime",null,null],[13,"Oneshot","","the pointer constraint is defunct once deactivated",97,null],[13,"Persistent","","the pointer constraint may reactivate",97,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the pointer constraints manager object",98,null],[13,"LockPointer","","lock pointer to a position",98,null],[12,"id","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_pointer_constraints_v1::Request","",98,null],[12,"surface","","",98,null],[12,"pointer","","",98,null],[12,"region","","",98,null],[12,"lifetime","","",98,null],[13,"ConfinePointer","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_pointer_constraints_v1","confine pointer to a region",98,null],[12,"id","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_pointer_constraints_v1::Request","",98,null],[12,"surface","","",98,null],[12,"pointer","","",98,null],[12,"region","","",98,null],[12,"lifetime","","",98,null],[4,"Event","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_pointer_constraints_v1","",null,null],[8,"RequestsTrait","","",null,null],[10,"destroy","","destroy the pointer constraints manager object",99,null],[10,"lock_pointer","","lock pointer to a position",99,{"i":[{"n":"self"},{"n":"proxy"},{"n":"proxy"},{"g":["proxy"],"n":"option"},{"n":"u32"},{"n":"f"}],"o":{"g":["proxy"],"n":"result"}}],[10,"confine_pointer","","confine pointer to a region",99,{"i":[{"n":"self"},{"n":"proxy"},{"n":"proxy"},{"g":["proxy"],"n":"option"},{"n":"u32"},{"n":"f"}],"o":{"g":["proxy"],"n":"result"}}],[0,"zwp_locked_pointer_v1","wayland_protocols::unstable::pointer_constraints::v1::client","receive relative pointer motion events",null,null],[3,"ZwpLockedPointerV1","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_locked_pointer_v1","",null,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the locked pointer object",100,null],[13,"SetCursorPositionHint","","set the pointer cursor position hint",100,null],[12,"surface_x","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_locked_pointer_v1::Request","",100,null],[12,"surface_y","","",100,null],[13,"SetRegion","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_locked_pointer_v1","set a new lock region",100,null],[12,"region","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_locked_pointer_v1::Request","",100,null],[4,"Event","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_locked_pointer_v1","",null,null],[13,"Locked","","lock activation event",101,null],[13,"Unlocked","","lock deactivation event",101,null],[8,"RequestsTrait","","",null,null],[10,"destroy","","destroy the locked pointer object",102,null],[10,"set_cursor_position_hint","","set the pointer cursor position hint",102,null],[10,"set_region","","set a new lock region",102,null],[0,"zwp_confined_pointer_v1","wayland_protocols::unstable::pointer_constraints::v1::client","confined pointer object",null,null],[3,"ZwpConfinedPointerV1","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_confined_pointer_v1","",null,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the confined pointer object",103,null],[13,"SetRegion","","set a new confine region",103,null],[12,"region","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_confined_pointer_v1::Request","",103,null],[4,"Event","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_confined_pointer_v1","",null,null],[13,"Confined","","pointer confined",104,null],[13,"Unconfined","","pointer unconfined",104,null],[8,"RequestsTrait","","",null,null],[10,"destroy","","destroy the confined pointer object",105,null],[10,"set_region","","set a new confine region",105,null],[0,"server","wayland_protocols::unstable::pointer_constraints::v1","Server-side API of this protocol",null,null],[0,"zwp_pointer_constraints_v1","wayland_protocols::unstable::pointer_constraints::v1::server","constrain the movement of a pointer",null,null],[3,"ZwpPointerConstraintsV1","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_pointer_constraints_v1","",null,null],[4,"Error","","wp_pointer_constraints error values",null,null],[13,"AlreadyConstrained","","pointer constraint already requested on that surface",106,null],[4,"Lifetime","","constraint lifetime",null,null],[13,"Oneshot","","the pointer constraint is defunct once deactivated",107,null],[13,"Persistent","","the pointer constraint may reactivate",107,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the pointer constraints manager object",108,null],[13,"LockPointer","","lock pointer to a position",108,null],[12,"id","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_pointer_constraints_v1::Request","",108,null],[12,"surface","","",108,null],[12,"pointer","","",108,null],[12,"region","","",108,null],[12,"lifetime","","",108,null],[13,"ConfinePointer","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_pointer_constraints_v1","confine pointer to a region",108,null],[12,"id","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_pointer_constraints_v1::Request","",108,null],[12,"surface","","",108,null],[12,"pointer","","",108,null],[12,"region","","",108,null],[12,"lifetime","","",108,null],[4,"Event","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_pointer_constraints_v1","",null,null],[0,"zwp_locked_pointer_v1","wayland_protocols::unstable::pointer_constraints::v1::server","receive relative pointer motion events",null,null],[3,"ZwpLockedPointerV1","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_locked_pointer_v1","",null,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the locked pointer object",109,null],[13,"SetCursorPositionHint","","set the pointer cursor position hint",109,null],[12,"surface_x","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_locked_pointer_v1::Request","",109,null],[12,"surface_y","","",109,null],[13,"SetRegion","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_locked_pointer_v1","set a new lock region",109,null],[12,"region","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_locked_pointer_v1::Request","",109,null],[4,"Event","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_locked_pointer_v1","",null,null],[13,"Locked","","lock activation event",110,null],[13,"Unlocked","","lock deactivation event",110,null],[0,"zwp_confined_pointer_v1","wayland_protocols::unstable::pointer_constraints::v1::server","confined pointer object",null,null],[3,"ZwpConfinedPointerV1","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_confined_pointer_v1","",null,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the confined pointer object",111,null],[13,"SetRegion","","set a new confine region",111,null],[12,"region","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_confined_pointer_v1::Request","",111,null],[4,"Event","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_confined_pointer_v1","",null,null],[13,"Confined","","pointer confined",112,null],[13,"Unconfined","","pointer unconfined",112,null],[0,"c_interfaces","wayland_protocols::unstable::pointer_constraints::v1","C interfaces for this protocol",null,null],[7,"wl_surface_interface","wayland_protocols::unstable::pointer_constraints::v1::c_interfaces","",null,null],[7,"wl_pointer_interface","","",null,null],[7,"wl_region_interface","","",null,null],[7,"zwp_pointer_constraints_v1_requests","","",null,null],[7,"zwp_pointer_constraints_v1_interface","","",null,null],[7,"zwp_locked_pointer_v1_requests","","",null,null],[7,"zwp_locked_pointer_v1_events","","",null,null],[7,"zwp_locked_pointer_v1_interface","","",null,null],[7,"zwp_confined_pointer_v1_requests","","",null,null],[7,"zwp_confined_pointer_v1_events","","",null,null],[7,"zwp_confined_pointer_v1_interface","","",null,null],[11,"clone","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_pointer_constraints_v1","",96,{"i":[{"n":"self"}],"o":{"n":"error"}}],[11,"fmt","","",96,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",96,{"i":[{"n":"self"},{"n":"error"}],"o":{"n":"bool"}}],[11,"from_raw","","",96,{"i":[{"n":"u32"}],"o":{"g":["error"],"n":"option"}}],[11,"to_raw","","",96,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"clone","","",97,{"i":[{"n":"self"}],"o":{"n":"lifetime"}}],[11,"fmt","","",97,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",97,{"i":[{"n":"self"},{"n":"lifetime"}],"o":{"n":"bool"}}],[11,"from_raw","","",97,{"i":[{"n":"u32"}],"o":{"g":["lifetime"],"n":"option"}}],[11,"to_raw","","",97,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"is_destructor","","",98,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",98,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",98,null],[11,"into_raw","","",98,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",98,null],[11,"as_raw_c_in","","",98,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",113,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",113,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",113,null],[11,"into_raw","","",113,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",113,null],[11,"as_raw_c_in","","",113,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",114,null],[11,"is_destructor","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_locked_pointer_v1","",100,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",100,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",100,null],[11,"into_raw","","",100,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",100,null],[11,"as_raw_c_in","","",100,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",101,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",101,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",101,null],[11,"into_raw","","",101,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",101,null],[11,"as_raw_c_in","","",101,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",115,null],[11,"is_destructor","wayland_protocols::unstable::pointer_constraints::v1::client::zwp_confined_pointer_v1","",103,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",103,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",103,null],[11,"into_raw","","",103,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",103,null],[11,"as_raw_c_in","","",103,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",104,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",104,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",104,null],[11,"into_raw","","",104,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",104,null],[11,"as_raw_c_in","","",104,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",116,null],[11,"clone","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_pointer_constraints_v1","",106,{"i":[{"n":"self"}],"o":{"n":"error"}}],[11,"fmt","","",106,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",106,{"i":[{"n":"self"},{"n":"error"}],"o":{"n":"bool"}}],[11,"from_raw","","",106,{"i":[{"n":"u32"}],"o":{"g":["error"],"n":"option"}}],[11,"to_raw","","",106,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"clone","","",107,{"i":[{"n":"self"}],"o":{"n":"lifetime"}}],[11,"fmt","","",107,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",107,{"i":[{"n":"self"},{"n":"lifetime"}],"o":{"n":"bool"}}],[11,"from_raw","","",107,{"i":[{"n":"u32"}],"o":{"g":["lifetime"],"n":"option"}}],[11,"to_raw","","",107,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"is_destructor","","",108,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",108,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",108,null],[11,"into_raw","","",108,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",108,null],[11,"as_raw_c_in","","",108,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",117,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",117,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",117,null],[11,"into_raw","","",117,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",117,null],[11,"as_raw_c_in","","",117,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",118,null],[11,"is_destructor","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_locked_pointer_v1","",109,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",109,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",109,null],[11,"into_raw","","",109,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",109,null],[11,"as_raw_c_in","","",109,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",110,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",110,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",110,null],[11,"into_raw","","",110,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",110,null],[11,"as_raw_c_in","","",110,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",119,null],[11,"is_destructor","wayland_protocols::unstable::pointer_constraints::v1::server::zwp_confined_pointer_v1","",111,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",111,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",111,null],[11,"into_raw","","",111,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",111,null],[11,"as_raw_c_in","","",111,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",112,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",112,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",112,null],[11,"into_raw","","",112,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",112,null],[11,"as_raw_c_in","","",112,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",120,null],[0,"pointer_gestures","wayland_protocols::unstable","Pointer gestures protocol",null,null],[0,"v1","wayland_protocols::unstable::pointer_gestures","",null,null],[0,"client","wayland_protocols::unstable::pointer_gestures::v1","Client-side API of this protocol",null,null],[0,"zwp_pointer_gestures_v1","wayland_protocols::unstable::pointer_gestures::v1::client","touchpad gestures",null,null],[3,"ZwpPointerGesturesV1","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gestures_v1","",null,null],[4,"Request","","",null,null],[13,"GetSwipeGesture","","get swipe gesture",121,null],[12,"id","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gestures_v1::Request","",121,null],[12,"pointer","","",121,null],[13,"GetPinchGesture","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gestures_v1","get pinch gesture",121,null],[12,"id","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gestures_v1::Request","",121,null],[12,"pointer","","",121,null],[4,"Event","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gestures_v1","",null,null],[8,"RequestsTrait","","",null,null],[10,"get_swipe_gesture","","get swipe gesture",122,{"i":[{"n":"self"},{"n":"proxy"},{"n":"f"}],"o":{"g":["proxy"],"n":"result"}}],[10,"get_pinch_gesture","","get pinch gesture",122,{"i":[{"n":"self"},{"n":"proxy"},{"n":"f"}],"o":{"g":["proxy"],"n":"result"}}],[0,"zwp_pointer_gesture_swipe_v1","wayland_protocols::unstable::pointer_gestures::v1::client","a swipe gesture object",null,null],[3,"ZwpPointerGestureSwipeV1","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_swipe_v1","",null,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the pointer swipe gesture object",123,null],[4,"Event","","",null,null],[13,"Begin","","multi-finger swipe begin",124,null],[12,"serial","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_swipe_v1::Event","",124,null],[12,"time","","",124,null],[12,"surface","","",124,null],[12,"fingers","","",124,null],[13,"Update","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_swipe_v1","multi-finger swipe motion",124,null],[12,"time","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_swipe_v1::Event","",124,null],[12,"dx","","",124,null],[12,"dy","","",124,null],[13,"End","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_swipe_v1","multi-finger swipe end",124,null],[12,"serial","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_swipe_v1::Event","",124,null],[12,"time","","",124,null],[12,"cancelled","","",124,null],[8,"RequestsTrait","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_swipe_v1","",null,null],[10,"destroy","","destroy the pointer swipe gesture object",125,null],[0,"zwp_pointer_gesture_pinch_v1","wayland_protocols::unstable::pointer_gestures::v1::client","a pinch gesture object",null,null],[3,"ZwpPointerGesturePinchV1","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_pinch_v1","",null,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the pinch gesture object",126,null],[4,"Event","","",null,null],[13,"Begin","","multi-finger pinch begin",127,null],[12,"serial","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_pinch_v1::Event","",127,null],[12,"time","","",127,null],[12,"surface","","",127,null],[12,"fingers","","",127,null],[13,"Update","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_pinch_v1","multi-finger pinch motion",127,null],[12,"time","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_pinch_v1::Event","",127,null],[12,"dx","","",127,null],[12,"dy","","",127,null],[12,"scale","","",127,null],[12,"rotation","","",127,null],[13,"End","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_pinch_v1","multi-finger pinch end",127,null],[12,"serial","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_pinch_v1::Event","",127,null],[12,"time","","",127,null],[12,"cancelled","","",127,null],[8,"RequestsTrait","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_pinch_v1","",null,null],[10,"destroy","","destroy the pinch gesture object",128,null],[0,"server","wayland_protocols::unstable::pointer_gestures::v1","Server-side API of this protocol",null,null],[0,"zwp_pointer_gestures_v1","wayland_protocols::unstable::pointer_gestures::v1::server","touchpad gestures",null,null],[3,"ZwpPointerGesturesV1","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gestures_v1","",null,null],[4,"Request","","",null,null],[13,"GetSwipeGesture","","get swipe gesture",129,null],[12,"id","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gestures_v1::Request","",129,null],[12,"pointer","","",129,null],[13,"GetPinchGesture","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gestures_v1","get pinch gesture",129,null],[12,"id","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gestures_v1::Request","",129,null],[12,"pointer","","",129,null],[4,"Event","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gestures_v1","",null,null],[0,"zwp_pointer_gesture_swipe_v1","wayland_protocols::unstable::pointer_gestures::v1::server","a swipe gesture object",null,null],[3,"ZwpPointerGestureSwipeV1","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gesture_swipe_v1","",null,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the pointer swipe gesture object",130,null],[4,"Event","","",null,null],[13,"Begin","","multi-finger swipe begin",131,null],[12,"serial","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gesture_swipe_v1::Event","",131,null],[12,"time","","",131,null],[12,"surface","","",131,null],[12,"fingers","","",131,null],[13,"Update","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gesture_swipe_v1","multi-finger swipe motion",131,null],[12,"time","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gesture_swipe_v1::Event","",131,null],[12,"dx","","",131,null],[12,"dy","","",131,null],[13,"End","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gesture_swipe_v1","multi-finger swipe end",131,null],[12,"serial","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gesture_swipe_v1::Event","",131,null],[12,"time","","",131,null],[12,"cancelled","","",131,null],[0,"zwp_pointer_gesture_pinch_v1","wayland_protocols::unstable::pointer_gestures::v1::server","a pinch gesture object",null,null],[3,"ZwpPointerGesturePinchV1","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gesture_pinch_v1","",null,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the pinch gesture object",132,null],[4,"Event","","",null,null],[13,"Begin","","multi-finger pinch begin",133,null],[12,"serial","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gesture_pinch_v1::Event","",133,null],[12,"time","","",133,null],[12,"surface","","",133,null],[12,"fingers","","",133,null],[13,"Update","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gesture_pinch_v1","multi-finger pinch motion",133,null],[12,"time","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gesture_pinch_v1::Event","",133,null],[12,"dx","","",133,null],[12,"dy","","",133,null],[12,"scale","","",133,null],[12,"rotation","","",133,null],[13,"End","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gesture_pinch_v1","multi-finger pinch end",133,null],[12,"serial","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gesture_pinch_v1::Event","",133,null],[12,"time","","",133,null],[12,"cancelled","","",133,null],[0,"c_interfaces","wayland_protocols::unstable::pointer_gestures::v1","C interfaces for this protocol",null,null],[7,"wl_surface_interface","wayland_protocols::unstable::pointer_gestures::v1::c_interfaces","",null,null],[7,"wl_pointer_interface","","",null,null],[7,"zwp_pointer_gestures_v1_requests","","",null,null],[7,"zwp_pointer_gestures_v1_interface","","",null,null],[7,"zwp_pointer_gesture_swipe_v1_requests","","",null,null],[7,"zwp_pointer_gesture_swipe_v1_events","","",null,null],[7,"zwp_pointer_gesture_swipe_v1_interface","","",null,null],[7,"zwp_pointer_gesture_pinch_v1_requests","","",null,null],[7,"zwp_pointer_gesture_pinch_v1_events","","",null,null],[7,"zwp_pointer_gesture_pinch_v1_interface","","",null,null],[11,"is_destructor","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gestures_v1","",121,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",121,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",121,null],[11,"into_raw","","",121,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",121,null],[11,"as_raw_c_in","","",121,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",134,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",134,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",134,null],[11,"into_raw","","",134,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",134,null],[11,"as_raw_c_in","","",134,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",135,null],[11,"is_destructor","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_swipe_v1","",123,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",123,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",123,null],[11,"into_raw","","",123,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",123,null],[11,"as_raw_c_in","","",123,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",124,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",124,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",124,null],[11,"into_raw","","",124,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",124,null],[11,"as_raw_c_in","","",124,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",136,null],[11,"is_destructor","wayland_protocols::unstable::pointer_gestures::v1::client::zwp_pointer_gesture_pinch_v1","",126,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",126,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",126,null],[11,"into_raw","","",126,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",126,null],[11,"as_raw_c_in","","",126,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",127,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",127,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",127,null],[11,"into_raw","","",127,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",127,null],[11,"as_raw_c_in","","",127,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",137,null],[11,"is_destructor","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gestures_v1","",129,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",129,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",129,null],[11,"into_raw","","",129,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",129,null],[11,"as_raw_c_in","","",129,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",138,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",138,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",138,null],[11,"into_raw","","",138,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",138,null],[11,"as_raw_c_in","","",138,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",139,null],[11,"is_destructor","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gesture_swipe_v1","",130,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",130,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",130,null],[11,"into_raw","","",130,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",130,null],[11,"as_raw_c_in","","",130,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",131,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",131,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",131,null],[11,"into_raw","","",131,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",131,null],[11,"as_raw_c_in","","",131,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",140,null],[11,"is_destructor","wayland_protocols::unstable::pointer_gestures::v1::server::zwp_pointer_gesture_pinch_v1","",132,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",132,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",132,null],[11,"into_raw","","",132,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",132,null],[11,"as_raw_c_in","","",132,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",133,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",133,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",133,null],[11,"into_raw","","",133,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",133,null],[11,"as_raw_c_in","","",133,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",141,null],[0,"relative_pointer","wayland_protocols::unstable","protocol for relative pointer motion events",null,null],[0,"v1","wayland_protocols::unstable::relative_pointer","",null,null],[0,"client","wayland_protocols::unstable::relative_pointer::v1","Client-side API of this protocol",null,null],[0,"zwp_relative_pointer_manager_v1","wayland_protocols::unstable::relative_pointer::v1::client","get relative pointer objects",null,null],[3,"ZwpRelativePointerManagerV1","wayland_protocols::unstable::relative_pointer::v1::client::zwp_relative_pointer_manager_v1","",null,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the relative pointer manager object",142,null],[13,"GetRelativePointer","","get a relative pointer object",142,null],[12,"id","wayland_protocols::unstable::relative_pointer::v1::client::zwp_relative_pointer_manager_v1::Request","",142,null],[12,"pointer","","",142,null],[4,"Event","wayland_protocols::unstable::relative_pointer::v1::client::zwp_relative_pointer_manager_v1","",null,null],[8,"RequestsTrait","","",null,null],[10,"destroy","","destroy the relative pointer manager object",143,null],[10,"get_relative_pointer","","get a relative pointer object",143,{"i":[{"n":"self"},{"n":"proxy"},{"n":"f"}],"o":{"g":["proxy"],"n":"result"}}],[0,"zwp_relative_pointer_v1","wayland_protocols::unstable::relative_pointer::v1::client","relative pointer object",null,null],[3,"ZwpRelativePointerV1","wayland_protocols::unstable::relative_pointer::v1::client::zwp_relative_pointer_v1","",null,null],[4,"Request","","",null,null],[13,"Destroy","","release the relative pointer object",144,null],[4,"Event","","",null,null],[13,"RelativeMotion","","relative pointer motion",145,null],[12,"utime_hi","wayland_protocols::unstable::relative_pointer::v1::client::zwp_relative_pointer_v1::Event","",145,null],[12,"utime_lo","","",145,null],[12,"dx","","",145,null],[12,"dy","","",145,null],[12,"dx_unaccel","","",145,null],[12,"dy_unaccel","","",145,null],[8,"RequestsTrait","wayland_protocols::unstable::relative_pointer::v1::client::zwp_relative_pointer_v1","",null,null],[10,"destroy","","release the relative pointer object",146,null],[0,"server","wayland_protocols::unstable::relative_pointer::v1","Server-side API of this protocol",null,null],[0,"zwp_relative_pointer_manager_v1","wayland_protocols::unstable::relative_pointer::v1::server","get relative pointer objects",null,null],[3,"ZwpRelativePointerManagerV1","wayland_protocols::unstable::relative_pointer::v1::server::zwp_relative_pointer_manager_v1","",null,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the relative pointer manager object",147,null],[13,"GetRelativePointer","","get a relative pointer object",147,null],[12,"id","wayland_protocols::unstable::relative_pointer::v1::server::zwp_relative_pointer_manager_v1::Request","",147,null],[12,"pointer","","",147,null],[4,"Event","wayland_protocols::unstable::relative_pointer::v1::server::zwp_relative_pointer_manager_v1","",null,null],[0,"zwp_relative_pointer_v1","wayland_protocols::unstable::relative_pointer::v1::server","relative pointer object",null,null],[3,"ZwpRelativePointerV1","wayland_protocols::unstable::relative_pointer::v1::server::zwp_relative_pointer_v1","",null,null],[4,"Request","","",null,null],[13,"Destroy","","release the relative pointer object",148,null],[4,"Event","","",null,null],[13,"RelativeMotion","","relative pointer motion",149,null],[12,"utime_hi","wayland_protocols::unstable::relative_pointer::v1::server::zwp_relative_pointer_v1::Event","",149,null],[12,"utime_lo","","",149,null],[12,"dx","","",149,null],[12,"dy","","",149,null],[12,"dx_unaccel","","",149,null],[12,"dy_unaccel","","",149,null],[0,"c_interfaces","wayland_protocols::unstable::relative_pointer::v1","C interfaces for this protocol",null,null],[7,"wl_pointer_interface","wayland_protocols::unstable::relative_pointer::v1::c_interfaces","",null,null],[7,"zwp_relative_pointer_manager_v1_requests","","",null,null],[7,"zwp_relative_pointer_manager_v1_interface","","",null,null],[7,"zwp_relative_pointer_v1_requests","","",null,null],[7,"zwp_relative_pointer_v1_events","","",null,null],[7,"zwp_relative_pointer_v1_interface","","",null,null],[11,"is_destructor","wayland_protocols::unstable::relative_pointer::v1::client::zwp_relative_pointer_manager_v1","",142,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",142,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",142,null],[11,"into_raw","","",142,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",142,null],[11,"as_raw_c_in","","",142,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",150,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",150,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",150,null],[11,"into_raw","","",150,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",150,null],[11,"as_raw_c_in","","",150,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",151,null],[11,"is_destructor","wayland_protocols::unstable::relative_pointer::v1::client::zwp_relative_pointer_v1","",144,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",144,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",144,null],[11,"into_raw","","",144,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",144,null],[11,"as_raw_c_in","","",144,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",145,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",145,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",145,null],[11,"into_raw","","",145,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",145,null],[11,"as_raw_c_in","","",145,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",152,null],[11,"is_destructor","wayland_protocols::unstable::relative_pointer::v1::server::zwp_relative_pointer_manager_v1","",147,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",147,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",147,null],[11,"into_raw","","",147,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",147,null],[11,"as_raw_c_in","","",147,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",153,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",153,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",153,null],[11,"into_raw","","",153,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",153,null],[11,"as_raw_c_in","","",153,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",154,null],[11,"is_destructor","wayland_protocols::unstable::relative_pointer::v1::server::zwp_relative_pointer_v1","",148,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",148,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",148,null],[11,"into_raw","","",148,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",148,null],[11,"as_raw_c_in","","",148,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",149,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",149,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",149,null],[11,"into_raw","","",149,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",149,null],[11,"as_raw_c_in","","",149,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",155,null],[0,"tablet","wayland_protocols::unstable","Wayland protocol for graphics tablets",null,null],[0,"v1","wayland_protocols::unstable::tablet","",null,null],[0,"client","wayland_protocols::unstable::tablet::v1","Client-side API of this protocol",null,null],[0,"zwp_tablet_manager_v1","wayland_protocols::unstable::tablet::v1::client","controller object for graphic tablet devices",null,null],[3,"ZwpTabletManagerV1","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_manager_v1","",null,null],[4,"Request","","",null,null],[13,"GetTabletSeat","","get the tablet seat",156,null],[12,"tablet_seat","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_manager_v1::Request","",156,null],[12,"seat","","",156,null],[13,"Destroy","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_manager_v1","release the memory for the tablet manager object",156,null],[4,"Event","","",null,null],[8,"RequestsTrait","","",null,null],[10,"get_tablet_seat","","get the tablet seat",157,{"i":[{"n":"self"},{"n":"proxy"},{"n":"f"}],"o":{"g":["proxy"],"n":"result"}}],[10,"destroy","","release the memory for the tablet manager object",157,null],[0,"zwp_tablet_seat_v1","wayland_protocols::unstable::tablet::v1::client","controller object for graphic tablet devices of a seat",null,null],[3,"ZwpTabletSeatV1","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_seat_v1","",null,null],[4,"Request","","",null,null],[13,"Destroy","","release the memory for the tablet seat object",158,null],[4,"Event","","",null,null],[13,"TabletAdded","","new device notification",159,null],[12,"id","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_seat_v1::Event","",159,null],[13,"ToolAdded","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_seat_v1","a new tool has been used with a tablet",159,null],[12,"id","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_seat_v1::Event","",159,null],[8,"RequestsTrait","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_seat_v1","",null,null],[10,"destroy","","release the memory for the tablet seat object",160,null],[0,"zwp_tablet_tool_v1","wayland_protocols::unstable::tablet::v1::client","a physical tablet tool",null,null],[3,"ZwpTabletToolV1","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","",null,null],[4,"Type","","a physical tool type",null,null],[13,"Pen","","Pen",161,null],[13,"Eraser","","Eraser",161,null],[13,"Brush","","Brush",161,null],[13,"Pencil","","Pencil",161,null],[13,"Airbrush","","Airbrush",161,null],[13,"Finger","","Finger",161,null],[13,"Mouse","","Mouse",161,null],[13,"Lens","","Lens",161,null],[4,"Capability","","capability flags for a tool",null,null],[13,"Tilt","","Tilt axes",162,null],[13,"Pressure","","Pressure axis",162,null],[13,"Distance","","Distance axis",162,null],[13,"Rotation","","Z-rotation axis",162,null],[13,"Slider","","Slider axis",162,null],[13,"Wheel","","Wheel axis",162,null],[4,"ButtonState","","physical button state",null,null],[13,"Released","","button is not pressed",163,null],[13,"Pressed","","button is pressed",163,null],[4,"Error","","",null,null],[13,"Role","","given wl_surface has another role",164,null],[4,"Request","","",null,null],[13,"SetCursor","","set the tablet tool's surface",165,null],[12,"serial","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1::Request","",165,null],[12,"surface","","",165,null],[12,"hotspot_x","","",165,null],[12,"hotspot_y","","",165,null],[13,"Destroy","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","destroy the tool object",165,null],[4,"Event","","",null,null],[13,"Type","","tool type",166,null],[12,"tool_type","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1::Event","",166,null],[13,"HardwareSerial","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","unique hardware serial number of the tool",166,null],[12,"hardware_serial_hi","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1::Event","",166,null],[12,"hardware_serial_lo","","",166,null],[13,"HardwareIdWacom","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","hardware id notification in Wacom's format",166,null],[12,"hardware_id_hi","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1::Event","",166,null],[12,"hardware_id_lo","","",166,null],[13,"Capability","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","tool capability notification",166,null],[12,"capability","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1::Event","",166,null],[13,"Done","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","tool description events sequence complete",166,null],[13,"Removed","","tool removed",166,null],[13,"ProximityIn","","proximity in event",166,null],[12,"serial","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1::Event","",166,null],[12,"tablet","","",166,null],[12,"surface","","",166,null],[13,"ProximityOut","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","proximity out event",166,null],[13,"Down","","tablet tool is making contact",166,null],[12,"serial","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1::Event","",166,null],[13,"Up","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","tablet tool is no longer making contact",166,null],[13,"Motion","","motion event",166,null],[12,"x","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1::Event","",166,null],[12,"y","","",166,null],[13,"Pressure","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","pressure change event",166,null],[12,"pressure","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1::Event","",166,null],[13,"Distance","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","distance change event",166,null],[12,"distance","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1::Event","",166,null],[13,"Tilt","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","tilt change event",166,null],[12,"tilt_x","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1::Event","",166,null],[12,"tilt_y","","",166,null],[13,"Rotation","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","z-rotation change event",166,null],[12,"degrees","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1::Event","",166,null],[13,"Slider","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","Slider position change event",166,null],[12,"position","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1::Event","",166,null],[13,"Wheel","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","Wheel delta event",166,null],[12,"degrees","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1::Event","",166,null],[12,"clicks","","",166,null],[13,"Button","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","button event",166,null],[12,"serial","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1::Event","",166,null],[12,"button","","",166,null],[12,"state","","",166,null],[13,"Frame","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","frame event",166,null],[12,"time","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1::Event","",166,null],[8,"RequestsTrait","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","",null,null],[10,"set_cursor","","set the tablet tool's surface",167,null],[10,"destroy","","destroy the tool object",167,null],[0,"zwp_tablet_v1","wayland_protocols::unstable::tablet::v1::client","graphics tablet device",null,null],[3,"ZwpTabletV1","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_v1","",null,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the tablet object",168,null],[4,"Event","","",null,null],[13,"Name","","tablet device name",169,null],[12,"name","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_v1::Event","",169,null],[13,"Id","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_v1","tablet device USB vendor/product id",169,null],[12,"vid","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_v1::Event","",169,null],[12,"pid","","",169,null],[13,"Path","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_v1","path to the device",169,null],[12,"path","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_v1::Event","",169,null],[13,"Done","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_v1","tablet description events sequence complete",169,null],[13,"Removed","","tablet removed event",169,null],[8,"RequestsTrait","","",null,null],[10,"destroy","","destroy the tablet object",170,null],[0,"server","wayland_protocols::unstable::tablet::v1","Server-side API of this protocol",null,null],[0,"zwp_tablet_manager_v1","wayland_protocols::unstable::tablet::v1::server","controller object for graphic tablet devices",null,null],[3,"ZwpTabletManagerV1","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_manager_v1","",null,null],[4,"Request","","",null,null],[13,"GetTabletSeat","","get the tablet seat",171,null],[12,"tablet_seat","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_manager_v1::Request","",171,null],[12,"seat","","",171,null],[13,"Destroy","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_manager_v1","release the memory for the tablet manager object",171,null],[4,"Event","","",null,null],[0,"zwp_tablet_seat_v1","wayland_protocols::unstable::tablet::v1::server","controller object for graphic tablet devices of a seat",null,null],[3,"ZwpTabletSeatV1","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_seat_v1","",null,null],[4,"Request","","",null,null],[13,"Destroy","","release the memory for the tablet seat object",172,null],[4,"Event","","",null,null],[13,"TabletAdded","","new device notification",173,null],[12,"id","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_seat_v1::Event","",173,null],[13,"ToolAdded","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_seat_v1","a new tool has been used with a tablet",173,null],[12,"id","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_seat_v1::Event","",173,null],[0,"zwp_tablet_tool_v1","wayland_protocols::unstable::tablet::v1::server","a physical tablet tool",null,null],[3,"ZwpTabletToolV1","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1","",null,null],[4,"Type","","a physical tool type",null,null],[13,"Pen","","Pen",174,null],[13,"Eraser","","Eraser",174,null],[13,"Brush","","Brush",174,null],[13,"Pencil","","Pencil",174,null],[13,"Airbrush","","Airbrush",174,null],[13,"Finger","","Finger",174,null],[13,"Mouse","","Mouse",174,null],[13,"Lens","","Lens",174,null],[4,"Capability","","capability flags for a tool",null,null],[13,"Tilt","","Tilt axes",175,null],[13,"Pressure","","Pressure axis",175,null],[13,"Distance","","Distance axis",175,null],[13,"Rotation","","Z-rotation axis",175,null],[13,"Slider","","Slider axis",175,null],[13,"Wheel","","Wheel axis",175,null],[4,"ButtonState","","physical button state",null,null],[13,"Released","","button is not pressed",176,null],[13,"Pressed","","button is pressed",176,null],[4,"Error","","",null,null],[13,"Role","","given wl_surface has another role",177,null],[4,"Request","","",null,null],[13,"SetCursor","","set the tablet tool's surface",178,null],[12,"serial","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1::Request","",178,null],[12,"surface","","",178,null],[12,"hotspot_x","","",178,null],[12,"hotspot_y","","",178,null],[13,"Destroy","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1","destroy the tool object",178,null],[4,"Event","","",null,null],[13,"Type","","tool type",179,null],[12,"tool_type","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1::Event","",179,null],[13,"HardwareSerial","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1","unique hardware serial number of the tool",179,null],[12,"hardware_serial_hi","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1::Event","",179,null],[12,"hardware_serial_lo","","",179,null],[13,"HardwareIdWacom","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1","hardware id notification in Wacom's format",179,null],[12,"hardware_id_hi","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1::Event","",179,null],[12,"hardware_id_lo","","",179,null],[13,"Capability","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1","tool capability notification",179,null],[12,"capability","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1::Event","",179,null],[13,"Done","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1","tool description events sequence complete",179,null],[13,"Removed","","tool removed",179,null],[13,"ProximityIn","","proximity in event",179,null],[12,"serial","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1::Event","",179,null],[12,"tablet","","",179,null],[12,"surface","","",179,null],[13,"ProximityOut","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1","proximity out event",179,null],[13,"Down","","tablet tool is making contact",179,null],[12,"serial","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1::Event","",179,null],[13,"Up","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1","tablet tool is no longer making contact",179,null],[13,"Motion","","motion event",179,null],[12,"x","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1::Event","",179,null],[12,"y","","",179,null],[13,"Pressure","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1","pressure change event",179,null],[12,"pressure","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1::Event","",179,null],[13,"Distance","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1","distance change event",179,null],[12,"distance","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1::Event","",179,null],[13,"Tilt","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1","tilt change event",179,null],[12,"tilt_x","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1::Event","",179,null],[12,"tilt_y","","",179,null],[13,"Rotation","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1","z-rotation change event",179,null],[12,"degrees","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1::Event","",179,null],[13,"Slider","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1","Slider position change event",179,null],[12,"position","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1::Event","",179,null],[13,"Wheel","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1","Wheel delta event",179,null],[12,"degrees","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1::Event","",179,null],[12,"clicks","","",179,null],[13,"Button","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1","button event",179,null],[12,"serial","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1::Event","",179,null],[12,"button","","",179,null],[12,"state","","",179,null],[13,"Frame","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1","frame event",179,null],[12,"time","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1::Event","",179,null],[0,"zwp_tablet_v1","wayland_protocols::unstable::tablet::v1::server","graphics tablet device",null,null],[3,"ZwpTabletV1","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_v1","",null,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the tablet object",180,null],[4,"Event","","",null,null],[13,"Name","","tablet device name",181,null],[12,"name","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_v1::Event","",181,null],[13,"Id","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_v1","tablet device USB vendor/product id",181,null],[12,"vid","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_v1::Event","",181,null],[12,"pid","","",181,null],[13,"Path","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_v1","path to the device",181,null],[12,"path","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_v1::Event","",181,null],[13,"Done","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_v1","tablet description events sequence complete",181,null],[13,"Removed","","tablet removed event",181,null],[0,"c_interfaces","wayland_protocols::unstable::tablet::v1","C interfaces for this protocol",null,null],[7,"wl_seat_interface","wayland_protocols::unstable::tablet::v1::c_interfaces","",null,null],[7,"wl_surface_interface","","",null,null],[7,"zwp_tablet_manager_v1_requests","","",null,null],[7,"zwp_tablet_manager_v1_interface","","",null,null],[7,"zwp_tablet_seat_v1_requests","","",null,null],[7,"zwp_tablet_seat_v1_events","","",null,null],[7,"zwp_tablet_seat_v1_interface","","",null,null],[7,"zwp_tablet_tool_v1_requests","","",null,null],[7,"zwp_tablet_tool_v1_events","","",null,null],[7,"zwp_tablet_tool_v1_interface","","",null,null],[7,"zwp_tablet_v1_requests","","",null,null],[7,"zwp_tablet_v1_events","","",null,null],[7,"zwp_tablet_v1_interface","","",null,null],[11,"is_destructor","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_manager_v1","",156,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",156,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",156,null],[11,"into_raw","","",156,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",156,null],[11,"as_raw_c_in","","",156,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",182,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",182,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",182,null],[11,"into_raw","","",182,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",182,null],[11,"as_raw_c_in","","",182,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",183,null],[11,"is_destructor","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_seat_v1","",158,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",158,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",158,null],[11,"into_raw","","",158,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",158,null],[11,"as_raw_c_in","","",158,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",159,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",159,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",159,null],[11,"into_raw","","",159,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",159,null],[11,"as_raw_c_in","","",159,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",184,null],[11,"clone","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_tool_v1","",161,{"i":[{"n":"self"}],"o":{"n":"type"}}],[11,"fmt","","",161,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",161,{"i":[{"n":"self"},{"n":"type"}],"o":{"n":"bool"}}],[11,"from_raw","","",161,{"i":[{"n":"u32"}],"o":{"g":["type"],"n":"option"}}],[11,"to_raw","","",161,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"clone","","",162,{"i":[{"n":"self"}],"o":{"n":"capability"}}],[11,"fmt","","",162,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",162,{"i":[{"n":"self"},{"n":"capability"}],"o":{"n":"bool"}}],[11,"from_raw","","",162,{"i":[{"n":"u32"}],"o":{"g":["capability"],"n":"option"}}],[11,"to_raw","","",162,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"clone","","",163,{"i":[{"n":"self"}],"o":{"n":"buttonstate"}}],[11,"fmt","","",163,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",163,{"i":[{"n":"self"},{"n":"buttonstate"}],"o":{"n":"bool"}}],[11,"from_raw","","",163,{"i":[{"n":"u32"}],"o":{"g":["buttonstate"],"n":"option"}}],[11,"to_raw","","",163,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"clone","","",164,{"i":[{"n":"self"}],"o":{"n":"error"}}],[11,"fmt","","",164,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",164,{"i":[{"n":"self"},{"n":"error"}],"o":{"n":"bool"}}],[11,"from_raw","","",164,{"i":[{"n":"u32"}],"o":{"g":["error"],"n":"option"}}],[11,"to_raw","","",164,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"is_destructor","","",165,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",165,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",165,null],[11,"into_raw","","",165,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",165,null],[11,"as_raw_c_in","","",165,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",166,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",166,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",166,null],[11,"into_raw","","",166,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",166,null],[11,"as_raw_c_in","","",166,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",185,null],[11,"is_destructor","wayland_protocols::unstable::tablet::v1::client::zwp_tablet_v1","",168,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",168,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",168,null],[11,"into_raw","","",168,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",168,null],[11,"as_raw_c_in","","",168,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",169,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",169,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",169,null],[11,"into_raw","","",169,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",169,null],[11,"as_raw_c_in","","",169,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",186,null],[11,"is_destructor","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_manager_v1","",171,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",171,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",171,null],[11,"into_raw","","",171,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",171,null],[11,"as_raw_c_in","","",171,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",187,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",187,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",187,null],[11,"into_raw","","",187,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",187,null],[11,"as_raw_c_in","","",187,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",188,null],[11,"is_destructor","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_seat_v1","",172,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",172,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",172,null],[11,"into_raw","","",172,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",172,null],[11,"as_raw_c_in","","",172,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",173,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",173,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",173,null],[11,"into_raw","","",173,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",173,null],[11,"as_raw_c_in","","",173,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",189,null],[11,"clone","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_tool_v1","",174,{"i":[{"n":"self"}],"o":{"n":"type"}}],[11,"fmt","","",174,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",174,{"i":[{"n":"self"},{"n":"type"}],"o":{"n":"bool"}}],[11,"from_raw","","",174,{"i":[{"n":"u32"}],"o":{"g":["type"],"n":"option"}}],[11,"to_raw","","",174,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"clone","","",175,{"i":[{"n":"self"}],"o":{"n":"capability"}}],[11,"fmt","","",175,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",175,{"i":[{"n":"self"},{"n":"capability"}],"o":{"n":"bool"}}],[11,"from_raw","","",175,{"i":[{"n":"u32"}],"o":{"g":["capability"],"n":"option"}}],[11,"to_raw","","",175,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"clone","","",176,{"i":[{"n":"self"}],"o":{"n":"buttonstate"}}],[11,"fmt","","",176,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",176,{"i":[{"n":"self"},{"n":"buttonstate"}],"o":{"n":"bool"}}],[11,"from_raw","","",176,{"i":[{"n":"u32"}],"o":{"g":["buttonstate"],"n":"option"}}],[11,"to_raw","","",176,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"clone","","",177,{"i":[{"n":"self"}],"o":{"n":"error"}}],[11,"fmt","","",177,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",177,{"i":[{"n":"self"},{"n":"error"}],"o":{"n":"bool"}}],[11,"from_raw","","",177,{"i":[{"n":"u32"}],"o":{"g":["error"],"n":"option"}}],[11,"to_raw","","",177,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"is_destructor","","",178,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",178,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",178,null],[11,"into_raw","","",178,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",178,null],[11,"as_raw_c_in","","",178,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",179,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",179,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",179,null],[11,"into_raw","","",179,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",179,null],[11,"as_raw_c_in","","",179,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",190,null],[11,"is_destructor","wayland_protocols::unstable::tablet::v1::server::zwp_tablet_v1","",180,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",180,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",180,null],[11,"into_raw","","",180,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",180,null],[11,"as_raw_c_in","","",180,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",181,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",181,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",181,null],[11,"into_raw","","",181,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",181,null],[11,"as_raw_c_in","","",181,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",191,null],[0,"v2","wayland_protocols::unstable::tablet","",null,null],[0,"client","wayland_protocols::unstable::tablet::v2","Client-side API of this protocol",null,null],[0,"zwp_tablet_manager_v2","wayland_protocols::unstable::tablet::v2::client","controller object for graphic tablet devices",null,null],[3,"ZwpTabletManagerV2","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_manager_v2","",null,null],[4,"Request","","",null,null],[13,"GetTabletSeat","","get the tablet seat",192,null],[12,"tablet_seat","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_manager_v2::Request","",192,null],[12,"seat","","",192,null],[13,"Destroy","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_manager_v2","release the memory for the tablet manager object",192,null],[4,"Event","","",null,null],[8,"RequestsTrait","","",null,null],[10,"get_tablet_seat","","get the tablet seat",193,{"i":[{"n":"self"},{"n":"proxy"},{"n":"f"}],"o":{"g":["proxy"],"n":"result"}}],[10,"destroy","","release the memory for the tablet manager object",193,null],[0,"zwp_tablet_seat_v2","wayland_protocols::unstable::tablet::v2::client","controller object for graphic tablet devices of a seat",null,null],[3,"ZwpTabletSeatV2","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_seat_v2","",null,null],[4,"Request","","",null,null],[13,"Destroy","","release the memory for the tablet seat object",194,null],[4,"Event","","",null,null],[13,"TabletAdded","","new device notification",195,null],[12,"id","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_seat_v2::Event","",195,null],[13,"ToolAdded","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_seat_v2","a new tool has been used with a tablet",195,null],[12,"id","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_seat_v2::Event","",195,null],[13,"PadAdded","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_seat_v2","new pad notification",195,null],[12,"id","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_seat_v2::Event","",195,null],[8,"RequestsTrait","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_seat_v2","",null,null],[10,"destroy","","release the memory for the tablet seat object",196,null],[0,"zwp_tablet_tool_v2","wayland_protocols::unstable::tablet::v2::client","a physical tablet tool",null,null],[3,"ZwpTabletToolV2","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","",null,null],[4,"Type","","a physical tool type",null,null],[13,"Pen","","Pen",197,null],[13,"Eraser","","Eraser",197,null],[13,"Brush","","Brush",197,null],[13,"Pencil","","Pencil",197,null],[13,"Airbrush","","Airbrush",197,null],[13,"Finger","","Finger",197,null],[13,"Mouse","","Mouse",197,null],[13,"Lens","","Lens",197,null],[4,"Capability","","capability flags for a tool",null,null],[13,"Tilt","","Tilt axes",198,null],[13,"Pressure","","Pressure axis",198,null],[13,"Distance","","Distance axis",198,null],[13,"Rotation","","Z-rotation axis",198,null],[13,"Slider","","Slider axis",198,null],[13,"Wheel","","Wheel axis",198,null],[4,"ButtonState","","physical button state",null,null],[13,"Released","","button is not pressed",199,null],[13,"Pressed","","button is pressed",199,null],[4,"Error","","",null,null],[13,"Role","","given wl_surface has another role",200,null],[4,"Request","","",null,null],[13,"SetCursor","","set the tablet tool's surface",201,null],[12,"serial","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2::Request","",201,null],[12,"surface","","",201,null],[12,"hotspot_x","","",201,null],[12,"hotspot_y","","",201,null],[13,"Destroy","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","destroy the tool object",201,null],[4,"Event","","",null,null],[13,"Type","","tool type",202,null],[12,"tool_type","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2::Event","",202,null],[13,"HardwareSerial","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","unique hardware serial number of the tool",202,null],[12,"hardware_serial_hi","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2::Event","",202,null],[12,"hardware_serial_lo","","",202,null],[13,"HardwareIdWacom","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","hardware id notification in Wacom's format",202,null],[12,"hardware_id_hi","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2::Event","",202,null],[12,"hardware_id_lo","","",202,null],[13,"Capability","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","tool capability notification",202,null],[12,"capability","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2::Event","",202,null],[13,"Done","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","tool description events sequence complete",202,null],[13,"Removed","","tool removed",202,null],[13,"ProximityIn","","proximity in event",202,null],[12,"serial","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2::Event","",202,null],[12,"tablet","","",202,null],[12,"surface","","",202,null],[13,"ProximityOut","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","proximity out event",202,null],[13,"Down","","tablet tool is making contact",202,null],[12,"serial","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2::Event","",202,null],[13,"Up","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","tablet tool is no longer making contact",202,null],[13,"Motion","","motion event",202,null],[12,"x","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2::Event","",202,null],[12,"y","","",202,null],[13,"Pressure","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","pressure change event",202,null],[12,"pressure","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2::Event","",202,null],[13,"Distance","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","distance change event",202,null],[12,"distance","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2::Event","",202,null],[13,"Tilt","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","tilt change event",202,null],[12,"tilt_x","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2::Event","",202,null],[12,"tilt_y","","",202,null],[13,"Rotation","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","z-rotation change event",202,null],[12,"degrees","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2::Event","",202,null],[13,"Slider","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","Slider position change event",202,null],[12,"position","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2::Event","",202,null],[13,"Wheel","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","Wheel delta event",202,null],[12,"degrees","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2::Event","",202,null],[12,"clicks","","",202,null],[13,"Button","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","button event",202,null],[12,"serial","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2::Event","",202,null],[12,"button","","",202,null],[12,"state","","",202,null],[13,"Frame","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","frame event",202,null],[12,"time","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2::Event","",202,null],[8,"RequestsTrait","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","",null,null],[10,"set_cursor","","set the tablet tool's surface",203,null],[10,"destroy","","destroy the tool object",203,null],[0,"zwp_tablet_v2","wayland_protocols::unstable::tablet::v2::client","graphics tablet device",null,null],[3,"ZwpTabletV2","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_v2","",null,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the tablet object",204,null],[4,"Event","","",null,null],[13,"Name","","tablet device name",205,null],[12,"name","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_v2::Event","",205,null],[13,"Id","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_v2","tablet device USB vendor/product id",205,null],[12,"vid","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_v2::Event","",205,null],[12,"pid","","",205,null],[13,"Path","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_v2","path to the device",205,null],[12,"path","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_v2::Event","",205,null],[13,"Done","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_v2","tablet description events sequence complete",205,null],[13,"Removed","","tablet removed event",205,null],[8,"RequestsTrait","","",null,null],[10,"destroy","","destroy the tablet object",206,null],[0,"zwp_tablet_pad_ring_v2","wayland_protocols::unstable::tablet::v2::client","pad ring",null,null],[3,"ZwpTabletPadRingV2","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_ring_v2","",null,null],[4,"Source","","ring axis source",null,null],[13,"Finger","","finger",207,null],[4,"Request","","",null,null],[13,"SetFeedback","","set compositor feedback",208,null],[12,"description","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_ring_v2::Request","",208,null],[12,"serial","","",208,null],[13,"Destroy","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_ring_v2","destroy the ring object",208,null],[4,"Event","","",null,null],[13,"Source","","ring event source",209,null],[12,"source","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_ring_v2::Event","",209,null],[13,"Angle","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_ring_v2","angle changed",209,null],[12,"degrees","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_ring_v2::Event","",209,null],[13,"Stop","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_ring_v2","interaction stopped",209,null],[13,"Frame","","end of a ring event sequence",209,null],[12,"time","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_ring_v2::Event","",209,null],[8,"RequestsTrait","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_ring_v2","",null,null],[10,"set_feedback","","set compositor feedback",210,null],[10,"destroy","","destroy the ring object",210,null],[0,"zwp_tablet_pad_strip_v2","wayland_protocols::unstable::tablet::v2::client","pad strip",null,null],[3,"ZwpTabletPadStripV2","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_strip_v2","",null,null],[4,"Source","","strip axis source",null,null],[13,"Finger","","finger",211,null],[4,"Request","","",null,null],[13,"SetFeedback","","set compositor feedback",212,null],[12,"description","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_strip_v2::Request","",212,null],[12,"serial","","",212,null],[13,"Destroy","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_strip_v2","destroy the strip object",212,null],[4,"Event","","",null,null],[13,"Source","","strip event source",213,null],[12,"source","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_strip_v2::Event","",213,null],[13,"Position","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_strip_v2","position changed",213,null],[12,"position","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_strip_v2::Event","",213,null],[13,"Stop","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_strip_v2","interaction stopped",213,null],[13,"Frame","","end of a strip event sequence",213,null],[12,"time","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_strip_v2::Event","",213,null],[8,"RequestsTrait","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_strip_v2","",null,null],[10,"set_feedback","","set compositor feedback",214,null],[10,"destroy","","destroy the strip object",214,null],[0,"zwp_tablet_pad_group_v2","wayland_protocols::unstable::tablet::v2::client","a set of buttons, rings and strips",null,null],[3,"ZwpTabletPadGroupV2","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_group_v2","",null,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the pad object",215,null],[4,"Event","","",null,null],[13,"Buttons","","buttons announced",216,null],[12,"buttons","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_group_v2::Event","",216,null],[13,"Ring","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_group_v2","ring announced",216,null],[12,"ring","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_group_v2::Event","",216,null],[13,"Strip","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_group_v2","strip announced",216,null],[12,"strip","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_group_v2::Event","",216,null],[13,"Modes","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_group_v2","mode-switch ability announced",216,null],[12,"modes","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_group_v2::Event","",216,null],[13,"Done","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_group_v2","tablet group description events sequence complete",216,null],[13,"ModeSwitch","","mode switch event",216,null],[12,"time","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_group_v2::Event","",216,null],[12,"serial","","",216,null],[12,"mode","","",216,null],[8,"RequestsTrait","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_group_v2","",null,null],[10,"destroy","","destroy the pad object",217,null],[0,"zwp_tablet_pad_v2","wayland_protocols::unstable::tablet::v2::client","a set of buttons, rings and strips",null,null],[3,"ZwpTabletPadV2","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2","",null,null],[4,"ButtonState","","physical button state",null,null],[13,"Released","","the button is not pressed",218,null],[13,"Pressed","","the button is pressed",218,null],[4,"Request","","",null,null],[13,"SetFeedback","","set compositor feedback",219,null],[12,"button","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2::Request","",219,null],[12,"description","","",219,null],[12,"serial","","",219,null],[13,"Destroy","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2","destroy the pad object",219,null],[4,"Event","","",null,null],[13,"Group","","group announced",220,null],[12,"pad_group","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2::Event","",220,null],[13,"Path","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2","path to the device",220,null],[12,"path","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2::Event","",220,null],[13,"Buttons","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2","buttons announced",220,null],[12,"buttons","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2::Event","",220,null],[13,"Done","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2","pad description event sequence complete",220,null],[13,"Button","","physical button state",220,null],[12,"time","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2::Event","",220,null],[12,"button","","",220,null],[12,"state","","",220,null],[13,"Enter","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2","enter event",220,null],[12,"serial","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2::Event","",220,null],[12,"tablet","","",220,null],[12,"surface","","",220,null],[13,"Leave","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2","enter event",220,null],[12,"serial","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2::Event","",220,null],[12,"surface","","",220,null],[13,"Removed","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2","pad removed event",220,null],[8,"RequestsTrait","","",null,null],[10,"set_feedback","","set compositor feedback",221,null],[10,"destroy","","destroy the pad object",221,null],[0,"server","wayland_protocols::unstable::tablet::v2","Server-side API of this protocol",null,null],[0,"zwp_tablet_manager_v2","wayland_protocols::unstable::tablet::v2::server","controller object for graphic tablet devices",null,null],[3,"ZwpTabletManagerV2","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_manager_v2","",null,null],[4,"Request","","",null,null],[13,"GetTabletSeat","","get the tablet seat",222,null],[12,"tablet_seat","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_manager_v2::Request","",222,null],[12,"seat","","",222,null],[13,"Destroy","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_manager_v2","release the memory for the tablet manager object",222,null],[4,"Event","","",null,null],[0,"zwp_tablet_seat_v2","wayland_protocols::unstable::tablet::v2::server","controller object for graphic tablet devices of a seat",null,null],[3,"ZwpTabletSeatV2","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_seat_v2","",null,null],[4,"Request","","",null,null],[13,"Destroy","","release the memory for the tablet seat object",223,null],[4,"Event","","",null,null],[13,"TabletAdded","","new device notification",224,null],[12,"id","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_seat_v2::Event","",224,null],[13,"ToolAdded","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_seat_v2","a new tool has been used with a tablet",224,null],[12,"id","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_seat_v2::Event","",224,null],[13,"PadAdded","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_seat_v2","new pad notification",224,null],[12,"id","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_seat_v2::Event","",224,null],[0,"zwp_tablet_tool_v2","wayland_protocols::unstable::tablet::v2::server","a physical tablet tool",null,null],[3,"ZwpTabletToolV2","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2","",null,null],[4,"Type","","a physical tool type",null,null],[13,"Pen","","Pen",225,null],[13,"Eraser","","Eraser",225,null],[13,"Brush","","Brush",225,null],[13,"Pencil","","Pencil",225,null],[13,"Airbrush","","Airbrush",225,null],[13,"Finger","","Finger",225,null],[13,"Mouse","","Mouse",225,null],[13,"Lens","","Lens",225,null],[4,"Capability","","capability flags for a tool",null,null],[13,"Tilt","","Tilt axes",226,null],[13,"Pressure","","Pressure axis",226,null],[13,"Distance","","Distance axis",226,null],[13,"Rotation","","Z-rotation axis",226,null],[13,"Slider","","Slider axis",226,null],[13,"Wheel","","Wheel axis",226,null],[4,"ButtonState","","physical button state",null,null],[13,"Released","","button is not pressed",227,null],[13,"Pressed","","button is pressed",227,null],[4,"Error","","",null,null],[13,"Role","","given wl_surface has another role",228,null],[4,"Request","","",null,null],[13,"SetCursor","","set the tablet tool's surface",229,null],[12,"serial","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2::Request","",229,null],[12,"surface","","",229,null],[12,"hotspot_x","","",229,null],[12,"hotspot_y","","",229,null],[13,"Destroy","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2","destroy the tool object",229,null],[4,"Event","","",null,null],[13,"Type","","tool type",230,null],[12,"tool_type","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2::Event","",230,null],[13,"HardwareSerial","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2","unique hardware serial number of the tool",230,null],[12,"hardware_serial_hi","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2::Event","",230,null],[12,"hardware_serial_lo","","",230,null],[13,"HardwareIdWacom","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2","hardware id notification in Wacom's format",230,null],[12,"hardware_id_hi","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2::Event","",230,null],[12,"hardware_id_lo","","",230,null],[13,"Capability","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2","tool capability notification",230,null],[12,"capability","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2::Event","",230,null],[13,"Done","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2","tool description events sequence complete",230,null],[13,"Removed","","tool removed",230,null],[13,"ProximityIn","","proximity in event",230,null],[12,"serial","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2::Event","",230,null],[12,"tablet","","",230,null],[12,"surface","","",230,null],[13,"ProximityOut","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2","proximity out event",230,null],[13,"Down","","tablet tool is making contact",230,null],[12,"serial","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2::Event","",230,null],[13,"Up","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2","tablet tool is no longer making contact",230,null],[13,"Motion","","motion event",230,null],[12,"x","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2::Event","",230,null],[12,"y","","",230,null],[13,"Pressure","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2","pressure change event",230,null],[12,"pressure","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2::Event","",230,null],[13,"Distance","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2","distance change event",230,null],[12,"distance","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2::Event","",230,null],[13,"Tilt","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2","tilt change event",230,null],[12,"tilt_x","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2::Event","",230,null],[12,"tilt_y","","",230,null],[13,"Rotation","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2","z-rotation change event",230,null],[12,"degrees","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2::Event","",230,null],[13,"Slider","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2","Slider position change event",230,null],[12,"position","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2::Event","",230,null],[13,"Wheel","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2","Wheel delta event",230,null],[12,"degrees","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2::Event","",230,null],[12,"clicks","","",230,null],[13,"Button","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2","button event",230,null],[12,"serial","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2::Event","",230,null],[12,"button","","",230,null],[12,"state","","",230,null],[13,"Frame","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2","frame event",230,null],[12,"time","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2::Event","",230,null],[0,"zwp_tablet_v2","wayland_protocols::unstable::tablet::v2::server","graphics tablet device",null,null],[3,"ZwpTabletV2","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_v2","",null,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the tablet object",231,null],[4,"Event","","",null,null],[13,"Name","","tablet device name",232,null],[12,"name","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_v2::Event","",232,null],[13,"Id","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_v2","tablet device USB vendor/product id",232,null],[12,"vid","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_v2::Event","",232,null],[12,"pid","","",232,null],[13,"Path","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_v2","path to the device",232,null],[12,"path","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_v2::Event","",232,null],[13,"Done","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_v2","tablet description events sequence complete",232,null],[13,"Removed","","tablet removed event",232,null],[0,"zwp_tablet_pad_ring_v2","wayland_protocols::unstable::tablet::v2::server","pad ring",null,null],[3,"ZwpTabletPadRingV2","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_ring_v2","",null,null],[4,"Source","","ring axis source",null,null],[13,"Finger","","finger",233,null],[4,"Request","","",null,null],[13,"SetFeedback","","set compositor feedback",234,null],[12,"description","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_ring_v2::Request","",234,null],[12,"serial","","",234,null],[13,"Destroy","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_ring_v2","destroy the ring object",234,null],[4,"Event","","",null,null],[13,"Source","","ring event source",235,null],[12,"source","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_ring_v2::Event","",235,null],[13,"Angle","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_ring_v2","angle changed",235,null],[12,"degrees","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_ring_v2::Event","",235,null],[13,"Stop","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_ring_v2","interaction stopped",235,null],[13,"Frame","","end of a ring event sequence",235,null],[12,"time","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_ring_v2::Event","",235,null],[0,"zwp_tablet_pad_strip_v2","wayland_protocols::unstable::tablet::v2::server","pad strip",null,null],[3,"ZwpTabletPadStripV2","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_strip_v2","",null,null],[4,"Source","","strip axis source",null,null],[13,"Finger","","finger",236,null],[4,"Request","","",null,null],[13,"SetFeedback","","set compositor feedback",237,null],[12,"description","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_strip_v2::Request","",237,null],[12,"serial","","",237,null],[13,"Destroy","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_strip_v2","destroy the strip object",237,null],[4,"Event","","",null,null],[13,"Source","","strip event source",238,null],[12,"source","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_strip_v2::Event","",238,null],[13,"Position","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_strip_v2","position changed",238,null],[12,"position","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_strip_v2::Event","",238,null],[13,"Stop","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_strip_v2","interaction stopped",238,null],[13,"Frame","","end of a strip event sequence",238,null],[12,"time","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_strip_v2::Event","",238,null],[0,"zwp_tablet_pad_group_v2","wayland_protocols::unstable::tablet::v2::server","a set of buttons, rings and strips",null,null],[3,"ZwpTabletPadGroupV2","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_group_v2","",null,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the pad object",239,null],[4,"Event","","",null,null],[13,"Buttons","","buttons announced",240,null],[12,"buttons","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_group_v2::Event","",240,null],[13,"Ring","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_group_v2","ring announced",240,null],[12,"ring","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_group_v2::Event","",240,null],[13,"Strip","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_group_v2","strip announced",240,null],[12,"strip","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_group_v2::Event","",240,null],[13,"Modes","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_group_v2","mode-switch ability announced",240,null],[12,"modes","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_group_v2::Event","",240,null],[13,"Done","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_group_v2","tablet group description events sequence complete",240,null],[13,"ModeSwitch","","mode switch event",240,null],[12,"time","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_group_v2::Event","",240,null],[12,"serial","","",240,null],[12,"mode","","",240,null],[0,"zwp_tablet_pad_v2","wayland_protocols::unstable::tablet::v2::server","a set of buttons, rings and strips",null,null],[3,"ZwpTabletPadV2","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_v2","",null,null],[4,"ButtonState","","physical button state",null,null],[13,"Released","","the button is not pressed",241,null],[13,"Pressed","","the button is pressed",241,null],[4,"Request","","",null,null],[13,"SetFeedback","","set compositor feedback",242,null],[12,"button","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_v2::Request","",242,null],[12,"description","","",242,null],[12,"serial","","",242,null],[13,"Destroy","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_v2","destroy the pad object",242,null],[4,"Event","","",null,null],[13,"Group","","group announced",243,null],[12,"pad_group","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_v2::Event","",243,null],[13,"Path","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_v2","path to the device",243,null],[12,"path","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_v2::Event","",243,null],[13,"Buttons","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_v2","buttons announced",243,null],[12,"buttons","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_v2::Event","",243,null],[13,"Done","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_v2","pad description event sequence complete",243,null],[13,"Button","","physical button state",243,null],[12,"time","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_v2::Event","",243,null],[12,"button","","",243,null],[12,"state","","",243,null],[13,"Enter","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_v2","enter event",243,null],[12,"serial","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_v2::Event","",243,null],[12,"tablet","","",243,null],[12,"surface","","",243,null],[13,"Leave","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_v2","enter event",243,null],[12,"serial","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_v2::Event","",243,null],[12,"surface","","",243,null],[13,"Removed","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_v2","pad removed event",243,null],[0,"c_interfaces","wayland_protocols::unstable::tablet::v2","C interfaces for this protocol",null,null],[7,"wl_seat_interface","wayland_protocols::unstable::tablet::v2::c_interfaces","",null,null],[7,"wl_surface_interface","","",null,null],[7,"zwp_tablet_manager_v2_requests","","",null,null],[7,"zwp_tablet_manager_v2_interface","","",null,null],[7,"zwp_tablet_seat_v2_requests","","",null,null],[7,"zwp_tablet_seat_v2_events","","",null,null],[7,"zwp_tablet_seat_v2_interface","","",null,null],[7,"zwp_tablet_tool_v2_requests","","",null,null],[7,"zwp_tablet_tool_v2_events","","",null,null],[7,"zwp_tablet_tool_v2_interface","","",null,null],[7,"zwp_tablet_v2_requests","","",null,null],[7,"zwp_tablet_v2_events","","",null,null],[7,"zwp_tablet_v2_interface","","",null,null],[7,"zwp_tablet_pad_ring_v2_requests","","",null,null],[7,"zwp_tablet_pad_ring_v2_events","","",null,null],[7,"zwp_tablet_pad_ring_v2_interface","","",null,null],[7,"zwp_tablet_pad_strip_v2_requests","","",null,null],[7,"zwp_tablet_pad_strip_v2_events","","",null,null],[7,"zwp_tablet_pad_strip_v2_interface","","",null,null],[7,"zwp_tablet_pad_group_v2_requests","","",null,null],[7,"zwp_tablet_pad_group_v2_events","","",null,null],[7,"zwp_tablet_pad_group_v2_interface","","",null,null],[7,"zwp_tablet_pad_v2_requests","","",null,null],[7,"zwp_tablet_pad_v2_events","","",null,null],[7,"zwp_tablet_pad_v2_interface","","",null,null],[11,"is_destructor","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_manager_v2","",192,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",192,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",192,null],[11,"into_raw","","",192,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",192,null],[11,"as_raw_c_in","","",192,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",244,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",244,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",244,null],[11,"into_raw","","",244,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",244,null],[11,"as_raw_c_in","","",244,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",245,null],[11,"is_destructor","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_seat_v2","",194,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",194,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",194,null],[11,"into_raw","","",194,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",194,null],[11,"as_raw_c_in","","",194,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",195,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",195,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",195,null],[11,"into_raw","","",195,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",195,null],[11,"as_raw_c_in","","",195,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",246,null],[11,"clone","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_tool_v2","",197,{"i":[{"n":"self"}],"o":{"n":"type"}}],[11,"fmt","","",197,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",197,{"i":[{"n":"self"},{"n":"type"}],"o":{"n":"bool"}}],[11,"from_raw","","",197,{"i":[{"n":"u32"}],"o":{"g":["type"],"n":"option"}}],[11,"to_raw","","",197,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"clone","","",198,{"i":[{"n":"self"}],"o":{"n":"capability"}}],[11,"fmt","","",198,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",198,{"i":[{"n":"self"},{"n":"capability"}],"o":{"n":"bool"}}],[11,"from_raw","","",198,{"i":[{"n":"u32"}],"o":{"g":["capability"],"n":"option"}}],[11,"to_raw","","",198,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"clone","","",199,{"i":[{"n":"self"}],"o":{"n":"buttonstate"}}],[11,"fmt","","",199,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",199,{"i":[{"n":"self"},{"n":"buttonstate"}],"o":{"n":"bool"}}],[11,"from_raw","","",199,{"i":[{"n":"u32"}],"o":{"g":["buttonstate"],"n":"option"}}],[11,"to_raw","","",199,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"clone","","",200,{"i":[{"n":"self"}],"o":{"n":"error"}}],[11,"fmt","","",200,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",200,{"i":[{"n":"self"},{"n":"error"}],"o":{"n":"bool"}}],[11,"from_raw","","",200,{"i":[{"n":"u32"}],"o":{"g":["error"],"n":"option"}}],[11,"to_raw","","",200,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"is_destructor","","",201,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",201,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",201,null],[11,"into_raw","","",201,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",201,null],[11,"as_raw_c_in","","",201,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",202,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",202,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",202,null],[11,"into_raw","","",202,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",202,null],[11,"as_raw_c_in","","",202,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",247,null],[11,"is_destructor","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_v2","",204,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",204,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",204,null],[11,"into_raw","","",204,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",204,null],[11,"as_raw_c_in","","",204,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",205,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",205,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",205,null],[11,"into_raw","","",205,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",205,null],[11,"as_raw_c_in","","",205,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",248,null],[11,"clone","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_ring_v2","",207,{"i":[{"n":"self"}],"o":{"n":"source"}}],[11,"fmt","","",207,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",207,{"i":[{"n":"self"},{"n":"source"}],"o":{"n":"bool"}}],[11,"from_raw","","",207,{"i":[{"n":"u32"}],"o":{"g":["source"],"n":"option"}}],[11,"to_raw","","",207,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"is_destructor","","",208,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",208,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",208,null],[11,"into_raw","","",208,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",208,null],[11,"as_raw_c_in","","",208,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",209,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",209,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",209,null],[11,"into_raw","","",209,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",209,null],[11,"as_raw_c_in","","",209,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",249,null],[11,"clone","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_strip_v2","",211,{"i":[{"n":"self"}],"o":{"n":"source"}}],[11,"fmt","","",211,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",211,{"i":[{"n":"self"},{"n":"source"}],"o":{"n":"bool"}}],[11,"from_raw","","",211,{"i":[{"n":"u32"}],"o":{"g":["source"],"n":"option"}}],[11,"to_raw","","",211,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"is_destructor","","",212,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",212,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",212,null],[11,"into_raw","","",212,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",212,null],[11,"as_raw_c_in","","",212,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",213,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",213,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",213,null],[11,"into_raw","","",213,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",213,null],[11,"as_raw_c_in","","",213,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",250,null],[11,"is_destructor","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_group_v2","",215,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",215,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",215,null],[11,"into_raw","","",215,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",215,null],[11,"as_raw_c_in","","",215,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",216,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",216,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",216,null],[11,"into_raw","","",216,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",216,null],[11,"as_raw_c_in","","",216,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",251,null],[11,"clone","wayland_protocols::unstable::tablet::v2::client::zwp_tablet_pad_v2","",218,{"i":[{"n":"self"}],"o":{"n":"buttonstate"}}],[11,"fmt","","",218,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",218,{"i":[{"n":"self"},{"n":"buttonstate"}],"o":{"n":"bool"}}],[11,"from_raw","","",218,{"i":[{"n":"u32"}],"o":{"g":["buttonstate"],"n":"option"}}],[11,"to_raw","","",218,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"is_destructor","","",219,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",219,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",219,null],[11,"into_raw","","",219,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",219,null],[11,"as_raw_c_in","","",219,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",220,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",220,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",220,null],[11,"into_raw","","",220,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",220,null],[11,"as_raw_c_in","","",220,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",252,null],[11,"is_destructor","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_manager_v2","",222,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",222,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",222,null],[11,"into_raw","","",222,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",222,null],[11,"as_raw_c_in","","",222,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",253,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",253,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",253,null],[11,"into_raw","","",253,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",253,null],[11,"as_raw_c_in","","",253,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",254,null],[11,"is_destructor","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_seat_v2","",223,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",223,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",223,null],[11,"into_raw","","",223,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",223,null],[11,"as_raw_c_in","","",223,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",224,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",224,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",224,null],[11,"into_raw","","",224,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",224,null],[11,"as_raw_c_in","","",224,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",255,null],[11,"clone","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_tool_v2","",225,{"i":[{"n":"self"}],"o":{"n":"type"}}],[11,"fmt","","",225,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",225,{"i":[{"n":"self"},{"n":"type"}],"o":{"n":"bool"}}],[11,"from_raw","","",225,{"i":[{"n":"u32"}],"o":{"g":["type"],"n":"option"}}],[11,"to_raw","","",225,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"clone","","",226,{"i":[{"n":"self"}],"o":{"n":"capability"}}],[11,"fmt","","",226,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",226,{"i":[{"n":"self"},{"n":"capability"}],"o":{"n":"bool"}}],[11,"from_raw","","",226,{"i":[{"n":"u32"}],"o":{"g":["capability"],"n":"option"}}],[11,"to_raw","","",226,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"clone","","",227,{"i":[{"n":"self"}],"o":{"n":"buttonstate"}}],[11,"fmt","","",227,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",227,{"i":[{"n":"self"},{"n":"buttonstate"}],"o":{"n":"bool"}}],[11,"from_raw","","",227,{"i":[{"n":"u32"}],"o":{"g":["buttonstate"],"n":"option"}}],[11,"to_raw","","",227,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"clone","","",228,{"i":[{"n":"self"}],"o":{"n":"error"}}],[11,"fmt","","",228,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",228,{"i":[{"n":"self"},{"n":"error"}],"o":{"n":"bool"}}],[11,"from_raw","","",228,{"i":[{"n":"u32"}],"o":{"g":["error"],"n":"option"}}],[11,"to_raw","","",228,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"is_destructor","","",229,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",229,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",229,null],[11,"into_raw","","",229,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",229,null],[11,"as_raw_c_in","","",229,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",230,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",230,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",230,null],[11,"into_raw","","",230,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",230,null],[11,"as_raw_c_in","","",230,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",256,null],[11,"is_destructor","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_v2","",231,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",231,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",231,null],[11,"into_raw","","",231,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",231,null],[11,"as_raw_c_in","","",231,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",232,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",232,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",232,null],[11,"into_raw","","",232,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",232,null],[11,"as_raw_c_in","","",232,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",257,null],[11,"clone","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_ring_v2","",233,{"i":[{"n":"self"}],"o":{"n":"source"}}],[11,"fmt","","",233,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",233,{"i":[{"n":"self"},{"n":"source"}],"o":{"n":"bool"}}],[11,"from_raw","","",233,{"i":[{"n":"u32"}],"o":{"g":["source"],"n":"option"}}],[11,"to_raw","","",233,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"is_destructor","","",234,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",234,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",234,null],[11,"into_raw","","",234,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",234,null],[11,"as_raw_c_in","","",234,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",235,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",235,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",235,null],[11,"into_raw","","",235,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",235,null],[11,"as_raw_c_in","","",235,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",258,null],[11,"clone","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_strip_v2","",236,{"i":[{"n":"self"}],"o":{"n":"source"}}],[11,"fmt","","",236,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",236,{"i":[{"n":"self"},{"n":"source"}],"o":{"n":"bool"}}],[11,"from_raw","","",236,{"i":[{"n":"u32"}],"o":{"g":["source"],"n":"option"}}],[11,"to_raw","","",236,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"is_destructor","","",237,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",237,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",237,null],[11,"into_raw","","",237,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",237,null],[11,"as_raw_c_in","","",237,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",238,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",238,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",238,null],[11,"into_raw","","",238,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",238,null],[11,"as_raw_c_in","","",238,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",259,null],[11,"is_destructor","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_group_v2","",239,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",239,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",239,null],[11,"into_raw","","",239,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",239,null],[11,"as_raw_c_in","","",239,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",240,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",240,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",240,null],[11,"into_raw","","",240,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",240,null],[11,"as_raw_c_in","","",240,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",260,null],[11,"clone","wayland_protocols::unstable::tablet::v2::server::zwp_tablet_pad_v2","",241,{"i":[{"n":"self"}],"o":{"n":"buttonstate"}}],[11,"fmt","","",241,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",241,{"i":[{"n":"self"},{"n":"buttonstate"}],"o":{"n":"bool"}}],[11,"from_raw","","",241,{"i":[{"n":"u32"}],"o":{"g":["buttonstate"],"n":"option"}}],[11,"to_raw","","",241,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"is_destructor","","",242,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",242,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",242,null],[11,"into_raw","","",242,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",242,null],[11,"as_raw_c_in","","",242,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",243,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",243,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",243,null],[11,"into_raw","","",243,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",243,null],[11,"as_raw_c_in","","",243,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",261,null],[0,"text_input","wayland_protocols::unstable","Text input protocol",null,null],[0,"v1","wayland_protocols::unstable::text_input","",null,null],[0,"client","wayland_protocols::unstable::text_input::v1","Client-side API of this protocol",null,null],[0,"zwp_text_input_v1","wayland_protocols::unstable::text_input::v1::client","text input",null,null],[3,"ZwpTextInputV1","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","",null,null],[4,"ContentHint","","content hint",null,null],[13,"None","","no special behaviour",262,null],[13,"Default","","auto completion, correction and capitalization",262,null],[13,"Password","","hidden and sensitive text",262,null],[13,"AutoCompletion","","suggest word completions",262,null],[13,"AutoCorrection","","suggest word corrections",262,null],[13,"AutoCapitalization","","switch to uppercase letters at the start of a sentence",262,null],[13,"Lowercase","","prefer lowercase letters",262,null],[13,"Uppercase","","prefer uppercase letters",262,null],[13,"Titlecase","","prefer casing for titles and headings (can be language dependent)",262,null],[13,"HiddenText","","characters should be hidden",262,null],[13,"SensitiveData","","typed text should not be stored",262,null],[13,"Latin","","just latin characters should be entered",262,null],[13,"Multiline","","the text input is multiline",262,null],[4,"ContentPurpose","","content purpose",null,null],[13,"Normal","","default input, allowing all characters",263,null],[13,"Alpha","","allow only alphabetic characters",263,null],[13,"Digits","","allow only digits",263,null],[13,"Number","","input a number (including decimal separator and sign)",263,null],[13,"Phone","","input a phone number",263,null],[13,"Url","","input an URL",263,null],[13,"Email","","input an email address",263,null],[13,"Name","","input a name of a person",263,null],[13,"Password","","input a password (combine with password or sensitive_data hint)",263,null],[13,"Date","","input a date",263,null],[13,"Time","","input a time",263,null],[13,"Datetime","","input a date and time",263,null],[13,"Terminal","","input for a terminal",263,null],[4,"PreeditStyle","","",null,null],[13,"Default","","default style for composing text",264,null],[13,"None","","style should be the same as in non-composing text",264,null],[13,"Active","","",264,null],[13,"Inactive","","",264,null],[13,"Highlight","","",264,null],[13,"Underline","","",264,null],[13,"Selection","","",264,null],[13,"Incorrect","","",264,null],[4,"TextDirection","","",null,null],[13,"Auto","","automatic text direction based on text and language",265,null],[13,"Ltr","","left-to-right",265,null],[13,"Rtl","","right-to-left",265,null],[4,"Request","","",null,null],[13,"Activate","","request activation",266,null],[12,"seat","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1::Request","",266,null],[12,"surface","","",266,null],[13,"Deactivate","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","request deactivation",266,null],[12,"seat","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1::Request","",266,null],[13,"ShowInputPanel","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","show input panels",266,null],[13,"HideInputPanel","","hide input panels",266,null],[13,"Reset","","reset",266,null],[13,"SetSurroundingText","","sets the surrounding text",266,null],[12,"text","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1::Request","",266,null],[12,"cursor","","",266,null],[12,"anchor","","",266,null],[13,"SetContentType","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","set content purpose and hint",266,null],[12,"hint","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1::Request","",266,null],[12,"purpose","","",266,null],[13,"SetCursorRectangle","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","",266,null],[12,"x","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1::Request","",266,null],[12,"y","","",266,null],[12,"width","","",266,null],[12,"height","","",266,null],[13,"SetPreferredLanguage","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","sets preferred language",266,null],[12,"language","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1::Request","",266,null],[13,"CommitState","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","",266,null],[12,"serial","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1::Request","",266,null],[13,"InvokeAction","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","",266,null],[12,"button","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1::Request","",266,null],[12,"index","","",266,null],[4,"Event","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","",null,null],[13,"Enter","","enter event",267,null],[12,"surface","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1::Event","",267,null],[13,"Leave","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","leave event",267,null],[13,"ModifiersMap","","modifiers map",267,null],[12,"map","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1::Event","",267,null],[13,"InputPanelState","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","state of the input panel",267,null],[12,"state","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1::Event","",267,null],[13,"PreeditString","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","pre-edit",267,null],[12,"serial","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1::Event","",267,null],[12,"text","","",267,null],[12,"commit","","",267,null],[13,"PreeditStyling","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","pre-edit styling",267,null],[12,"index","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1::Event","",267,null],[12,"length","","",267,null],[12,"style","","",267,null],[13,"PreeditCursor","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","pre-edit cursor",267,null],[12,"index","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1::Event","",267,null],[13,"CommitString","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","commit",267,null],[12,"serial","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1::Event","",267,null],[12,"text","","",267,null],[13,"CursorPosition","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","set cursor to new position",267,null],[12,"index","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1::Event","",267,null],[12,"anchor","","",267,null],[13,"DeleteSurroundingText","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","delete surrounding text",267,null],[12,"index","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1::Event","",267,null],[12,"length","","",267,null],[13,"Keysym","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","keysym",267,null],[12,"serial","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1::Event","",267,null],[12,"time","","",267,null],[12,"sym","","",267,null],[12,"state","","",267,null],[12,"modifiers","","",267,null],[13,"Language","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","language",267,null],[12,"serial","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1::Event","",267,null],[12,"language","","",267,null],[13,"TextDirection","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","text direction",267,null],[12,"serial","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1::Event","",267,null],[12,"direction","","",267,null],[8,"RequestsTrait","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","",null,null],[10,"activate","","request activation",268,null],[10,"deactivate","","request deactivation",268,null],[10,"show_input_panel","","show input panels",268,null],[10,"hide_input_panel","","hide input panels",268,null],[10,"reset","","reset",268,null],[10,"set_surrounding_text","","sets the surrounding text",268,null],[10,"set_content_type","","set content purpose and hint",268,null],[10,"set_cursor_rectangle","","",268,null],[10,"set_preferred_language","","sets preferred language",268,null],[10,"commit_state","","",268,null],[10,"invoke_action","","",268,null],[0,"zwp_text_input_manager_v1","wayland_protocols::unstable::text_input::v1::client","text input manager",null,null],[3,"ZwpTextInputManagerV1","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_manager_v1","",null,null],[4,"Request","","",null,null],[13,"CreateTextInput","","create text input",269,null],[12,"id","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_manager_v1::Request","",269,null],[4,"Event","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_manager_v1","",null,null],[8,"RequestsTrait","","",null,null],[10,"create_text_input","","create text input",270,{"i":[{"n":"self"},{"n":"f"}],"o":{"g":["proxy"],"n":"result"}}],[0,"server","wayland_protocols::unstable::text_input::v1","Server-side API of this protocol",null,null],[0,"zwp_text_input_v1","wayland_protocols::unstable::text_input::v1::server","text input",null,null],[3,"ZwpTextInputV1","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","",null,null],[4,"ContentHint","","content hint",null,null],[13,"None","","no special behaviour",271,null],[13,"Default","","auto completion, correction and capitalization",271,null],[13,"Password","","hidden and sensitive text",271,null],[13,"AutoCompletion","","suggest word completions",271,null],[13,"AutoCorrection","","suggest word corrections",271,null],[13,"AutoCapitalization","","switch to uppercase letters at the start of a sentence",271,null],[13,"Lowercase","","prefer lowercase letters",271,null],[13,"Uppercase","","prefer uppercase letters",271,null],[13,"Titlecase","","prefer casing for titles and headings (can be language dependent)",271,null],[13,"HiddenText","","characters should be hidden",271,null],[13,"SensitiveData","","typed text should not be stored",271,null],[13,"Latin","","just latin characters should be entered",271,null],[13,"Multiline","","the text input is multiline",271,null],[4,"ContentPurpose","","content purpose",null,null],[13,"Normal","","default input, allowing all characters",272,null],[13,"Alpha","","allow only alphabetic characters",272,null],[13,"Digits","","allow only digits",272,null],[13,"Number","","input a number (including decimal separator and sign)",272,null],[13,"Phone","","input a phone number",272,null],[13,"Url","","input an URL",272,null],[13,"Email","","input an email address",272,null],[13,"Name","","input a name of a person",272,null],[13,"Password","","input a password (combine with password or sensitive_data hint)",272,null],[13,"Date","","input a date",272,null],[13,"Time","","input a time",272,null],[13,"Datetime","","input a date and time",272,null],[13,"Terminal","","input for a terminal",272,null],[4,"PreeditStyle","","",null,null],[13,"Default","","default style for composing text",273,null],[13,"None","","style should be the same as in non-composing text",273,null],[13,"Active","","",273,null],[13,"Inactive","","",273,null],[13,"Highlight","","",273,null],[13,"Underline","","",273,null],[13,"Selection","","",273,null],[13,"Incorrect","","",273,null],[4,"TextDirection","","",null,null],[13,"Auto","","automatic text direction based on text and language",274,null],[13,"Ltr","","left-to-right",274,null],[13,"Rtl","","right-to-left",274,null],[4,"Request","","",null,null],[13,"Activate","","request activation",275,null],[12,"seat","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1::Request","",275,null],[12,"surface","","",275,null],[13,"Deactivate","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","request deactivation",275,null],[12,"seat","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1::Request","",275,null],[13,"ShowInputPanel","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","show input panels",275,null],[13,"HideInputPanel","","hide input panels",275,null],[13,"Reset","","reset",275,null],[13,"SetSurroundingText","","sets the surrounding text",275,null],[12,"text","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1::Request","",275,null],[12,"cursor","","",275,null],[12,"anchor","","",275,null],[13,"SetContentType","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","set content purpose and hint",275,null],[12,"hint","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1::Request","",275,null],[12,"purpose","","",275,null],[13,"SetCursorRectangle","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","",275,null],[12,"x","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1::Request","",275,null],[12,"y","","",275,null],[12,"width","","",275,null],[12,"height","","",275,null],[13,"SetPreferredLanguage","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","sets preferred language",275,null],[12,"language","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1::Request","",275,null],[13,"CommitState","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","",275,null],[12,"serial","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1::Request","",275,null],[13,"InvokeAction","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","",275,null],[12,"button","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1::Request","",275,null],[12,"index","","",275,null],[4,"Event","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","",null,null],[13,"Enter","","enter event",276,null],[12,"surface","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1::Event","",276,null],[13,"Leave","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","leave event",276,null],[13,"ModifiersMap","","modifiers map",276,null],[12,"map","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1::Event","",276,null],[13,"InputPanelState","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","state of the input panel",276,null],[12,"state","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1::Event","",276,null],[13,"PreeditString","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","pre-edit",276,null],[12,"serial","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1::Event","",276,null],[12,"text","","",276,null],[12,"commit","","",276,null],[13,"PreeditStyling","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","pre-edit styling",276,null],[12,"index","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1::Event","",276,null],[12,"length","","",276,null],[12,"style","","",276,null],[13,"PreeditCursor","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","pre-edit cursor",276,null],[12,"index","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1::Event","",276,null],[13,"CommitString","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","commit",276,null],[12,"serial","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1::Event","",276,null],[12,"text","","",276,null],[13,"CursorPosition","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","set cursor to new position",276,null],[12,"index","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1::Event","",276,null],[12,"anchor","","",276,null],[13,"DeleteSurroundingText","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","delete surrounding text",276,null],[12,"index","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1::Event","",276,null],[12,"length","","",276,null],[13,"Keysym","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","keysym",276,null],[12,"serial","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1::Event","",276,null],[12,"time","","",276,null],[12,"sym","","",276,null],[12,"state","","",276,null],[12,"modifiers","","",276,null],[13,"Language","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","language",276,null],[12,"serial","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1::Event","",276,null],[12,"language","","",276,null],[13,"TextDirection","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","text direction",276,null],[12,"serial","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1::Event","",276,null],[12,"direction","","",276,null],[0,"zwp_text_input_manager_v1","wayland_protocols::unstable::text_input::v1::server","text input manager",null,null],[3,"ZwpTextInputManagerV1","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_manager_v1","",null,null],[4,"Request","","",null,null],[13,"CreateTextInput","","create text input",277,null],[12,"id","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_manager_v1::Request","",277,null],[4,"Event","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_manager_v1","",null,null],[0,"c_interfaces","wayland_protocols::unstable::text_input::v1","C interfaces for this protocol",null,null],[7,"wl_seat_interface","wayland_protocols::unstable::text_input::v1::c_interfaces","",null,null],[7,"wl_surface_interface","","",null,null],[7,"zwp_text_input_v1_requests","","",null,null],[7,"zwp_text_input_v1_events","","",null,null],[7,"zwp_text_input_v1_interface","","",null,null],[7,"zwp_text_input_manager_v1_requests","","",null,null],[7,"zwp_text_input_manager_v1_interface","","",null,null],[11,"clone","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_v1","",262,{"i":[{"n":"self"}],"o":{"n":"contenthint"}}],[11,"fmt","","",262,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",262,{"i":[{"n":"self"},{"n":"contenthint"}],"o":{"n":"bool"}}],[11,"from_raw","","",262,{"i":[{"n":"u32"}],"o":{"g":["contenthint"],"n":"option"}}],[11,"to_raw","","",262,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"clone","","",263,{"i":[{"n":"self"}],"o":{"n":"contentpurpose"}}],[11,"fmt","","",263,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",263,{"i":[{"n":"self"},{"n":"contentpurpose"}],"o":{"n":"bool"}}],[11,"from_raw","","",263,{"i":[{"n":"u32"}],"o":{"g":["contentpurpose"],"n":"option"}}],[11,"to_raw","","",263,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"clone","","",264,{"i":[{"n":"self"}],"o":{"n":"preeditstyle"}}],[11,"fmt","","",264,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",264,{"i":[{"n":"self"},{"n":"preeditstyle"}],"o":{"n":"bool"}}],[11,"from_raw","","",264,{"i":[{"n":"u32"}],"o":{"g":["preeditstyle"],"n":"option"}}],[11,"to_raw","","",264,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"clone","","",265,{"i":[{"n":"self"}],"o":{"n":"textdirection"}}],[11,"fmt","","",265,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",265,{"i":[{"n":"self"},{"n":"textdirection"}],"o":{"n":"bool"}}],[11,"from_raw","","",265,{"i":[{"n":"u32"}],"o":{"g":["textdirection"],"n":"option"}}],[11,"to_raw","","",265,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"is_destructor","","",266,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",266,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",266,null],[11,"into_raw","","",266,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",266,null],[11,"as_raw_c_in","","",266,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",267,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",267,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",267,null],[11,"into_raw","","",267,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",267,null],[11,"as_raw_c_in","","",267,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",278,null],[11,"is_destructor","wayland_protocols::unstable::text_input::v1::client::zwp_text_input_manager_v1","",269,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",269,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",269,null],[11,"into_raw","","",269,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",269,null],[11,"as_raw_c_in","","",269,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",279,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",279,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",279,null],[11,"into_raw","","",279,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",279,null],[11,"as_raw_c_in","","",279,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",280,null],[11,"clone","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_v1","",271,{"i":[{"n":"self"}],"o":{"n":"contenthint"}}],[11,"fmt","","",271,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",271,{"i":[{"n":"self"},{"n":"contenthint"}],"o":{"n":"bool"}}],[11,"from_raw","","",271,{"i":[{"n":"u32"}],"o":{"g":["contenthint"],"n":"option"}}],[11,"to_raw","","",271,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"clone","","",272,{"i":[{"n":"self"}],"o":{"n":"contentpurpose"}}],[11,"fmt","","",272,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",272,{"i":[{"n":"self"},{"n":"contentpurpose"}],"o":{"n":"bool"}}],[11,"from_raw","","",272,{"i":[{"n":"u32"}],"o":{"g":["contentpurpose"],"n":"option"}}],[11,"to_raw","","",272,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"clone","","",273,{"i":[{"n":"self"}],"o":{"n":"preeditstyle"}}],[11,"fmt","","",273,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",273,{"i":[{"n":"self"},{"n":"preeditstyle"}],"o":{"n":"bool"}}],[11,"from_raw","","",273,{"i":[{"n":"u32"}],"o":{"g":["preeditstyle"],"n":"option"}}],[11,"to_raw","","",273,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"clone","","",274,{"i":[{"n":"self"}],"o":{"n":"textdirection"}}],[11,"fmt","","",274,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",274,{"i":[{"n":"self"},{"n":"textdirection"}],"o":{"n":"bool"}}],[11,"from_raw","","",274,{"i":[{"n":"u32"}],"o":{"g":["textdirection"],"n":"option"}}],[11,"to_raw","","",274,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"is_destructor","","",275,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",275,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",275,null],[11,"into_raw","","",275,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",275,null],[11,"as_raw_c_in","","",275,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",276,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",276,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",276,null],[11,"into_raw","","",276,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",276,null],[11,"as_raw_c_in","","",276,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",281,null],[11,"is_destructor","wayland_protocols::unstable::text_input::v1::server::zwp_text_input_manager_v1","",277,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",277,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",277,null],[11,"into_raw","","",277,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",277,null],[11,"as_raw_c_in","","",277,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",282,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",282,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",282,null],[11,"into_raw","","",282,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",282,null],[11,"as_raw_c_in","","",282,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",283,null],[0,"xdg_decoration","wayland_protocols::unstable","This interface allows a compositor to announce support for server-side decorations. A window decoration is a set of window controls as deemed appropriate by the party managing them, such as user interface components used to move, resize and change a window's state. A client can use this protocol to request being decorated by a supporting compositor. If compositor and client do not negotiate the use of a server-side decoration using this protocol, clients continue to self-decorate as they see fit.",null,null],[0,"v1","wayland_protocols::unstable::xdg_decoration","",null,null],[0,"client","wayland_protocols::unstable::xdg_decoration::v1","Client-side API of this protocol",null,null],[0,"zxdg_decoration_manager_v1","wayland_protocols::unstable::xdg_decoration::v1::client","window decoration manager",null,null],[3,"ZxdgDecorationManagerV1","wayland_protocols::unstable::xdg_decoration::v1::client::zxdg_decoration_manager_v1","",null,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the decoration manager object",284,null],[13,"GetToplevelDecoration","","create a new toplevel decoration object",284,null],[12,"id","wayland_protocols::unstable::xdg_decoration::v1::client::zxdg_decoration_manager_v1::Request","",284,null],[12,"toplevel","","",284,null],[4,"Event","wayland_protocols::unstable::xdg_decoration::v1::client::zxdg_decoration_manager_v1","",null,null],[8,"RequestsTrait","","",null,null],[10,"destroy","","destroy the decoration manager object",285,null],[10,"get_toplevel_decoration","","create a new toplevel decoration object",285,{"i":[{"n":"self"},{"n":"proxy"},{"n":"f"}],"o":{"g":["proxy"],"n":"result"}}],[0,"zxdg_toplevel_decoration_v1","wayland_protocols::unstable::xdg_decoration::v1::client","decoration object for a toplevel surface",null,null],[3,"ZxdgToplevelDecorationV1","wayland_protocols::unstable::xdg_decoration::v1::client::zxdg_toplevel_decoration_v1","",null,null],[4,"Error","","",null,null],[13,"UnconfiguredBuffer","","xdg_toplevel has a buffer attached before configure",286,null],[13,"AlreadyConstructed","","xdg_toplevel already has a decoration object",286,null],[13,"Orphaned","","xdg_toplevel destroyed before the decoration object",286,null],[4,"Mode","","window decoration modes",null,null],[13,"ClientSide","","no server-side window decoration",287,null],[13,"ServerSide","","server-side window decoration",287,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the decoration object",288,null],[13,"SetMode","","set the decoration mode",288,null],[12,"mode","wayland_protocols::unstable::xdg_decoration::v1::client::zxdg_toplevel_decoration_v1::Request","",288,null],[13,"UnsetMode","wayland_protocols::unstable::xdg_decoration::v1::client::zxdg_toplevel_decoration_v1","unset the decoration mode",288,null],[4,"Event","","",null,null],[13,"Configure","","suggest a surface change",289,null],[12,"mode","wayland_protocols::unstable::xdg_decoration::v1::client::zxdg_toplevel_decoration_v1::Event","",289,null],[8,"RequestsTrait","wayland_protocols::unstable::xdg_decoration::v1::client::zxdg_toplevel_decoration_v1","",null,null],[10,"destroy","","destroy the decoration object",290,null],[10,"set_mode","","set the decoration mode",290,null],[10,"unset_mode","","unset the decoration mode",290,null],[0,"server","wayland_protocols::unstable::xdg_decoration::v1","Server-side API of this protocol",null,null],[0,"zxdg_decoration_manager_v1","wayland_protocols::unstable::xdg_decoration::v1::server","window decoration manager",null,null],[3,"ZxdgDecorationManagerV1","wayland_protocols::unstable::xdg_decoration::v1::server::zxdg_decoration_manager_v1","",null,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the decoration manager object",291,null],[13,"GetToplevelDecoration","","create a new toplevel decoration object",291,null],[12,"id","wayland_protocols::unstable::xdg_decoration::v1::server::zxdg_decoration_manager_v1::Request","",291,null],[12,"toplevel","","",291,null],[4,"Event","wayland_protocols::unstable::xdg_decoration::v1::server::zxdg_decoration_manager_v1","",null,null],[0,"zxdg_toplevel_decoration_v1","wayland_protocols::unstable::xdg_decoration::v1::server","decoration object for a toplevel surface",null,null],[3,"ZxdgToplevelDecorationV1","wayland_protocols::unstable::xdg_decoration::v1::server::zxdg_toplevel_decoration_v1","",null,null],[4,"Error","","",null,null],[13,"UnconfiguredBuffer","","xdg_toplevel has a buffer attached before configure",292,null],[13,"AlreadyConstructed","","xdg_toplevel already has a decoration object",292,null],[13,"Orphaned","","xdg_toplevel destroyed before the decoration object",292,null],[4,"Mode","","window decoration modes",null,null],[13,"ClientSide","","no server-side window decoration",293,null],[13,"ServerSide","","server-side window decoration",293,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the decoration object",294,null],[13,"SetMode","","set the decoration mode",294,null],[12,"mode","wayland_protocols::unstable::xdg_decoration::v1::server::zxdg_toplevel_decoration_v1::Request","",294,null],[13,"UnsetMode","wayland_protocols::unstable::xdg_decoration::v1::server::zxdg_toplevel_decoration_v1","unset the decoration mode",294,null],[4,"Event","","",null,null],[13,"Configure","","suggest a surface change",295,null],[12,"mode","wayland_protocols::unstable::xdg_decoration::v1::server::zxdg_toplevel_decoration_v1::Event","",295,null],[0,"c_interfaces","wayland_protocols::unstable::xdg_decoration::v1","C interfaces for this protocol",null,null],[7,"zxdg_decoration_manager_v1_requests","wayland_protocols::unstable::xdg_decoration::v1::c_interfaces","",null,null],[7,"zxdg_decoration_manager_v1_interface","","",null,null],[7,"zxdg_toplevel_decoration_v1_requests","","",null,null],[7,"zxdg_toplevel_decoration_v1_events","","",null,null],[7,"zxdg_toplevel_decoration_v1_interface","","",null,null],[11,"is_destructor","wayland_protocols::unstable::xdg_decoration::v1::client::zxdg_decoration_manager_v1","",284,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",284,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",284,null],[11,"into_raw","","",284,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",284,null],[11,"as_raw_c_in","","",284,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",296,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",296,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",296,null],[11,"into_raw","","",296,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",296,null],[11,"as_raw_c_in","","",296,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",297,null],[11,"clone","wayland_protocols::unstable::xdg_decoration::v1::client::zxdg_toplevel_decoration_v1","",286,{"i":[{"n":"self"}],"o":{"n":"error"}}],[11,"fmt","","",286,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",286,{"i":[{"n":"self"},{"n":"error"}],"o":{"n":"bool"}}],[11,"from_raw","","",286,{"i":[{"n":"u32"}],"o":{"g":["error"],"n":"option"}}],[11,"to_raw","","",286,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"clone","","",287,{"i":[{"n":"self"}],"o":{"n":"mode"}}],[11,"fmt","","",287,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",287,{"i":[{"n":"self"},{"n":"mode"}],"o":{"n":"bool"}}],[11,"from_raw","","",287,{"i":[{"n":"u32"}],"o":{"g":["mode"],"n":"option"}}],[11,"to_raw","","",287,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"is_destructor","","",288,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",288,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",288,null],[11,"into_raw","","",288,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",288,null],[11,"as_raw_c_in","","",288,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",289,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",289,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",289,null],[11,"into_raw","","",289,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",289,null],[11,"as_raw_c_in","","",289,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",298,null],[11,"is_destructor","wayland_protocols::unstable::xdg_decoration::v1::server::zxdg_decoration_manager_v1","",291,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",291,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",291,null],[11,"into_raw","","",291,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",291,null],[11,"as_raw_c_in","","",291,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",299,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",299,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",299,null],[11,"into_raw","","",299,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",299,null],[11,"as_raw_c_in","","",299,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",300,null],[11,"clone","wayland_protocols::unstable::xdg_decoration::v1::server::zxdg_toplevel_decoration_v1","",292,{"i":[{"n":"self"}],"o":{"n":"error"}}],[11,"fmt","","",292,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",292,{"i":[{"n":"self"},{"n":"error"}],"o":{"n":"bool"}}],[11,"from_raw","","",292,{"i":[{"n":"u32"}],"o":{"g":["error"],"n":"option"}}],[11,"to_raw","","",292,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"clone","","",293,{"i":[{"n":"self"}],"o":{"n":"mode"}}],[11,"fmt","","",293,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",293,{"i":[{"n":"self"},{"n":"mode"}],"o":{"n":"bool"}}],[11,"from_raw","","",293,{"i":[{"n":"u32"}],"o":{"g":["mode"],"n":"option"}}],[11,"to_raw","","",293,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"is_destructor","","",294,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",294,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",294,null],[11,"into_raw","","",294,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",294,null],[11,"as_raw_c_in","","",294,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",295,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",295,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",295,null],[11,"into_raw","","",295,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",295,null],[11,"as_raw_c_in","","",295,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",301,null],[0,"xdg_foreign","wayland_protocols::unstable","Protocol for exporting xdg surface handles",null,null],[0,"v1","wayland_protocols::unstable::xdg_foreign","",null,null],[0,"client","wayland_protocols::unstable::xdg_foreign::v1","Client-side API of this protocol",null,null],[0,"zxdg_exporter_v1","wayland_protocols::unstable::xdg_foreign::v1::client","interface for exporting surfaces",null,null],[3,"ZxdgExporterV1","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_exporter_v1","",null,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the xdg_exporter object",302,null],[13,"Export","","export a surface",302,null],[12,"id","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_exporter_v1::Request","",302,null],[12,"surface","","",302,null],[4,"Event","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_exporter_v1","",null,null],[8,"RequestsTrait","","",null,null],[10,"destroy","","destroy the xdg_exporter object",303,null],[10,"export","","export a surface",303,{"i":[{"n":"self"},{"n":"proxy"},{"n":"f"}],"o":{"g":["proxy"],"n":"result"}}],[0,"zxdg_importer_v1","wayland_protocols::unstable::xdg_foreign::v1::client","interface for importing surfaces",null,null],[3,"ZxdgImporterV1","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_importer_v1","",null,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the xdg_importer object",304,null],[13,"Import","","import a surface",304,null],[12,"id","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_importer_v1::Request","",304,null],[12,"handle","","",304,null],[4,"Event","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_importer_v1","",null,null],[8,"RequestsTrait","","",null,null],[10,"destroy","","destroy the xdg_importer object",305,null],[10,"import","","import a surface",305,{"i":[{"n":"self"},{"n":"string"},{"n":"f"}],"o":{"g":["proxy"],"n":"result"}}],[0,"zxdg_exported_v1","wayland_protocols::unstable::xdg_foreign::v1::client","an exported surface handle",null,null],[3,"ZxdgExportedV1","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_exported_v1","",null,null],[4,"Request","","",null,null],[13,"Destroy","","unexport the exported surface",306,null],[4,"Event","","",null,null],[13,"Handle","","the exported surface handle",307,null],[12,"handle","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_exported_v1::Event","",307,null],[8,"RequestsTrait","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_exported_v1","",null,null],[10,"destroy","","unexport the exported surface",308,null],[0,"zxdg_imported_v1","wayland_protocols::unstable::xdg_foreign::v1::client","an imported surface handle",null,null],[3,"ZxdgImportedV1","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_imported_v1","",null,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the xdg_imported object",309,null],[13,"SetParentOf","","set as the parent of some surface",309,null],[12,"surface","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_imported_v1::Request","",309,null],[4,"Event","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_imported_v1","",null,null],[13,"Destroyed","","the imported surface handle has been destroyed",310,null],[8,"RequestsTrait","","",null,null],[10,"destroy","","destroy the xdg_imported object",311,null],[10,"set_parent_of","","set as the parent of some surface",311,null],[0,"server","wayland_protocols::unstable::xdg_foreign::v1","Server-side API of this protocol",null,null],[0,"zxdg_exporter_v1","wayland_protocols::unstable::xdg_foreign::v1::server","interface for exporting surfaces",null,null],[3,"ZxdgExporterV1","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_exporter_v1","",null,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the xdg_exporter object",312,null],[13,"Export","","export a surface",312,null],[12,"id","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_exporter_v1::Request","",312,null],[12,"surface","","",312,null],[4,"Event","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_exporter_v1","",null,null],[0,"zxdg_importer_v1","wayland_protocols::unstable::xdg_foreign::v1::server","interface for importing surfaces",null,null],[3,"ZxdgImporterV1","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_importer_v1","",null,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the xdg_importer object",313,null],[13,"Import","","import a surface",313,null],[12,"id","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_importer_v1::Request","",313,null],[12,"handle","","",313,null],[4,"Event","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_importer_v1","",null,null],[0,"zxdg_exported_v1","wayland_protocols::unstable::xdg_foreign::v1::server","an exported surface handle",null,null],[3,"ZxdgExportedV1","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_exported_v1","",null,null],[4,"Request","","",null,null],[13,"Destroy","","unexport the exported surface",314,null],[4,"Event","","",null,null],[13,"Handle","","the exported surface handle",315,null],[12,"handle","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_exported_v1::Event","",315,null],[0,"zxdg_imported_v1","wayland_protocols::unstable::xdg_foreign::v1::server","an imported surface handle",null,null],[3,"ZxdgImportedV1","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_imported_v1","",null,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the xdg_imported object",316,null],[13,"SetParentOf","","set as the parent of some surface",316,null],[12,"surface","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_imported_v1::Request","",316,null],[4,"Event","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_imported_v1","",null,null],[13,"Destroyed","","the imported surface handle has been destroyed",317,null],[0,"c_interfaces","wayland_protocols::unstable::xdg_foreign::v1","C interfaces for this protocol",null,null],[7,"wl_surface_interface","wayland_protocols::unstable::xdg_foreign::v1::c_interfaces","",null,null],[7,"zxdg_exporter_v1_requests","","",null,null],[7,"zxdg_exporter_v1_interface","","",null,null],[7,"zxdg_importer_v1_requests","","",null,null],[7,"zxdg_importer_v1_interface","","",null,null],[7,"zxdg_exported_v1_requests","","",null,null],[7,"zxdg_exported_v1_events","","",null,null],[7,"zxdg_exported_v1_interface","","",null,null],[7,"zxdg_imported_v1_requests","","",null,null],[7,"zxdg_imported_v1_events","","",null,null],[7,"zxdg_imported_v1_interface","","",null,null],[11,"is_destructor","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_exporter_v1","",302,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",302,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",302,null],[11,"into_raw","","",302,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",302,null],[11,"as_raw_c_in","","",302,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",318,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",318,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",318,null],[11,"into_raw","","",318,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",318,null],[11,"as_raw_c_in","","",318,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",319,null],[11,"is_destructor","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_importer_v1","",304,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",304,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",304,null],[11,"into_raw","","",304,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",304,null],[11,"as_raw_c_in","","",304,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",320,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",320,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",320,null],[11,"into_raw","","",320,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",320,null],[11,"as_raw_c_in","","",320,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",321,null],[11,"is_destructor","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_exported_v1","",306,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",306,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",306,null],[11,"into_raw","","",306,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",306,null],[11,"as_raw_c_in","","",306,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",307,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",307,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",307,null],[11,"into_raw","","",307,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",307,null],[11,"as_raw_c_in","","",307,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",322,null],[11,"is_destructor","wayland_protocols::unstable::xdg_foreign::v1::client::zxdg_imported_v1","",309,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",309,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",309,null],[11,"into_raw","","",309,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",309,null],[11,"as_raw_c_in","","",309,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",310,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",310,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",310,null],[11,"into_raw","","",310,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",310,null],[11,"as_raw_c_in","","",310,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",323,null],[11,"is_destructor","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_exporter_v1","",312,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",312,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",312,null],[11,"into_raw","","",312,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",312,null],[11,"as_raw_c_in","","",312,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",324,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",324,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",324,null],[11,"into_raw","","",324,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",324,null],[11,"as_raw_c_in","","",324,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",325,null],[11,"is_destructor","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_importer_v1","",313,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",313,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",313,null],[11,"into_raw","","",313,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",313,null],[11,"as_raw_c_in","","",313,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",326,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",326,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",326,null],[11,"into_raw","","",326,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",326,null],[11,"as_raw_c_in","","",326,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",327,null],[11,"is_destructor","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_exported_v1","",314,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",314,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",314,null],[11,"into_raw","","",314,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",314,null],[11,"as_raw_c_in","","",314,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",315,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",315,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",315,null],[11,"into_raw","","",315,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",315,null],[11,"as_raw_c_in","","",315,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",328,null],[11,"is_destructor","wayland_protocols::unstable::xdg_foreign::v1::server::zxdg_imported_v1","",316,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",316,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",316,null],[11,"into_raw","","",316,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",316,null],[11,"as_raw_c_in","","",316,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",317,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",317,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",317,null],[11,"into_raw","","",317,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",317,null],[11,"as_raw_c_in","","",317,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",329,null],[0,"v2","wayland_protocols::unstable::xdg_foreign","",null,null],[0,"client","wayland_protocols::unstable::xdg_foreign::v2","Client-side API of this protocol",null,null],[0,"zxdg_exporter_v2","wayland_protocols::unstable::xdg_foreign::v2::client","interface for exporting surfaces",null,null],[3,"ZxdgExporterV2","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_exporter_v2","",null,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the xdg_exporter object",330,null],[13,"ExportToplevel","","export a toplevel surface",330,null],[12,"id","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_exporter_v2::Request","",330,null],[12,"surface","","",330,null],[4,"Event","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_exporter_v2","",null,null],[8,"RequestsTrait","","",null,null],[10,"destroy","","destroy the xdg_exporter object",331,null],[10,"export_toplevel","","export a toplevel surface",331,{"i":[{"n":"self"},{"n":"proxy"},{"n":"f"}],"o":{"g":["proxy"],"n":"result"}}],[0,"zxdg_importer_v2","wayland_protocols::unstable::xdg_foreign::v2::client","interface for importing surfaces",null,null],[3,"ZxdgImporterV2","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_importer_v2","",null,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the xdg_importer object",332,null],[13,"ImportToplevel","","import a toplevel surface",332,null],[12,"id","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_importer_v2::Request","",332,null],[12,"handle","","",332,null],[4,"Event","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_importer_v2","",null,null],[8,"RequestsTrait","","",null,null],[10,"destroy","","destroy the xdg_importer object",333,null],[10,"import_toplevel","","import a toplevel surface",333,{"i":[{"n":"self"},{"n":"string"},{"n":"f"}],"o":{"g":["proxy"],"n":"result"}}],[0,"zxdg_exported_v2","wayland_protocols::unstable::xdg_foreign::v2::client","an exported surface handle",null,null],[3,"ZxdgExportedV2","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_exported_v2","",null,null],[4,"Request","","",null,null],[13,"Destroy","","unexport the exported surface",334,null],[4,"Event","","",null,null],[13,"Handle","","the exported surface handle",335,null],[12,"handle","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_exported_v2::Event","",335,null],[8,"RequestsTrait","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_exported_v2","",null,null],[10,"destroy","","unexport the exported surface",336,null],[0,"zxdg_imported_v2","wayland_protocols::unstable::xdg_foreign::v2::client","an imported surface handle",null,null],[3,"ZxdgImportedV2","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_imported_v2","",null,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the xdg_imported object",337,null],[13,"SetParentOf","","set as the parent of some surface",337,null],[12,"surface","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_imported_v2::Request","",337,null],[4,"Event","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_imported_v2","",null,null],[13,"Destroyed","","the imported surface handle has been destroyed",338,null],[8,"RequestsTrait","","",null,null],[10,"destroy","","destroy the xdg_imported object",339,null],[10,"set_parent_of","","set as the parent of some surface",339,null],[0,"server","wayland_protocols::unstable::xdg_foreign::v2","Server-side API of this protocol",null,null],[0,"zxdg_exporter_v2","wayland_protocols::unstable::xdg_foreign::v2::server","interface for exporting surfaces",null,null],[3,"ZxdgExporterV2","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_exporter_v2","",null,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the xdg_exporter object",340,null],[13,"ExportToplevel","","export a toplevel surface",340,null],[12,"id","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_exporter_v2::Request","",340,null],[12,"surface","","",340,null],[4,"Event","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_exporter_v2","",null,null],[0,"zxdg_importer_v2","wayland_protocols::unstable::xdg_foreign::v2::server","interface for importing surfaces",null,null],[3,"ZxdgImporterV2","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_importer_v2","",null,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the xdg_importer object",341,null],[13,"ImportToplevel","","import a toplevel surface",341,null],[12,"id","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_importer_v2::Request","",341,null],[12,"handle","","",341,null],[4,"Event","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_importer_v2","",null,null],[0,"zxdg_exported_v2","wayland_protocols::unstable::xdg_foreign::v2::server","an exported surface handle",null,null],[3,"ZxdgExportedV2","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_exported_v2","",null,null],[4,"Request","","",null,null],[13,"Destroy","","unexport the exported surface",342,null],[4,"Event","","",null,null],[13,"Handle","","the exported surface handle",343,null],[12,"handle","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_exported_v2::Event","",343,null],[0,"zxdg_imported_v2","wayland_protocols::unstable::xdg_foreign::v2::server","an imported surface handle",null,null],[3,"ZxdgImportedV2","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_imported_v2","",null,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the xdg_imported object",344,null],[13,"SetParentOf","","set as the parent of some surface",344,null],[12,"surface","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_imported_v2::Request","",344,null],[4,"Event","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_imported_v2","",null,null],[13,"Destroyed","","the imported surface handle has been destroyed",345,null],[0,"c_interfaces","wayland_protocols::unstable::xdg_foreign::v2","C interfaces for this protocol",null,null],[7,"wl_surface_interface","wayland_protocols::unstable::xdg_foreign::v2::c_interfaces","",null,null],[7,"zxdg_exporter_v2_requests","","",null,null],[7,"zxdg_exporter_v2_interface","","",null,null],[7,"zxdg_importer_v2_requests","","",null,null],[7,"zxdg_importer_v2_interface","","",null,null],[7,"zxdg_exported_v2_requests","","",null,null],[7,"zxdg_exported_v2_events","","",null,null],[7,"zxdg_exported_v2_interface","","",null,null],[7,"zxdg_imported_v2_requests","","",null,null],[7,"zxdg_imported_v2_events","","",null,null],[7,"zxdg_imported_v2_interface","","",null,null],[11,"is_destructor","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_exporter_v2","",330,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",330,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",330,null],[11,"into_raw","","",330,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",330,null],[11,"as_raw_c_in","","",330,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",346,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",346,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",346,null],[11,"into_raw","","",346,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",346,null],[11,"as_raw_c_in","","",346,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",347,null],[11,"is_destructor","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_importer_v2","",332,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",332,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",332,null],[11,"into_raw","","",332,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",332,null],[11,"as_raw_c_in","","",332,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",348,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",348,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",348,null],[11,"into_raw","","",348,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",348,null],[11,"as_raw_c_in","","",348,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",349,null],[11,"is_destructor","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_exported_v2","",334,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",334,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",334,null],[11,"into_raw","","",334,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",334,null],[11,"as_raw_c_in","","",334,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",335,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",335,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",335,null],[11,"into_raw","","",335,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",335,null],[11,"as_raw_c_in","","",335,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",350,null],[11,"is_destructor","wayland_protocols::unstable::xdg_foreign::v2::client::zxdg_imported_v2","",337,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",337,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",337,null],[11,"into_raw","","",337,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",337,null],[11,"as_raw_c_in","","",337,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",338,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",338,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",338,null],[11,"into_raw","","",338,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",338,null],[11,"as_raw_c_in","","",338,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",351,null],[11,"is_destructor","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_exporter_v2","",340,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",340,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",340,null],[11,"into_raw","","",340,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",340,null],[11,"as_raw_c_in","","",340,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",352,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",352,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",352,null],[11,"into_raw","","",352,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",352,null],[11,"as_raw_c_in","","",352,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",353,null],[11,"is_destructor","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_importer_v2","",341,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",341,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",341,null],[11,"into_raw","","",341,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",341,null],[11,"as_raw_c_in","","",341,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",354,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",354,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",354,null],[11,"into_raw","","",354,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",354,null],[11,"as_raw_c_in","","",354,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",355,null],[11,"is_destructor","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_exported_v2","",342,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",342,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",342,null],[11,"into_raw","","",342,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",342,null],[11,"as_raw_c_in","","",342,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",343,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",343,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",343,null],[11,"into_raw","","",343,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",343,null],[11,"as_raw_c_in","","",343,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",356,null],[11,"is_destructor","wayland_protocols::unstable::xdg_foreign::v2::server::zxdg_imported_v2","",344,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",344,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",344,null],[11,"into_raw","","",344,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",344,null],[11,"as_raw_c_in","","",344,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",345,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",345,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",345,null],[11,"into_raw","","",345,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",345,null],[11,"as_raw_c_in","","",345,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",357,null],[0,"xdg_output","wayland_protocols::unstable","Protocol to describe output regions",null,null],[0,"v1","wayland_protocols::unstable::xdg_output","",null,null],[0,"client","wayland_protocols::unstable::xdg_output::v1","Client-side API of this protocol",null,null],[0,"zxdg_output_manager_v1","wayland_protocols::unstable::xdg_output::v1::client","manage xdg_output objects",null,null],[3,"ZxdgOutputManagerV1","wayland_protocols::unstable::xdg_output::v1::client::zxdg_output_manager_v1","",null,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the xdg_output_manager object",358,null],[13,"GetXdgOutput","","create an xdg output from a wl_output",358,null],[12,"id","wayland_protocols::unstable::xdg_output::v1::client::zxdg_output_manager_v1::Request","",358,null],[12,"output","","",358,null],[4,"Event","wayland_protocols::unstable::xdg_output::v1::client::zxdg_output_manager_v1","",null,null],[8,"RequestsTrait","","",null,null],[10,"destroy","","destroy the xdg_output_manager object",359,null],[10,"get_xdg_output","","create an xdg output from a wl_output",359,{"i":[{"n":"self"},{"n":"proxy"},{"n":"f"}],"o":{"g":["proxy"],"n":"result"}}],[0,"zxdg_output_v1","wayland_protocols::unstable::xdg_output::v1::client","compositor logical output region",null,null],[3,"ZxdgOutputV1","wayland_protocols::unstable::xdg_output::v1::client::zxdg_output_v1","",null,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the xdg_output object",360,null],[4,"Event","","",null,null],[13,"LogicalPosition","","position of the output within the global compositor space",361,null],[12,"x","wayland_protocols::unstable::xdg_output::v1::client::zxdg_output_v1::Event","",361,null],[12,"y","","",361,null],[13,"LogicalSize","wayland_protocols::unstable::xdg_output::v1::client::zxdg_output_v1","size of the output in the global compositor space",361,null],[12,"width","wayland_protocols::unstable::xdg_output::v1::client::zxdg_output_v1::Event","",361,null],[12,"height","","",361,null],[13,"Done","wayland_protocols::unstable::xdg_output::v1::client::zxdg_output_v1","all information about the output have been sent",361,null],[13,"Name","","name of this output",361,null],[12,"name","wayland_protocols::unstable::xdg_output::v1::client::zxdg_output_v1::Event","",361,null],[13,"Description","wayland_protocols::unstable::xdg_output::v1::client::zxdg_output_v1","human-readable description of this output",361,null],[12,"description","wayland_protocols::unstable::xdg_output::v1::client::zxdg_output_v1::Event","",361,null],[8,"RequestsTrait","wayland_protocols::unstable::xdg_output::v1::client::zxdg_output_v1","",null,null],[10,"destroy","","destroy the xdg_output object",362,null],[0,"server","wayland_protocols::unstable::xdg_output::v1","Server-side API of this protocol",null,null],[0,"zxdg_output_manager_v1","wayland_protocols::unstable::xdg_output::v1::server","manage xdg_output objects",null,null],[3,"ZxdgOutputManagerV1","wayland_protocols::unstable::xdg_output::v1::server::zxdg_output_manager_v1","",null,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the xdg_output_manager object",363,null],[13,"GetXdgOutput","","create an xdg output from a wl_output",363,null],[12,"id","wayland_protocols::unstable::xdg_output::v1::server::zxdg_output_manager_v1::Request","",363,null],[12,"output","","",363,null],[4,"Event","wayland_protocols::unstable::xdg_output::v1::server::zxdg_output_manager_v1","",null,null],[0,"zxdg_output_v1","wayland_protocols::unstable::xdg_output::v1::server","compositor logical output region",null,null],[3,"ZxdgOutputV1","wayland_protocols::unstable::xdg_output::v1::server::zxdg_output_v1","",null,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the xdg_output object",364,null],[4,"Event","","",null,null],[13,"LogicalPosition","","position of the output within the global compositor space",365,null],[12,"x","wayland_protocols::unstable::xdg_output::v1::server::zxdg_output_v1::Event","",365,null],[12,"y","","",365,null],[13,"LogicalSize","wayland_protocols::unstable::xdg_output::v1::server::zxdg_output_v1","size of the output in the global compositor space",365,null],[12,"width","wayland_protocols::unstable::xdg_output::v1::server::zxdg_output_v1::Event","",365,null],[12,"height","","",365,null],[13,"Done","wayland_protocols::unstable::xdg_output::v1::server::zxdg_output_v1","all information about the output have been sent",365,null],[13,"Name","","name of this output",365,null],[12,"name","wayland_protocols::unstable::xdg_output::v1::server::zxdg_output_v1::Event","",365,null],[13,"Description","wayland_protocols::unstable::xdg_output::v1::server::zxdg_output_v1","human-readable description of this output",365,null],[12,"description","wayland_protocols::unstable::xdg_output::v1::server::zxdg_output_v1::Event","",365,null],[0,"c_interfaces","wayland_protocols::unstable::xdg_output::v1","C interfaces for this protocol",null,null],[7,"wl_output_interface","wayland_protocols::unstable::xdg_output::v1::c_interfaces","",null,null],[7,"zxdg_output_manager_v1_requests","","",null,null],[7,"zxdg_output_manager_v1_interface","","",null,null],[7,"zxdg_output_v1_requests","","",null,null],[7,"zxdg_output_v1_events","","",null,null],[7,"zxdg_output_v1_interface","","",null,null],[11,"is_destructor","wayland_protocols::unstable::xdg_output::v1::client::zxdg_output_manager_v1","",358,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",358,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",358,null],[11,"into_raw","","",358,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",358,null],[11,"as_raw_c_in","","",358,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",366,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",366,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",366,null],[11,"into_raw","","",366,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",366,null],[11,"as_raw_c_in","","",366,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",367,null],[11,"is_destructor","wayland_protocols::unstable::xdg_output::v1::client::zxdg_output_v1","",360,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",360,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",360,null],[11,"into_raw","","",360,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",360,null],[11,"as_raw_c_in","","",360,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",361,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",361,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",361,null],[11,"into_raw","","",361,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",361,null],[11,"as_raw_c_in","","",361,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",368,null],[11,"is_destructor","wayland_protocols::unstable::xdg_output::v1::server::zxdg_output_manager_v1","",363,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",363,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",363,null],[11,"into_raw","","",363,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",363,null],[11,"as_raw_c_in","","",363,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",369,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",369,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",369,null],[11,"into_raw","","",369,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",369,null],[11,"as_raw_c_in","","",369,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",370,null],[11,"is_destructor","wayland_protocols::unstable::xdg_output::v1::server::zxdg_output_v1","",364,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",364,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",364,null],[11,"into_raw","","",364,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",364,null],[11,"as_raw_c_in","","",364,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",365,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",365,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",365,null],[11,"into_raw","","",365,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",365,null],[11,"as_raw_c_in","","",365,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",371,null],[0,"xdg_shell","wayland_protocols::unstable","XDG Shell protocol",null,null],[0,"v5","wayland_protocols::unstable::xdg_shell","",null,null],[0,"client","wayland_protocols::unstable::xdg_shell::v5","Client-side API of this protocol",null,null],[0,"xdg_shell","wayland_protocols::unstable::xdg_shell::v5::client","create desktop-style surfaces",null,null],[3,"XdgShell","wayland_protocols::unstable::xdg_shell::v5::client::xdg_shell","",null,null],[4,"Version","","latest protocol version",null,null],[13,"Current","","Always the latest version",372,null],[4,"Error","","",null,null],[13,"Role","","given wl_surface has another role",373,null],[13,"DefunctSurfaces","","xdg_shell was destroyed before children",373,null],[13,"NotTheTopmostPopup","","the client tried to map or destroy a non-topmost popup",373,null],[13,"InvalidPopupParent","","the client specified an invalid popup parent surface",373,null],[4,"Request","","",null,null],[13,"Destroy","","destroy xdg_shell",374,null],[13,"UseUnstableVersion","","enable use of this unstable version",374,null],[12,"version","wayland_protocols::unstable::xdg_shell::v5::client::xdg_shell::Request","",374,null],[13,"GetXdgSurface","wayland_protocols::unstable::xdg_shell::v5::client::xdg_shell","create a shell surface from a surface",374,null],[12,"id","wayland_protocols::unstable::xdg_shell::v5::client::xdg_shell::Request","",374,null],[12,"surface","","",374,null],[13,"GetXdgPopup","wayland_protocols::unstable::xdg_shell::v5::client::xdg_shell","create a popup for a surface",374,null],[12,"id","wayland_protocols::unstable::xdg_shell::v5::client::xdg_shell::Request","",374,null],[12,"surface","","",374,null],[12,"parent","","",374,null],[12,"seat","","",374,null],[12,"serial","","",374,null],[12,"x","","",374,null],[12,"y","","",374,null],[13,"Pong","wayland_protocols::unstable::xdg_shell::v5::client::xdg_shell","respond to a ping event",374,null],[12,"serial","wayland_protocols::unstable::xdg_shell::v5::client::xdg_shell::Request","",374,null],[4,"Event","wayland_protocols::unstable::xdg_shell::v5::client::xdg_shell","",null,null],[13,"Ping","","check if the client is alive",375,null],[12,"serial","wayland_protocols::unstable::xdg_shell::v5::client::xdg_shell::Event","",375,null],[8,"RequestsTrait","wayland_protocols::unstable::xdg_shell::v5::client::xdg_shell","",null,null],[10,"destroy","","destroy xdg_shell",376,null],[10,"use_unstable_version","","enable use of this unstable version",376,null],[10,"get_xdg_surface","","create a shell surface from a surface",376,{"i":[{"n":"self"},{"n":"proxy"},{"n":"f"}],"o":{"g":["proxy"],"n":"result"}}],[10,"get_xdg_popup","","create a popup for a surface",376,{"i":[{"n":"self"},{"n":"proxy"},{"n":"proxy"},{"n":"proxy"},{"n":"u32"},{"n":"i32"},{"n":"i32"},{"n":"f"}],"o":{"g":["proxy"],"n":"result"}}],[10,"pong","","respond to a ping event",376,null],[0,"xdg_surface","wayland_protocols::unstable::xdg_shell::v5::client","A desktop window",null,null],[3,"XdgSurface","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface","",null,null],[4,"ResizeEdge","","edge values for resizing",null,null],[13,"None","","",377,null],[13,"Top","","",377,null],[13,"Bottom","","",377,null],[13,"Left","","",377,null],[13,"TopLeft","","",377,null],[13,"BottomLeft","","",377,null],[13,"Right","","",377,null],[13,"TopRight","","",377,null],[13,"BottomRight","","",377,null],[4,"State","","types of state on the surface",null,null],[13,"Maximized","","the surface is maximized",378,null],[13,"Fullscreen","","the surface is fullscreen",378,null],[13,"Resizing","","the surface is being resized",378,null],[13,"Activated","","the surface is now activated",378,null],[4,"Request","","",null,null],[13,"Destroy","","Destroy the xdg_surface",379,null],[13,"SetParent","","set the parent of this surface",379,null],[12,"parent","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface::Request","",379,null],[13,"SetTitle","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface","set surface title",379,null],[12,"title","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface::Request","",379,null],[13,"SetAppId","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface","set application ID",379,null],[12,"app_id","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface::Request","",379,null],[13,"ShowWindowMenu","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface","show the window menu",379,null],[12,"seat","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface::Request","",379,null],[12,"serial","","",379,null],[12,"x","","",379,null],[12,"y","","",379,null],[13,"Move","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface","start an interactive move",379,null],[12,"seat","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface::Request","",379,null],[12,"serial","","",379,null],[13,"Resize","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface","start an interactive resize",379,null],[12,"seat","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface::Request","",379,null],[12,"serial","","",379,null],[12,"edges","","",379,null],[13,"AckConfigure","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface","ack a configure event",379,null],[12,"serial","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface::Request","",379,null],[13,"SetWindowGeometry","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface","set the new window geometry",379,null],[12,"x","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface::Request","",379,null],[12,"y","","",379,null],[12,"width","","",379,null],[12,"height","","",379,null],[13,"SetMaximized","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface","maximize the window",379,null],[13,"UnsetMaximized","","unmaximize the window",379,null],[13,"SetFullscreen","","set the window as fullscreen on a monitor",379,null],[12,"output","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface::Request","",379,null],[13,"UnsetFullscreen","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface","",379,null],[13,"SetMinimized","","set the window as minimized",379,null],[4,"Event","","",null,null],[13,"Configure","","suggest a surface change",380,null],[12,"width","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface::Event","",380,null],[12,"height","","",380,null],[12,"states","","",380,null],[12,"serial","","",380,null],[13,"Close","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface","surface wants to be closed",380,null],[8,"RequestsTrait","","",null,null],[10,"destroy","","Destroy the xdg_surface",381,null],[10,"set_parent","","set the parent of this surface",381,null],[10,"set_title","","set surface title",381,null],[10,"set_app_id","","set application ID",381,null],[10,"show_window_menu","","show the window menu",381,null],[10,"_move","","start an interactive move",381,null],[10,"resize","","start an interactive resize",381,null],[10,"ack_configure","","ack a configure event",381,null],[10,"set_window_geometry","","set the new window geometry",381,null],[10,"set_maximized","","maximize the window",381,null],[10,"unset_maximized","","unmaximize the window",381,null],[10,"set_fullscreen","","set the window as fullscreen on a monitor",381,null],[10,"unset_fullscreen","","",381,null],[10,"set_minimized","","set the window as minimized",381,null],[0,"xdg_popup","wayland_protocols::unstable::xdg_shell::v5::client","short-lived, popup surfaces for menus",null,null],[3,"XdgPopup","wayland_protocols::unstable::xdg_shell::v5::client::xdg_popup","",null,null],[4,"Request","","",null,null],[13,"Destroy","","remove xdg_popup interface",382,null],[4,"Event","","",null,null],[13,"PopupDone","","popup interaction is done",383,null],[8,"RequestsTrait","","",null,null],[10,"destroy","","remove xdg_popup interface",384,null],[0,"server","wayland_protocols::unstable::xdg_shell::v5","Server-side API of this protocol",null,null],[0,"xdg_shell","wayland_protocols::unstable::xdg_shell::v5::server","create desktop-style surfaces",null,null],[3,"XdgShell","wayland_protocols::unstable::xdg_shell::v5::server::xdg_shell","",null,null],[4,"Version","","latest protocol version",null,null],[13,"Current","","Always the latest version",385,null],[4,"Error","","",null,null],[13,"Role","","given wl_surface has another role",386,null],[13,"DefunctSurfaces","","xdg_shell was destroyed before children",386,null],[13,"NotTheTopmostPopup","","the client tried to map or destroy a non-topmost popup",386,null],[13,"InvalidPopupParent","","the client specified an invalid popup parent surface",386,null],[4,"Request","","",null,null],[13,"Destroy","","destroy xdg_shell",387,null],[13,"UseUnstableVersion","","enable use of this unstable version",387,null],[12,"version","wayland_protocols::unstable::xdg_shell::v5::server::xdg_shell::Request","",387,null],[13,"GetXdgSurface","wayland_protocols::unstable::xdg_shell::v5::server::xdg_shell","create a shell surface from a surface",387,null],[12,"id","wayland_protocols::unstable::xdg_shell::v5::server::xdg_shell::Request","",387,null],[12,"surface","","",387,null],[13,"GetXdgPopup","wayland_protocols::unstable::xdg_shell::v5::server::xdg_shell","create a popup for a surface",387,null],[12,"id","wayland_protocols::unstable::xdg_shell::v5::server::xdg_shell::Request","",387,null],[12,"surface","","",387,null],[12,"parent","","",387,null],[12,"seat","","",387,null],[12,"serial","","",387,null],[12,"x","","",387,null],[12,"y","","",387,null],[13,"Pong","wayland_protocols::unstable::xdg_shell::v5::server::xdg_shell","respond to a ping event",387,null],[12,"serial","wayland_protocols::unstable::xdg_shell::v5::server::xdg_shell::Request","",387,null],[4,"Event","wayland_protocols::unstable::xdg_shell::v5::server::xdg_shell","",null,null],[13,"Ping","","check if the client is alive",388,null],[12,"serial","wayland_protocols::unstable::xdg_shell::v5::server::xdg_shell::Event","",388,null],[0,"xdg_surface","wayland_protocols::unstable::xdg_shell::v5::server","A desktop window",null,null],[3,"XdgSurface","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface","",null,null],[4,"ResizeEdge","","edge values for resizing",null,null],[13,"None","","",389,null],[13,"Top","","",389,null],[13,"Bottom","","",389,null],[13,"Left","","",389,null],[13,"TopLeft","","",389,null],[13,"BottomLeft","","",389,null],[13,"Right","","",389,null],[13,"TopRight","","",389,null],[13,"BottomRight","","",389,null],[4,"State","","types of state on the surface",null,null],[13,"Maximized","","the surface is maximized",390,null],[13,"Fullscreen","","the surface is fullscreen",390,null],[13,"Resizing","","the surface is being resized",390,null],[13,"Activated","","the surface is now activated",390,null],[4,"Request","","",null,null],[13,"Destroy","","Destroy the xdg_surface",391,null],[13,"SetParent","","set the parent of this surface",391,null],[12,"parent","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface::Request","",391,null],[13,"SetTitle","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface","set surface title",391,null],[12,"title","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface::Request","",391,null],[13,"SetAppId","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface","set application ID",391,null],[12,"app_id","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface::Request","",391,null],[13,"ShowWindowMenu","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface","show the window menu",391,null],[12,"seat","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface::Request","",391,null],[12,"serial","","",391,null],[12,"x","","",391,null],[12,"y","","",391,null],[13,"Move","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface","start an interactive move",391,null],[12,"seat","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface::Request","",391,null],[12,"serial","","",391,null],[13,"Resize","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface","start an interactive resize",391,null],[12,"seat","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface::Request","",391,null],[12,"serial","","",391,null],[12,"edges","","",391,null],[13,"AckConfigure","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface","ack a configure event",391,null],[12,"serial","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface::Request","",391,null],[13,"SetWindowGeometry","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface","set the new window geometry",391,null],[12,"x","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface::Request","",391,null],[12,"y","","",391,null],[12,"width","","",391,null],[12,"height","","",391,null],[13,"SetMaximized","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface","maximize the window",391,null],[13,"UnsetMaximized","","unmaximize the window",391,null],[13,"SetFullscreen","","set the window as fullscreen on a monitor",391,null],[12,"output","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface::Request","",391,null],[13,"UnsetFullscreen","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface","",391,null],[13,"SetMinimized","","set the window as minimized",391,null],[4,"Event","","",null,null],[13,"Configure","","suggest a surface change",392,null],[12,"width","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface::Event","",392,null],[12,"height","","",392,null],[12,"states","","",392,null],[12,"serial","","",392,null],[13,"Close","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface","surface wants to be closed",392,null],[0,"xdg_popup","wayland_protocols::unstable::xdg_shell::v5::server","short-lived, popup surfaces for menus",null,null],[3,"XdgPopup","wayland_protocols::unstable::xdg_shell::v5::server::xdg_popup","",null,null],[4,"Request","","",null,null],[13,"Destroy","","remove xdg_popup interface",393,null],[4,"Event","","",null,null],[13,"PopupDone","","popup interaction is done",394,null],[0,"c_interfaces","wayland_protocols::unstable::xdg_shell::v5","C interfaces for this protocol",null,null],[7,"wl_surface_interface","wayland_protocols::unstable::xdg_shell::v5::c_interfaces","",null,null],[7,"wl_output_interface","","",null,null],[7,"wl_seat_interface","","",null,null],[7,"xdg_shell_requests","","",null,null],[7,"xdg_shell_events","","",null,null],[7,"xdg_shell_interface","","",null,null],[7,"xdg_surface_requests","","",null,null],[7,"xdg_surface_events","","",null,null],[7,"xdg_surface_interface","","",null,null],[7,"xdg_popup_requests","","",null,null],[7,"xdg_popup_events","","",null,null],[7,"xdg_popup_interface","","",null,null],[11,"clone","wayland_protocols::unstable::xdg_shell::v5::client::xdg_shell","",372,{"i":[{"n":"self"}],"o":{"n":"version"}}],[11,"fmt","","",372,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",372,{"i":[{"n":"self"},{"n":"version"}],"o":{"n":"bool"}}],[11,"from_raw","","",372,{"i":[{"n":"u32"}],"o":{"g":["version"],"n":"option"}}],[11,"to_raw","","",372,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"clone","","",373,{"i":[{"n":"self"}],"o":{"n":"error"}}],[11,"fmt","","",373,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",373,{"i":[{"n":"self"},{"n":"error"}],"o":{"n":"bool"}}],[11,"from_raw","","",373,{"i":[{"n":"u32"}],"o":{"g":["error"],"n":"option"}}],[11,"to_raw","","",373,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"is_destructor","","",374,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",374,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",374,null],[11,"into_raw","","",374,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",374,null],[11,"as_raw_c_in","","",374,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",375,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",375,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",375,null],[11,"into_raw","","",375,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",375,null],[11,"as_raw_c_in","","",375,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",395,null],[11,"clone","wayland_protocols::unstable::xdg_shell::v5::client::xdg_surface","",377,{"i":[{"n":"self"}],"o":{"n":"resizeedge"}}],[11,"fmt","","",377,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",377,{"i":[{"n":"self"},{"n":"resizeedge"}],"o":{"n":"bool"}}],[11,"from_raw","","",377,{"i":[{"n":"u32"}],"o":{"g":["resizeedge"],"n":"option"}}],[11,"to_raw","","",377,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"clone","","",378,{"i":[{"n":"self"}],"o":{"n":"state"}}],[11,"fmt","","",378,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",378,{"i":[{"n":"self"},{"n":"state"}],"o":{"n":"bool"}}],[11,"from_raw","","",378,{"i":[{"n":"u32"}],"o":{"g":["state"],"n":"option"}}],[11,"to_raw","","",378,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"is_destructor","","",379,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",379,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",379,null],[11,"into_raw","","",379,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",379,null],[11,"as_raw_c_in","","",379,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",380,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",380,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",380,null],[11,"into_raw","","",380,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",380,null],[11,"as_raw_c_in","","",380,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",396,null],[11,"is_destructor","wayland_protocols::unstable::xdg_shell::v5::client::xdg_popup","",382,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",382,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",382,null],[11,"into_raw","","",382,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",382,null],[11,"as_raw_c_in","","",382,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",383,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",383,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",383,null],[11,"into_raw","","",383,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",383,null],[11,"as_raw_c_in","","",383,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",397,null],[11,"clone","wayland_protocols::unstable::xdg_shell::v5::server::xdg_shell","",385,{"i":[{"n":"self"}],"o":{"n":"version"}}],[11,"fmt","","",385,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",385,{"i":[{"n":"self"},{"n":"version"}],"o":{"n":"bool"}}],[11,"from_raw","","",385,{"i":[{"n":"u32"}],"o":{"g":["version"],"n":"option"}}],[11,"to_raw","","",385,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"clone","","",386,{"i":[{"n":"self"}],"o":{"n":"error"}}],[11,"fmt","","",386,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",386,{"i":[{"n":"self"},{"n":"error"}],"o":{"n":"bool"}}],[11,"from_raw","","",386,{"i":[{"n":"u32"}],"o":{"g":["error"],"n":"option"}}],[11,"to_raw","","",386,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"is_destructor","","",387,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",387,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",387,null],[11,"into_raw","","",387,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",387,null],[11,"as_raw_c_in","","",387,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",388,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",388,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",388,null],[11,"into_raw","","",388,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",388,null],[11,"as_raw_c_in","","",388,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",398,null],[11,"clone","wayland_protocols::unstable::xdg_shell::v5::server::xdg_surface","",389,{"i":[{"n":"self"}],"o":{"n":"resizeedge"}}],[11,"fmt","","",389,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",389,{"i":[{"n":"self"},{"n":"resizeedge"}],"o":{"n":"bool"}}],[11,"from_raw","","",389,{"i":[{"n":"u32"}],"o":{"g":["resizeedge"],"n":"option"}}],[11,"to_raw","","",389,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"clone","","",390,{"i":[{"n":"self"}],"o":{"n":"state"}}],[11,"fmt","","",390,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",390,{"i":[{"n":"self"},{"n":"state"}],"o":{"n":"bool"}}],[11,"from_raw","","",390,{"i":[{"n":"u32"}],"o":{"g":["state"],"n":"option"}}],[11,"to_raw","","",390,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"is_destructor","","",391,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",391,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",391,null],[11,"into_raw","","",391,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",391,null],[11,"as_raw_c_in","","",391,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",392,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",392,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",392,null],[11,"into_raw","","",392,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",392,null],[11,"as_raw_c_in","","",392,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",399,null],[11,"is_destructor","wayland_protocols::unstable::xdg_shell::v5::server::xdg_popup","",393,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",393,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",393,null],[11,"into_raw","","",393,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",393,null],[11,"as_raw_c_in","","",393,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",394,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",394,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",394,null],[11,"into_raw","","",394,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",394,null],[11,"as_raw_c_in","","",394,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",400,null],[0,"v6","wayland_protocols::unstable::xdg_shell","",null,null],[0,"client","wayland_protocols::unstable::xdg_shell::v6","Client-side API of this protocol",null,null],[0,"zxdg_shell_v6","wayland_protocols::unstable::xdg_shell::v6::client","create desktop-style surfaces",null,null],[3,"ZxdgShellV6","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_shell_v6","",null,null],[4,"Error","","",null,null],[13,"Role","","given wl_surface has another role",401,null],[13,"DefunctSurfaces","","xdg_shell was destroyed before children",401,null],[13,"NotTheTopmostPopup","","the client tried to map or destroy a non-topmost popup",401,null],[13,"InvalidPopupParent","","the client specified an invalid popup parent surface",401,null],[13,"InvalidSurfaceState","","the client provided an invalid surface state",401,null],[13,"InvalidPositioner","","the client provided an invalid positioner",401,null],[4,"Request","","",null,null],[13,"Destroy","","destroy xdg_shell",402,null],[13,"CreatePositioner","","create a positioner object",402,null],[12,"id","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_shell_v6::Request","",402,null],[13,"GetXdgSurface","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_shell_v6","create a shell surface from a surface",402,null],[12,"id","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_shell_v6::Request","",402,null],[12,"surface","","",402,null],[13,"Pong","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_shell_v6","respond to a ping event",402,null],[12,"serial","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_shell_v6::Request","",402,null],[4,"Event","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_shell_v6","",null,null],[13,"Ping","","check if the client is alive",403,null],[12,"serial","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_shell_v6::Event","",403,null],[8,"RequestsTrait","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_shell_v6","",null,null],[10,"destroy","","destroy xdg_shell",404,null],[10,"create_positioner","","create a positioner object",404,{"i":[{"n":"self"},{"n":"f"}],"o":{"g":["proxy"],"n":"result"}}],[10,"get_xdg_surface","","create a shell surface from a surface",404,{"i":[{"n":"self"},{"n":"proxy"},{"n":"f"}],"o":{"g":["proxy"],"n":"result"}}],[10,"pong","","respond to a ping event",404,null],[0,"zxdg_positioner_v6","wayland_protocols::unstable::xdg_shell::v6::client","child surface positioner",null,null],[3,"Anchor","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","",null,null],[3,"Gravity","","",null,null],[3,"ConstraintAdjustment","","constraint adjustments",null,null],[3,"ZxdgPositionerV6","","",null,null],[4,"Error","","",null,null],[13,"InvalidInput","","invalid input provided",405,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the xdg_positioner object",406,null],[13,"SetSize","","set the size of the to-be positioned rectangle",406,null],[12,"width","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6::Request","",406,null],[12,"height","","",406,null],[13,"SetAnchorRect","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","set the anchor rectangle within the parent surface",406,null],[12,"x","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6::Request","",406,null],[12,"y","","",406,null],[12,"width","","",406,null],[12,"height","","",406,null],[13,"SetAnchor","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","set anchor rectangle anchor edges",406,null],[12,"anchor","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6::Request","",406,null],[13,"SetGravity","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","set child surface gravity",406,null],[12,"gravity","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6::Request","",406,null],[13,"SetConstraintAdjustment","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","set the adjustment to be done when constrained",406,null],[12,"constraint_adjustment","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6::Request","",406,null],[13,"SetOffset","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","set surface position offset",406,null],[12,"x","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6::Request","",406,null],[12,"y","","",406,null],[4,"Event","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","",null,null],[8,"RequestsTrait","","",null,null],[10,"destroy","","destroy the xdg_positioner object",407,null],[10,"set_size","","set the size of the to-be positioned rectangle",407,null],[10,"set_anchor_rect","","set the anchor rectangle within the parent surface",407,null],[10,"set_anchor","","set anchor rectangle anchor edges",407,null],[10,"set_gravity","","set child surface gravity",407,null],[10,"set_constraint_adjustment","","set the adjustment to be done when constrained",407,null],[10,"set_offset","","set surface position offset",407,null],[0,"zxdg_surface_v6","wayland_protocols::unstable::xdg_shell::v6::client","desktop user interface surface base interface",null,null],[3,"ZxdgSurfaceV6","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_surface_v6","",null,null],[4,"Error","","",null,null],[13,"NotConstructed","","",408,null],[13,"AlreadyConstructed","","",408,null],[13,"UnconfiguredBuffer","","",408,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the xdg_surface",409,null],[13,"GetToplevel","","assign the xdg_toplevel surface role",409,null],[12,"id","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_surface_v6::Request","",409,null],[13,"GetPopup","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_surface_v6","assign the xdg_popup surface role",409,null],[12,"id","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_surface_v6::Request","",409,null],[12,"parent","","",409,null],[12,"positioner","","",409,null],[13,"SetWindowGeometry","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_surface_v6","set the new window geometry",409,null],[12,"x","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_surface_v6::Request","",409,null],[12,"y","","",409,null],[12,"width","","",409,null],[12,"height","","",409,null],[13,"AckConfigure","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_surface_v6","ack a configure event",409,null],[12,"serial","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_surface_v6::Request","",409,null],[4,"Event","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_surface_v6","",null,null],[13,"Configure","","suggest a surface change",410,null],[12,"serial","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_surface_v6::Event","",410,null],[8,"RequestsTrait","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_surface_v6","",null,null],[10,"destroy","","destroy the xdg_surface",411,null],[10,"get_toplevel","","assign the xdg_toplevel surface role",411,{"i":[{"n":"self"},{"n":"f"}],"o":{"g":["proxy"],"n":"result"}}],[10,"get_popup","","assign the xdg_popup surface role",411,{"i":[{"n":"self"},{"n":"proxy"},{"n":"proxy"},{"n":"f"}],"o":{"g":["proxy"],"n":"result"}}],[10,"set_window_geometry","","set the new window geometry",411,null],[10,"ack_configure","","ack a configure event",411,null],[0,"zxdg_toplevel_v6","wayland_protocols::unstable::xdg_shell::v6::client","toplevel surface",null,null],[3,"ZxdgToplevelV6","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6","",null,null],[4,"ResizeEdge","","edge values for resizing",null,null],[13,"None","","",412,null],[13,"Top","","",412,null],[13,"Bottom","","",412,null],[13,"Left","","",412,null],[13,"TopLeft","","",412,null],[13,"BottomLeft","","",412,null],[13,"Right","","",412,null],[13,"TopRight","","",412,null],[13,"BottomRight","","",412,null],[4,"State","","types of state on the surface",null,null],[13,"Maximized","","the surface is maximized",413,null],[13,"Fullscreen","","the surface is fullscreen",413,null],[13,"Resizing","","the surface is being resized",413,null],[13,"Activated","","the surface is now activated",413,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the xdg_toplevel",414,null],[13,"SetParent","","set the parent of this surface",414,null],[12,"parent","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6::Request","",414,null],[13,"SetTitle","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6","set surface title",414,null],[12,"title","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6::Request","",414,null],[13,"SetAppId","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6","set application ID",414,null],[12,"app_id","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6::Request","",414,null],[13,"ShowWindowMenu","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6","show the window menu",414,null],[12,"seat","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6::Request","",414,null],[12,"serial","","",414,null],[12,"x","","",414,null],[12,"y","","",414,null],[13,"Move","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6","start an interactive move",414,null],[12,"seat","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6::Request","",414,null],[12,"serial","","",414,null],[13,"Resize","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6","start an interactive resize",414,null],[12,"seat","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6::Request","",414,null],[12,"serial","","",414,null],[12,"edges","","",414,null],[13,"SetMaxSize","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6","set the maximum size",414,null],[12,"width","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6::Request","",414,null],[12,"height","","",414,null],[13,"SetMinSize","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6","set the minimum size",414,null],[12,"width","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6::Request","",414,null],[12,"height","","",414,null],[13,"SetMaximized","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6","maximize the window",414,null],[13,"UnsetMaximized","","unmaximize the window",414,null],[13,"SetFullscreen","","set the window as fullscreen on a monitor",414,null],[12,"output","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6::Request","",414,null],[13,"UnsetFullscreen","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6","",414,null],[13,"SetMinimized","","set the window as minimized",414,null],[4,"Event","","",null,null],[13,"Configure","","suggest a surface change",415,null],[12,"width","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6::Event","",415,null],[12,"height","","",415,null],[12,"states","","",415,null],[13,"Close","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6","surface wants to be closed",415,null],[8,"RequestsTrait","","",null,null],[10,"destroy","","destroy the xdg_toplevel",416,null],[10,"set_parent","","set the parent of this surface",416,null],[10,"set_title","","set surface title",416,null],[10,"set_app_id","","set application ID",416,null],[10,"show_window_menu","","show the window menu",416,null],[10,"_move","","start an interactive move",416,null],[10,"resize","","start an interactive resize",416,null],[10,"set_max_size","","set the maximum size",416,null],[10,"set_min_size","","set the minimum size",416,null],[10,"set_maximized","","maximize the window",416,null],[10,"unset_maximized","","unmaximize the window",416,null],[10,"set_fullscreen","","set the window as fullscreen on a monitor",416,null],[10,"unset_fullscreen","","",416,null],[10,"set_minimized","","set the window as minimized",416,null],[0,"zxdg_popup_v6","wayland_protocols::unstable::xdg_shell::v6::client","short-lived, popup surfaces for menus",null,null],[3,"ZxdgPopupV6","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_popup_v6","",null,null],[4,"Error","","",null,null],[13,"InvalidGrab","","tried to grab after being mapped",417,null],[4,"Request","","",null,null],[13,"Destroy","","remove xdg_popup interface",418,null],[13,"Grab","","make the popup take an explicit grab",418,null],[12,"seat","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_popup_v6::Request","",418,null],[12,"serial","","",418,null],[4,"Event","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_popup_v6","",null,null],[13,"Configure","","configure the popup surface",419,null],[12,"x","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_popup_v6::Event","",419,null],[12,"y","","",419,null],[12,"width","","",419,null],[12,"height","","",419,null],[13,"PopupDone","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_popup_v6","popup interaction is done",419,null],[8,"RequestsTrait","","",null,null],[10,"destroy","","remove xdg_popup interface",420,null],[10,"grab","","make the popup take an explicit grab",420,null],[0,"server","wayland_protocols::unstable::xdg_shell::v6","Server-side API of this protocol",null,null],[0,"zxdg_shell_v6","wayland_protocols::unstable::xdg_shell::v6::server","create desktop-style surfaces",null,null],[3,"ZxdgShellV6","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_shell_v6","",null,null],[4,"Error","","",null,null],[13,"Role","","given wl_surface has another role",421,null],[13,"DefunctSurfaces","","xdg_shell was destroyed before children",421,null],[13,"NotTheTopmostPopup","","the client tried to map or destroy a non-topmost popup",421,null],[13,"InvalidPopupParent","","the client specified an invalid popup parent surface",421,null],[13,"InvalidSurfaceState","","the client provided an invalid surface state",421,null],[13,"InvalidPositioner","","the client provided an invalid positioner",421,null],[4,"Request","","",null,null],[13,"Destroy","","destroy xdg_shell",422,null],[13,"CreatePositioner","","create a positioner object",422,null],[12,"id","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_shell_v6::Request","",422,null],[13,"GetXdgSurface","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_shell_v6","create a shell surface from a surface",422,null],[12,"id","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_shell_v6::Request","",422,null],[12,"surface","","",422,null],[13,"Pong","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_shell_v6","respond to a ping event",422,null],[12,"serial","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_shell_v6::Request","",422,null],[4,"Event","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_shell_v6","",null,null],[13,"Ping","","check if the client is alive",423,null],[12,"serial","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_shell_v6::Event","",423,null],[0,"zxdg_positioner_v6","wayland_protocols::unstable::xdg_shell::v6::server","child surface positioner",null,null],[3,"Anchor","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6","",null,null],[3,"Gravity","","",null,null],[3,"ConstraintAdjustment","","constraint adjustments",null,null],[3,"ZxdgPositionerV6","","",null,null],[4,"Error","","",null,null],[13,"InvalidInput","","invalid input provided",424,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the xdg_positioner object",425,null],[13,"SetSize","","set the size of the to-be positioned rectangle",425,null],[12,"width","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6::Request","",425,null],[12,"height","","",425,null],[13,"SetAnchorRect","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6","set the anchor rectangle within the parent surface",425,null],[12,"x","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6::Request","",425,null],[12,"y","","",425,null],[12,"width","","",425,null],[12,"height","","",425,null],[13,"SetAnchor","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6","set anchor rectangle anchor edges",425,null],[12,"anchor","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6::Request","",425,null],[13,"SetGravity","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6","set child surface gravity",425,null],[12,"gravity","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6::Request","",425,null],[13,"SetConstraintAdjustment","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6","set the adjustment to be done when constrained",425,null],[12,"constraint_adjustment","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6::Request","",425,null],[13,"SetOffset","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6","set surface position offset",425,null],[12,"x","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6::Request","",425,null],[12,"y","","",425,null],[4,"Event","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6","",null,null],[0,"zxdg_surface_v6","wayland_protocols::unstable::xdg_shell::v6::server","desktop user interface surface base interface",null,null],[3,"ZxdgSurfaceV6","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_surface_v6","",null,null],[4,"Error","","",null,null],[13,"NotConstructed","","",426,null],[13,"AlreadyConstructed","","",426,null],[13,"UnconfiguredBuffer","","",426,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the xdg_surface",427,null],[13,"GetToplevel","","assign the xdg_toplevel surface role",427,null],[12,"id","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_surface_v6::Request","",427,null],[13,"GetPopup","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_surface_v6","assign the xdg_popup surface role",427,null],[12,"id","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_surface_v6::Request","",427,null],[12,"parent","","",427,null],[12,"positioner","","",427,null],[13,"SetWindowGeometry","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_surface_v6","set the new window geometry",427,null],[12,"x","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_surface_v6::Request","",427,null],[12,"y","","",427,null],[12,"width","","",427,null],[12,"height","","",427,null],[13,"AckConfigure","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_surface_v6","ack a configure event",427,null],[12,"serial","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_surface_v6::Request","",427,null],[4,"Event","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_surface_v6","",null,null],[13,"Configure","","suggest a surface change",428,null],[12,"serial","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_surface_v6::Event","",428,null],[0,"zxdg_toplevel_v6","wayland_protocols::unstable::xdg_shell::v6::server","toplevel surface",null,null],[3,"ZxdgToplevelV6","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6","",null,null],[4,"ResizeEdge","","edge values for resizing",null,null],[13,"None","","",429,null],[13,"Top","","",429,null],[13,"Bottom","","",429,null],[13,"Left","","",429,null],[13,"TopLeft","","",429,null],[13,"BottomLeft","","",429,null],[13,"Right","","",429,null],[13,"TopRight","","",429,null],[13,"BottomRight","","",429,null],[4,"State","","types of state on the surface",null,null],[13,"Maximized","","the surface is maximized",430,null],[13,"Fullscreen","","the surface is fullscreen",430,null],[13,"Resizing","","the surface is being resized",430,null],[13,"Activated","","the surface is now activated",430,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the xdg_toplevel",431,null],[13,"SetParent","","set the parent of this surface",431,null],[12,"parent","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6::Request","",431,null],[13,"SetTitle","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6","set surface title",431,null],[12,"title","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6::Request","",431,null],[13,"SetAppId","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6","set application ID",431,null],[12,"app_id","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6::Request","",431,null],[13,"ShowWindowMenu","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6","show the window menu",431,null],[12,"seat","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6::Request","",431,null],[12,"serial","","",431,null],[12,"x","","",431,null],[12,"y","","",431,null],[13,"Move","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6","start an interactive move",431,null],[12,"seat","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6::Request","",431,null],[12,"serial","","",431,null],[13,"Resize","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6","start an interactive resize",431,null],[12,"seat","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6::Request","",431,null],[12,"serial","","",431,null],[12,"edges","","",431,null],[13,"SetMaxSize","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6","set the maximum size",431,null],[12,"width","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6::Request","",431,null],[12,"height","","",431,null],[13,"SetMinSize","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6","set the minimum size",431,null],[12,"width","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6::Request","",431,null],[12,"height","","",431,null],[13,"SetMaximized","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6","maximize the window",431,null],[13,"UnsetMaximized","","unmaximize the window",431,null],[13,"SetFullscreen","","set the window as fullscreen on a monitor",431,null],[12,"output","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6::Request","",431,null],[13,"UnsetFullscreen","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6","",431,null],[13,"SetMinimized","","set the window as minimized",431,null],[4,"Event","","",null,null],[13,"Configure","","suggest a surface change",432,null],[12,"width","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6::Event","",432,null],[12,"height","","",432,null],[12,"states","","",432,null],[13,"Close","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6","surface wants to be closed",432,null],[0,"zxdg_popup_v6","wayland_protocols::unstable::xdg_shell::v6::server","short-lived, popup surfaces for menus",null,null],[3,"ZxdgPopupV6","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_popup_v6","",null,null],[4,"Error","","",null,null],[13,"InvalidGrab","","tried to grab after being mapped",433,null],[4,"Request","","",null,null],[13,"Destroy","","remove xdg_popup interface",434,null],[13,"Grab","","make the popup take an explicit grab",434,null],[12,"seat","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_popup_v6::Request","",434,null],[12,"serial","","",434,null],[4,"Event","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_popup_v6","",null,null],[13,"Configure","","configure the popup surface",435,null],[12,"x","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_popup_v6::Event","",435,null],[12,"y","","",435,null],[12,"width","","",435,null],[12,"height","","",435,null],[13,"PopupDone","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_popup_v6","popup interaction is done",435,null],[0,"c_interfaces","wayland_protocols::unstable::xdg_shell::v6","C interfaces for this protocol",null,null],[7,"wl_surface_interface","wayland_protocols::unstable::xdg_shell::v6::c_interfaces","",null,null],[7,"wl_output_interface","","",null,null],[7,"wl_seat_interface","","",null,null],[7,"zxdg_shell_v6_requests","","",null,null],[7,"zxdg_shell_v6_events","","",null,null],[7,"zxdg_shell_v6_interface","","",null,null],[7,"zxdg_positioner_v6_requests","","",null,null],[7,"zxdg_positioner_v6_interface","","",null,null],[7,"zxdg_surface_v6_requests","","",null,null],[7,"zxdg_surface_v6_events","","",null,null],[7,"zxdg_surface_v6_interface","","",null,null],[7,"zxdg_toplevel_v6_requests","","",null,null],[7,"zxdg_toplevel_v6_events","","",null,null],[7,"zxdg_toplevel_v6_interface","","",null,null],[7,"zxdg_popup_v6_requests","","",null,null],[7,"zxdg_popup_v6_events","","",null,null],[7,"zxdg_popup_v6_interface","","",null,null],[11,"clone","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_shell_v6","",401,{"i":[{"n":"self"}],"o":{"n":"error"}}],[11,"fmt","","",401,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",401,{"i":[{"n":"self"},{"n":"error"}],"o":{"n":"bool"}}],[11,"from_raw","","",401,{"i":[{"n":"u32"}],"o":{"g":["error"],"n":"option"}}],[11,"to_raw","","",401,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"is_destructor","","",402,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",402,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",402,null],[11,"into_raw","","",402,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",402,null],[11,"as_raw_c_in","","",402,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",403,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",403,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",403,null],[11,"into_raw","","",403,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",403,null],[11,"as_raw_c_in","","",403,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",436,null],[11,"clone","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_positioner_v6","",405,{"i":[{"n":"self"}],"o":{"n":"error"}}],[11,"fmt","","",405,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",405,{"i":[{"n":"self"},{"n":"error"}],"o":{"n":"bool"}}],[11,"from_raw","","",405,{"i":[{"n":"u32"}],"o":{"g":["error"],"n":"option"}}],[11,"to_raw","","",405,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"eq","","",437,{"i":[{"n":"self"},{"n":"anchor"}],"o":{"n":"bool"}}],[11,"ne","","",437,{"i":[{"n":"self"},{"n":"anchor"}],"o":{"n":"bool"}}],[11,"clone","","",437,{"i":[{"n":"self"}],"o":{"n":"anchor"}}],[11,"partial_cmp","","",437,{"i":[{"n":"self"},{"n":"anchor"}],"o":{"g":["ordering"],"n":"option"}}],[11,"lt","","",437,{"i":[{"n":"self"},{"n":"anchor"}],"o":{"n":"bool"}}],[11,"le","","",437,{"i":[{"n":"self"},{"n":"anchor"}],"o":{"n":"bool"}}],[11,"gt","","",437,{"i":[{"n":"self"},{"n":"anchor"}],"o":{"n":"bool"}}],[11,"ge","","",437,{"i":[{"n":"self"},{"n":"anchor"}],"o":{"n":"bool"}}],[11,"cmp","","",437,{"i":[{"n":"self"},{"n":"anchor"}],"o":{"n":"ordering"}}],[11,"hash","","",437,null],[11,"fmt","","",437,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",437,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",437,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",437,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",437,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[18,"None","","the center of the anchor rectangle",437,null],[18,"Top","","the top edge of the anchor rectangle",437,null],[18,"Bottom","","the bottom edge of the anchor rectangle",437,null],[18,"Left","","the left edge of the anchor rectangle",437,null],[18,"Right","","the right edge of the anchor rectangle",437,null],[11,"empty","","Returns an empty set of flags.",437,{"o":{"n":"anchor"}}],[11,"all","","Returns the set containing all flags.",437,{"o":{"n":"anchor"}}],[11,"bits","","Returns the raw value of the flags currently stored.",437,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",437,{"i":[{"n":"u32"}],"o":{"g":["anchor"],"n":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",437,{"i":[{"n":"u32"}],"o":{"n":"anchor"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",437,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",437,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",437,{"i":[{"n":"self"},{"n":"anchor"}],"o":{"n":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",437,{"i":[{"n":"self"},{"n":"anchor"}],"o":{"n":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",437,{"i":[{"n":"self"},{"n":"anchor"}]}],[11,"remove","","Removes the specified flags in-place.",437,{"i":[{"n":"self"},{"n":"anchor"}]}],[11,"toggle","","Toggles the specified flags in-place.",437,{"i":[{"n":"self"},{"n":"anchor"}]}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",437,{"i":[{"n":"self"},{"n":"anchor"},{"n":"bool"}]}],[11,"bitor","","Returns the union of the two sets of flags.",437,{"i":[{"n":"self"},{"n":"anchor"}],"o":{"n":"anchor"}}],[11,"bitor_assign","","Adds the set of flags.",437,{"i":[{"n":"self"},{"n":"anchor"}]}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",437,{"i":[{"n":"self"},{"n":"anchor"}],"o":{"n":"anchor"}}],[11,"bitxor_assign","","Toggles the set of flags.",437,{"i":[{"n":"self"},{"n":"anchor"}]}],[11,"bitand","","Returns the intersection between the two sets of flags.",437,{"i":[{"n":"self"},{"n":"anchor"}],"o":{"n":"anchor"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",437,{"i":[{"n":"self"},{"n":"anchor"}]}],[11,"sub","","Returns the set difference of the two sets of flags.",437,{"i":[{"n":"self"},{"n":"anchor"}],"o":{"n":"anchor"}}],[11,"sub_assign","","Disables all flags enabled in the set.",437,{"i":[{"n":"self"},{"n":"anchor"}]}],[11,"not","","Returns the complement of this set of flags.",437,{"i":[{"n":"self"}],"o":{"n":"anchor"}}],[11,"extend","","",437,{"i":[{"n":"self"},{"n":"t"}]}],[11,"from_iter","","",437,{"i":[{"n":"t"}],"o":{"n":"anchor"}}],[11,"from_raw","","",437,{"i":[{"n":"u32"}],"o":{"g":["anchor"],"n":"option"}}],[11,"to_raw","","",437,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"eq","","",438,{"i":[{"n":"self"},{"n":"gravity"}],"o":{"n":"bool"}}],[11,"ne","","",438,{"i":[{"n":"self"},{"n":"gravity"}],"o":{"n":"bool"}}],[11,"clone","","",438,{"i":[{"n":"self"}],"o":{"n":"gravity"}}],[11,"partial_cmp","","",438,{"i":[{"n":"self"},{"n":"gravity"}],"o":{"g":["ordering"],"n":"option"}}],[11,"lt","","",438,{"i":[{"n":"self"},{"n":"gravity"}],"o":{"n":"bool"}}],[11,"le","","",438,{"i":[{"n":"self"},{"n":"gravity"}],"o":{"n":"bool"}}],[11,"gt","","",438,{"i":[{"n":"self"},{"n":"gravity"}],"o":{"n":"bool"}}],[11,"ge","","",438,{"i":[{"n":"self"},{"n":"gravity"}],"o":{"n":"bool"}}],[11,"cmp","","",438,{"i":[{"n":"self"},{"n":"gravity"}],"o":{"n":"ordering"}}],[11,"hash","","",438,null],[11,"fmt","","",438,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",438,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",438,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",438,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",438,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[18,"None","","center over the anchor edge",438,null],[18,"Top","","position above the anchor edge",438,null],[18,"Bottom","","position below the anchor edge",438,null],[18,"Left","","position to the left of the anchor edge",438,null],[18,"Right","","position to the right of the anchor edge",438,null],[11,"empty","","Returns an empty set of flags.",438,{"o":{"n":"gravity"}}],[11,"all","","Returns the set containing all flags.",438,{"o":{"n":"gravity"}}],[11,"bits","","Returns the raw value of the flags currently stored.",438,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",438,{"i":[{"n":"u32"}],"o":{"g":["gravity"],"n":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",438,{"i":[{"n":"u32"}],"o":{"n":"gravity"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",438,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",438,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",438,{"i":[{"n":"self"},{"n":"gravity"}],"o":{"n":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",438,{"i":[{"n":"self"},{"n":"gravity"}],"o":{"n":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",438,{"i":[{"n":"self"},{"n":"gravity"}]}],[11,"remove","","Removes the specified flags in-place.",438,{"i":[{"n":"self"},{"n":"gravity"}]}],[11,"toggle","","Toggles the specified flags in-place.",438,{"i":[{"n":"self"},{"n":"gravity"}]}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",438,{"i":[{"n":"self"},{"n":"gravity"},{"n":"bool"}]}],[11,"bitor","","Returns the union of the two sets of flags.",438,{"i":[{"n":"self"},{"n":"gravity"}],"o":{"n":"gravity"}}],[11,"bitor_assign","","Adds the set of flags.",438,{"i":[{"n":"self"},{"n":"gravity"}]}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",438,{"i":[{"n":"self"},{"n":"gravity"}],"o":{"n":"gravity"}}],[11,"bitxor_assign","","Toggles the set of flags.",438,{"i":[{"n":"self"},{"n":"gravity"}]}],[11,"bitand","","Returns the intersection between the two sets of flags.",438,{"i":[{"n":"self"},{"n":"gravity"}],"o":{"n":"gravity"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",438,{"i":[{"n":"self"},{"n":"gravity"}]}],[11,"sub","","Returns the set difference of the two sets of flags.",438,{"i":[{"n":"self"},{"n":"gravity"}],"o":{"n":"gravity"}}],[11,"sub_assign","","Disables all flags enabled in the set.",438,{"i":[{"n":"self"},{"n":"gravity"}]}],[11,"not","","Returns the complement of this set of flags.",438,{"i":[{"n":"self"}],"o":{"n":"gravity"}}],[11,"extend","","",438,{"i":[{"n":"self"},{"n":"t"}]}],[11,"from_iter","","",438,{"i":[{"n":"t"}],"o":{"n":"gravity"}}],[11,"from_raw","","",438,{"i":[{"n":"u32"}],"o":{"g":["gravity"],"n":"option"}}],[11,"to_raw","","",438,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"eq","","",439,{"i":[{"n":"self"},{"n":"constraintadjustment"}],"o":{"n":"bool"}}],[11,"ne","","",439,{"i":[{"n":"self"},{"n":"constraintadjustment"}],"o":{"n":"bool"}}],[11,"clone","","",439,{"i":[{"n":"self"}],"o":{"n":"constraintadjustment"}}],[11,"partial_cmp","","",439,{"i":[{"n":"self"},{"n":"constraintadjustment"}],"o":{"g":["ordering"],"n":"option"}}],[11,"lt","","",439,{"i":[{"n":"self"},{"n":"constraintadjustment"}],"o":{"n":"bool"}}],[11,"le","","",439,{"i":[{"n":"self"},{"n":"constraintadjustment"}],"o":{"n":"bool"}}],[11,"gt","","",439,{"i":[{"n":"self"},{"n":"constraintadjustment"}],"o":{"n":"bool"}}],[11,"ge","","",439,{"i":[{"n":"self"},{"n":"constraintadjustment"}],"o":{"n":"bool"}}],[11,"cmp","","",439,{"i":[{"n":"self"},{"n":"constraintadjustment"}],"o":{"n":"ordering"}}],[11,"hash","","",439,null],[11,"fmt","","",439,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",439,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",439,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",439,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",439,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[18,"None","","don't move the child surface when constrained",439,null],[18,"SlideX","","move along the x axis until unconstrained",439,null],[18,"SlideY","","move along the y axis until unconstrained",439,null],[18,"FlipX","","invert the anchor and gravity on the x axis",439,null],[18,"FlipY","","invert the anchor and gravity on the y axis",439,null],[18,"ResizeX","","horizontally resize the surface",439,null],[18,"ResizeY","","vertically resize the surface",439,null],[11,"empty","","Returns an empty set of flags.",439,{"o":{"n":"constraintadjustment"}}],[11,"all","","Returns the set containing all flags.",439,{"o":{"n":"constraintadjustment"}}],[11,"bits","","Returns the raw value of the flags currently stored.",439,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",439,{"i":[{"n":"u32"}],"o":{"g":["constraintadjustment"],"n":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",439,{"i":[{"n":"u32"}],"o":{"n":"constraintadjustment"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",439,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",439,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",439,{"i":[{"n":"self"},{"n":"constraintadjustment"}],"o":{"n":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",439,{"i":[{"n":"self"},{"n":"constraintadjustment"}],"o":{"n":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",439,{"i":[{"n":"self"},{"n":"constraintadjustment"}]}],[11,"remove","","Removes the specified flags in-place.",439,{"i":[{"n":"self"},{"n":"constraintadjustment"}]}],[11,"toggle","","Toggles the specified flags in-place.",439,{"i":[{"n":"self"},{"n":"constraintadjustment"}]}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",439,{"i":[{"n":"self"},{"n":"constraintadjustment"},{"n":"bool"}]}],[11,"bitor","","Returns the union of the two sets of flags.",439,{"i":[{"n":"self"},{"n":"constraintadjustment"}],"o":{"n":"constraintadjustment"}}],[11,"bitor_assign","","Adds the set of flags.",439,{"i":[{"n":"self"},{"n":"constraintadjustment"}]}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",439,{"i":[{"n":"self"},{"n":"constraintadjustment"}],"o":{"n":"constraintadjustment"}}],[11,"bitxor_assign","","Toggles the set of flags.",439,{"i":[{"n":"self"},{"n":"constraintadjustment"}]}],[11,"bitand","","Returns the intersection between the two sets of flags.",439,{"i":[{"n":"self"},{"n":"constraintadjustment"}],"o":{"n":"constraintadjustment"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",439,{"i":[{"n":"self"},{"n":"constraintadjustment"}]}],[11,"sub","","Returns the set difference of the two sets of flags.",439,{"i":[{"n":"self"},{"n":"constraintadjustment"}],"o":{"n":"constraintadjustment"}}],[11,"sub_assign","","Disables all flags enabled in the set.",439,{"i":[{"n":"self"},{"n":"constraintadjustment"}]}],[11,"not","","Returns the complement of this set of flags.",439,{"i":[{"n":"self"}],"o":{"n":"constraintadjustment"}}],[11,"extend","","",439,{"i":[{"n":"self"},{"n":"t"}]}],[11,"from_iter","","",439,{"i":[{"n":"t"}],"o":{"n":"constraintadjustment"}}],[11,"from_raw","","",439,{"i":[{"n":"u32"}],"o":{"g":["constraintadjustment"],"n":"option"}}],[11,"to_raw","","",439,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"is_destructor","","",406,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",406,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",406,null],[11,"into_raw","","",406,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",406,null],[11,"as_raw_c_in","","",406,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",440,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",440,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",440,null],[11,"into_raw","","",440,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",440,null],[11,"as_raw_c_in","","",440,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",441,null],[11,"clone","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_surface_v6","",408,{"i":[{"n":"self"}],"o":{"n":"error"}}],[11,"fmt","","",408,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",408,{"i":[{"n":"self"},{"n":"error"}],"o":{"n":"bool"}}],[11,"from_raw","","",408,{"i":[{"n":"u32"}],"o":{"g":["error"],"n":"option"}}],[11,"to_raw","","",408,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"is_destructor","","",409,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",409,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",409,null],[11,"into_raw","","",409,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",409,null],[11,"as_raw_c_in","","",409,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",410,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",410,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",410,null],[11,"into_raw","","",410,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",410,null],[11,"as_raw_c_in","","",410,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",442,null],[11,"clone","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_toplevel_v6","",412,{"i":[{"n":"self"}],"o":{"n":"resizeedge"}}],[11,"fmt","","",412,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",412,{"i":[{"n":"self"},{"n":"resizeedge"}],"o":{"n":"bool"}}],[11,"from_raw","","",412,{"i":[{"n":"u32"}],"o":{"g":["resizeedge"],"n":"option"}}],[11,"to_raw","","",412,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"clone","","",413,{"i":[{"n":"self"}],"o":{"n":"state"}}],[11,"fmt","","",413,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",413,{"i":[{"n":"self"},{"n":"state"}],"o":{"n":"bool"}}],[11,"from_raw","","",413,{"i":[{"n":"u32"}],"o":{"g":["state"],"n":"option"}}],[11,"to_raw","","",413,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"is_destructor","","",414,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",414,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",414,null],[11,"into_raw","","",414,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",414,null],[11,"as_raw_c_in","","",414,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",415,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",415,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",415,null],[11,"into_raw","","",415,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",415,null],[11,"as_raw_c_in","","",415,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",443,null],[11,"clone","wayland_protocols::unstable::xdg_shell::v6::client::zxdg_popup_v6","",417,{"i":[{"n":"self"}],"o":{"n":"error"}}],[11,"fmt","","",417,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",417,{"i":[{"n":"self"},{"n":"error"}],"o":{"n":"bool"}}],[11,"from_raw","","",417,{"i":[{"n":"u32"}],"o":{"g":["error"],"n":"option"}}],[11,"to_raw","","",417,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"is_destructor","","",418,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",418,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",418,null],[11,"into_raw","","",418,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",418,null],[11,"as_raw_c_in","","",418,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",419,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",419,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",419,null],[11,"into_raw","","",419,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",419,null],[11,"as_raw_c_in","","",419,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",444,null],[11,"clone","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_shell_v6","",421,{"i":[{"n":"self"}],"o":{"n":"error"}}],[11,"fmt","","",421,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",421,{"i":[{"n":"self"},{"n":"error"}],"o":{"n":"bool"}}],[11,"from_raw","","",421,{"i":[{"n":"u32"}],"o":{"g":["error"],"n":"option"}}],[11,"to_raw","","",421,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"is_destructor","","",422,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",422,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",422,null],[11,"into_raw","","",422,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",422,null],[11,"as_raw_c_in","","",422,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",423,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",423,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",423,null],[11,"into_raw","","",423,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",423,null],[11,"as_raw_c_in","","",423,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",445,null],[11,"clone","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_positioner_v6","",424,{"i":[{"n":"self"}],"o":{"n":"error"}}],[11,"fmt","","",424,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",424,{"i":[{"n":"self"},{"n":"error"}],"o":{"n":"bool"}}],[11,"from_raw","","",424,{"i":[{"n":"u32"}],"o":{"g":["error"],"n":"option"}}],[11,"to_raw","","",424,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"eq","","",446,{"i":[{"n":"self"},{"n":"anchor"}],"o":{"n":"bool"}}],[11,"ne","","",446,{"i":[{"n":"self"},{"n":"anchor"}],"o":{"n":"bool"}}],[11,"clone","","",446,{"i":[{"n":"self"}],"o":{"n":"anchor"}}],[11,"partial_cmp","","",446,{"i":[{"n":"self"},{"n":"anchor"}],"o":{"g":["ordering"],"n":"option"}}],[11,"lt","","",446,{"i":[{"n":"self"},{"n":"anchor"}],"o":{"n":"bool"}}],[11,"le","","",446,{"i":[{"n":"self"},{"n":"anchor"}],"o":{"n":"bool"}}],[11,"gt","","",446,{"i":[{"n":"self"},{"n":"anchor"}],"o":{"n":"bool"}}],[11,"ge","","",446,{"i":[{"n":"self"},{"n":"anchor"}],"o":{"n":"bool"}}],[11,"cmp","","",446,{"i":[{"n":"self"},{"n":"anchor"}],"o":{"n":"ordering"}}],[11,"hash","","",446,null],[11,"fmt","","",446,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",446,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",446,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",446,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",446,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[18,"None","","the center of the anchor rectangle",446,null],[18,"Top","","the top edge of the anchor rectangle",446,null],[18,"Bottom","","the bottom edge of the anchor rectangle",446,null],[18,"Left","","the left edge of the anchor rectangle",446,null],[18,"Right","","the right edge of the anchor rectangle",446,null],[11,"empty","","Returns an empty set of flags.",446,{"o":{"n":"anchor"}}],[11,"all","","Returns the set containing all flags.",446,{"o":{"n":"anchor"}}],[11,"bits","","Returns the raw value of the flags currently stored.",446,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",446,{"i":[{"n":"u32"}],"o":{"g":["anchor"],"n":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",446,{"i":[{"n":"u32"}],"o":{"n":"anchor"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",446,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",446,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",446,{"i":[{"n":"self"},{"n":"anchor"}],"o":{"n":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",446,{"i":[{"n":"self"},{"n":"anchor"}],"o":{"n":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",446,{"i":[{"n":"self"},{"n":"anchor"}]}],[11,"remove","","Removes the specified flags in-place.",446,{"i":[{"n":"self"},{"n":"anchor"}]}],[11,"toggle","","Toggles the specified flags in-place.",446,{"i":[{"n":"self"},{"n":"anchor"}]}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",446,{"i":[{"n":"self"},{"n":"anchor"},{"n":"bool"}]}],[11,"bitor","","Returns the union of the two sets of flags.",446,{"i":[{"n":"self"},{"n":"anchor"}],"o":{"n":"anchor"}}],[11,"bitor_assign","","Adds the set of flags.",446,{"i":[{"n":"self"},{"n":"anchor"}]}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",446,{"i":[{"n":"self"},{"n":"anchor"}],"o":{"n":"anchor"}}],[11,"bitxor_assign","","Toggles the set of flags.",446,{"i":[{"n":"self"},{"n":"anchor"}]}],[11,"bitand","","Returns the intersection between the two sets of flags.",446,{"i":[{"n":"self"},{"n":"anchor"}],"o":{"n":"anchor"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",446,{"i":[{"n":"self"},{"n":"anchor"}]}],[11,"sub","","Returns the set difference of the two sets of flags.",446,{"i":[{"n":"self"},{"n":"anchor"}],"o":{"n":"anchor"}}],[11,"sub_assign","","Disables all flags enabled in the set.",446,{"i":[{"n":"self"},{"n":"anchor"}]}],[11,"not","","Returns the complement of this set of flags.",446,{"i":[{"n":"self"}],"o":{"n":"anchor"}}],[11,"extend","","",446,{"i":[{"n":"self"},{"n":"t"}]}],[11,"from_iter","","",446,{"i":[{"n":"t"}],"o":{"n":"anchor"}}],[11,"from_raw","","",446,{"i":[{"n":"u32"}],"o":{"g":["anchor"],"n":"option"}}],[11,"to_raw","","",446,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"eq","","",447,{"i":[{"n":"self"},{"n":"gravity"}],"o":{"n":"bool"}}],[11,"ne","","",447,{"i":[{"n":"self"},{"n":"gravity"}],"o":{"n":"bool"}}],[11,"clone","","",447,{"i":[{"n":"self"}],"o":{"n":"gravity"}}],[11,"partial_cmp","","",447,{"i":[{"n":"self"},{"n":"gravity"}],"o":{"g":["ordering"],"n":"option"}}],[11,"lt","","",447,{"i":[{"n":"self"},{"n":"gravity"}],"o":{"n":"bool"}}],[11,"le","","",447,{"i":[{"n":"self"},{"n":"gravity"}],"o":{"n":"bool"}}],[11,"gt","","",447,{"i":[{"n":"self"},{"n":"gravity"}],"o":{"n":"bool"}}],[11,"ge","","",447,{"i":[{"n":"self"},{"n":"gravity"}],"o":{"n":"bool"}}],[11,"cmp","","",447,{"i":[{"n":"self"},{"n":"gravity"}],"o":{"n":"ordering"}}],[11,"hash","","",447,null],[11,"fmt","","",447,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",447,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",447,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",447,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",447,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[18,"None","","center over the anchor edge",447,null],[18,"Top","","position above the anchor edge",447,null],[18,"Bottom","","position below the anchor edge",447,null],[18,"Left","","position to the left of the anchor edge",447,null],[18,"Right","","position to the right of the anchor edge",447,null],[11,"empty","","Returns an empty set of flags.",447,{"o":{"n":"gravity"}}],[11,"all","","Returns the set containing all flags.",447,{"o":{"n":"gravity"}}],[11,"bits","","Returns the raw value of the flags currently stored.",447,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",447,{"i":[{"n":"u32"}],"o":{"g":["gravity"],"n":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",447,{"i":[{"n":"u32"}],"o":{"n":"gravity"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",447,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",447,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",447,{"i":[{"n":"self"},{"n":"gravity"}],"o":{"n":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",447,{"i":[{"n":"self"},{"n":"gravity"}],"o":{"n":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",447,{"i":[{"n":"self"},{"n":"gravity"}]}],[11,"remove","","Removes the specified flags in-place.",447,{"i":[{"n":"self"},{"n":"gravity"}]}],[11,"toggle","","Toggles the specified flags in-place.",447,{"i":[{"n":"self"},{"n":"gravity"}]}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",447,{"i":[{"n":"self"},{"n":"gravity"},{"n":"bool"}]}],[11,"bitor","","Returns the union of the two sets of flags.",447,{"i":[{"n":"self"},{"n":"gravity"}],"o":{"n":"gravity"}}],[11,"bitor_assign","","Adds the set of flags.",447,{"i":[{"n":"self"},{"n":"gravity"}]}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",447,{"i":[{"n":"self"},{"n":"gravity"}],"o":{"n":"gravity"}}],[11,"bitxor_assign","","Toggles the set of flags.",447,{"i":[{"n":"self"},{"n":"gravity"}]}],[11,"bitand","","Returns the intersection between the two sets of flags.",447,{"i":[{"n":"self"},{"n":"gravity"}],"o":{"n":"gravity"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",447,{"i":[{"n":"self"},{"n":"gravity"}]}],[11,"sub","","Returns the set difference of the two sets of flags.",447,{"i":[{"n":"self"},{"n":"gravity"}],"o":{"n":"gravity"}}],[11,"sub_assign","","Disables all flags enabled in the set.",447,{"i":[{"n":"self"},{"n":"gravity"}]}],[11,"not","","Returns the complement of this set of flags.",447,{"i":[{"n":"self"}],"o":{"n":"gravity"}}],[11,"extend","","",447,{"i":[{"n":"self"},{"n":"t"}]}],[11,"from_iter","","",447,{"i":[{"n":"t"}],"o":{"n":"gravity"}}],[11,"from_raw","","",447,{"i":[{"n":"u32"}],"o":{"g":["gravity"],"n":"option"}}],[11,"to_raw","","",447,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"eq","","",448,{"i":[{"n":"self"},{"n":"constraintadjustment"}],"o":{"n":"bool"}}],[11,"ne","","",448,{"i":[{"n":"self"},{"n":"constraintadjustment"}],"o":{"n":"bool"}}],[11,"clone","","",448,{"i":[{"n":"self"}],"o":{"n":"constraintadjustment"}}],[11,"partial_cmp","","",448,{"i":[{"n":"self"},{"n":"constraintadjustment"}],"o":{"g":["ordering"],"n":"option"}}],[11,"lt","","",448,{"i":[{"n":"self"},{"n":"constraintadjustment"}],"o":{"n":"bool"}}],[11,"le","","",448,{"i":[{"n":"self"},{"n":"constraintadjustment"}],"o":{"n":"bool"}}],[11,"gt","","",448,{"i":[{"n":"self"},{"n":"constraintadjustment"}],"o":{"n":"bool"}}],[11,"ge","","",448,{"i":[{"n":"self"},{"n":"constraintadjustment"}],"o":{"n":"bool"}}],[11,"cmp","","",448,{"i":[{"n":"self"},{"n":"constraintadjustment"}],"o":{"n":"ordering"}}],[11,"hash","","",448,null],[11,"fmt","","",448,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",448,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",448,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",448,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",448,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[18,"None","","don't move the child surface when constrained",448,null],[18,"SlideX","","move along the x axis until unconstrained",448,null],[18,"SlideY","","move along the y axis until unconstrained",448,null],[18,"FlipX","","invert the anchor and gravity on the x axis",448,null],[18,"FlipY","","invert the anchor and gravity on the y axis",448,null],[18,"ResizeX","","horizontally resize the surface",448,null],[18,"ResizeY","","vertically resize the surface",448,null],[11,"empty","","Returns an empty set of flags.",448,{"o":{"n":"constraintadjustment"}}],[11,"all","","Returns the set containing all flags.",448,{"o":{"n":"constraintadjustment"}}],[11,"bits","","Returns the raw value of the flags currently stored.",448,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",448,{"i":[{"n":"u32"}],"o":{"g":["constraintadjustment"],"n":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",448,{"i":[{"n":"u32"}],"o":{"n":"constraintadjustment"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",448,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",448,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",448,{"i":[{"n":"self"},{"n":"constraintadjustment"}],"o":{"n":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",448,{"i":[{"n":"self"},{"n":"constraintadjustment"}],"o":{"n":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",448,{"i":[{"n":"self"},{"n":"constraintadjustment"}]}],[11,"remove","","Removes the specified flags in-place.",448,{"i":[{"n":"self"},{"n":"constraintadjustment"}]}],[11,"toggle","","Toggles the specified flags in-place.",448,{"i":[{"n":"self"},{"n":"constraintadjustment"}]}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",448,{"i":[{"n":"self"},{"n":"constraintadjustment"},{"n":"bool"}]}],[11,"bitor","","Returns the union of the two sets of flags.",448,{"i":[{"n":"self"},{"n":"constraintadjustment"}],"o":{"n":"constraintadjustment"}}],[11,"bitor_assign","","Adds the set of flags.",448,{"i":[{"n":"self"},{"n":"constraintadjustment"}]}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",448,{"i":[{"n":"self"},{"n":"constraintadjustment"}],"o":{"n":"constraintadjustment"}}],[11,"bitxor_assign","","Toggles the set of flags.",448,{"i":[{"n":"self"},{"n":"constraintadjustment"}]}],[11,"bitand","","Returns the intersection between the two sets of flags.",448,{"i":[{"n":"self"},{"n":"constraintadjustment"}],"o":{"n":"constraintadjustment"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",448,{"i":[{"n":"self"},{"n":"constraintadjustment"}]}],[11,"sub","","Returns the set difference of the two sets of flags.",448,{"i":[{"n":"self"},{"n":"constraintadjustment"}],"o":{"n":"constraintadjustment"}}],[11,"sub_assign","","Disables all flags enabled in the set.",448,{"i":[{"n":"self"},{"n":"constraintadjustment"}]}],[11,"not","","Returns the complement of this set of flags.",448,{"i":[{"n":"self"}],"o":{"n":"constraintadjustment"}}],[11,"extend","","",448,{"i":[{"n":"self"},{"n":"t"}]}],[11,"from_iter","","",448,{"i":[{"n":"t"}],"o":{"n":"constraintadjustment"}}],[11,"from_raw","","",448,{"i":[{"n":"u32"}],"o":{"g":["constraintadjustment"],"n":"option"}}],[11,"to_raw","","",448,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"is_destructor","","",425,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",425,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",425,null],[11,"into_raw","","",425,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",425,null],[11,"as_raw_c_in","","",425,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",449,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",449,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",449,null],[11,"into_raw","","",449,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",449,null],[11,"as_raw_c_in","","",449,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",450,null],[11,"clone","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_surface_v6","",426,{"i":[{"n":"self"}],"o":{"n":"error"}}],[11,"fmt","","",426,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",426,{"i":[{"n":"self"},{"n":"error"}],"o":{"n":"bool"}}],[11,"from_raw","","",426,{"i":[{"n":"u32"}],"o":{"g":["error"],"n":"option"}}],[11,"to_raw","","",426,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"is_destructor","","",427,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",427,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",427,null],[11,"into_raw","","",427,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",427,null],[11,"as_raw_c_in","","",427,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",428,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",428,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",428,null],[11,"into_raw","","",428,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",428,null],[11,"as_raw_c_in","","",428,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",451,null],[11,"clone","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_toplevel_v6","",429,{"i":[{"n":"self"}],"o":{"n":"resizeedge"}}],[11,"fmt","","",429,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",429,{"i":[{"n":"self"},{"n":"resizeedge"}],"o":{"n":"bool"}}],[11,"from_raw","","",429,{"i":[{"n":"u32"}],"o":{"g":["resizeedge"],"n":"option"}}],[11,"to_raw","","",429,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"clone","","",430,{"i":[{"n":"self"}],"o":{"n":"state"}}],[11,"fmt","","",430,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",430,{"i":[{"n":"self"},{"n":"state"}],"o":{"n":"bool"}}],[11,"from_raw","","",430,{"i":[{"n":"u32"}],"o":{"g":["state"],"n":"option"}}],[11,"to_raw","","",430,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"is_destructor","","",431,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",431,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",431,null],[11,"into_raw","","",431,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",431,null],[11,"as_raw_c_in","","",431,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",432,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",432,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",432,null],[11,"into_raw","","",432,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",432,null],[11,"as_raw_c_in","","",432,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",452,null],[11,"clone","wayland_protocols::unstable::xdg_shell::v6::server::zxdg_popup_v6","",433,{"i":[{"n":"self"}],"o":{"n":"error"}}],[11,"fmt","","",433,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",433,{"i":[{"n":"self"},{"n":"error"}],"o":{"n":"bool"}}],[11,"from_raw","","",433,{"i":[{"n":"u32"}],"o":{"g":["error"],"n":"option"}}],[11,"to_raw","","",433,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"is_destructor","","",434,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",434,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",434,null],[11,"into_raw","","",434,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",434,null],[11,"as_raw_c_in","","",434,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",435,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",435,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",435,null],[11,"into_raw","","",435,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",435,null],[11,"as_raw_c_in","","",435,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",453,null],[0,"xwayland_keyboard_grab","wayland_protocols::unstable","Protocol for grabbing the keyboard from Xwayland",null,null],[0,"v1","wayland_protocols::unstable::xwayland_keyboard_grab","",null,null],[0,"client","wayland_protocols::unstable::xwayland_keyboard_grab::v1","Client-side API of this protocol",null,null],[0,"zwp_xwayland_keyboard_grab_manager_v1","wayland_protocols::unstable::xwayland_keyboard_grab::v1::client","context object for keyboard grab manager",null,null],[3,"ZwpXwaylandKeyboardGrabManagerV1","wayland_protocols::unstable::xwayland_keyboard_grab::v1::client::zwp_xwayland_keyboard_grab_manager_v1","",null,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the keyboard grab manager",454,null],[13,"GrabKeyboard","","grab the keyboard to a surface",454,null],[12,"id","wayland_protocols::unstable::xwayland_keyboard_grab::v1::client::zwp_xwayland_keyboard_grab_manager_v1::Request","",454,null],[12,"surface","","",454,null],[12,"seat","","",454,null],[4,"Event","wayland_protocols::unstable::xwayland_keyboard_grab::v1::client::zwp_xwayland_keyboard_grab_manager_v1","",null,null],[8,"RequestsTrait","","",null,null],[10,"destroy","","destroy the keyboard grab manager",455,null],[10,"grab_keyboard","","grab the keyboard to a surface",455,{"i":[{"n":"self"},{"n":"proxy"},{"n":"proxy"},{"n":"f"}],"o":{"g":["proxy"],"n":"result"}}],[0,"zwp_xwayland_keyboard_grab_v1","wayland_protocols::unstable::xwayland_keyboard_grab::v1::client","interface for grabbing the keyboard",null,null],[3,"ZwpXwaylandKeyboardGrabV1","wayland_protocols::unstable::xwayland_keyboard_grab::v1::client::zwp_xwayland_keyboard_grab_v1","",null,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the grabbed keyboard object",456,null],[4,"Event","","",null,null],[8,"RequestsTrait","","",null,null],[10,"destroy","","destroy the grabbed keyboard object",457,null],[0,"server","wayland_protocols::unstable::xwayland_keyboard_grab::v1","Server-side API of this protocol",null,null],[0,"zwp_xwayland_keyboard_grab_manager_v1","wayland_protocols::unstable::xwayland_keyboard_grab::v1::server","context object for keyboard grab manager",null,null],[3,"ZwpXwaylandKeyboardGrabManagerV1","wayland_protocols::unstable::xwayland_keyboard_grab::v1::server::zwp_xwayland_keyboard_grab_manager_v1","",null,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the keyboard grab manager",458,null],[13,"GrabKeyboard","","grab the keyboard to a surface",458,null],[12,"id","wayland_protocols::unstable::xwayland_keyboard_grab::v1::server::zwp_xwayland_keyboard_grab_manager_v1::Request","",458,null],[12,"surface","","",458,null],[12,"seat","","",458,null],[4,"Event","wayland_protocols::unstable::xwayland_keyboard_grab::v1::server::zwp_xwayland_keyboard_grab_manager_v1","",null,null],[0,"zwp_xwayland_keyboard_grab_v1","wayland_protocols::unstable::xwayland_keyboard_grab::v1::server","interface for grabbing the keyboard",null,null],[3,"ZwpXwaylandKeyboardGrabV1","wayland_protocols::unstable::xwayland_keyboard_grab::v1::server::zwp_xwayland_keyboard_grab_v1","",null,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the grabbed keyboard object",459,null],[4,"Event","","",null,null],[0,"c_interfaces","wayland_protocols::unstable::xwayland_keyboard_grab::v1","C interfaces for this protocol",null,null],[7,"wl_seat_interface","wayland_protocols::unstable::xwayland_keyboard_grab::v1::c_interfaces","",null,null],[7,"wl_surface_interface","","",null,null],[7,"zwp_xwayland_keyboard_grab_manager_v1_requests","","",null,null],[7,"zwp_xwayland_keyboard_grab_manager_v1_interface","","",null,null],[7,"zwp_xwayland_keyboard_grab_v1_requests","","",null,null],[7,"zwp_xwayland_keyboard_grab_v1_interface","","",null,null],[11,"is_destructor","wayland_protocols::unstable::xwayland_keyboard_grab::v1::client::zwp_xwayland_keyboard_grab_manager_v1","",454,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",454,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",454,null],[11,"into_raw","","",454,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",454,null],[11,"as_raw_c_in","","",454,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",460,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",460,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",460,null],[11,"into_raw","","",460,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",460,null],[11,"as_raw_c_in","","",460,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",461,null],[11,"is_destructor","wayland_protocols::unstable::xwayland_keyboard_grab::v1::client::zwp_xwayland_keyboard_grab_v1","",456,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",456,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",456,null],[11,"into_raw","","",456,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",456,null],[11,"as_raw_c_in","","",456,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",462,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",462,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",462,null],[11,"into_raw","","",462,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",462,null],[11,"as_raw_c_in","","",462,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",463,null],[11,"is_destructor","wayland_protocols::unstable::xwayland_keyboard_grab::v1::server::zwp_xwayland_keyboard_grab_manager_v1","",458,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",458,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",458,null],[11,"into_raw","","",458,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",458,null],[11,"as_raw_c_in","","",458,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",464,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",464,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",464,null],[11,"into_raw","","",464,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",464,null],[11,"as_raw_c_in","","",464,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",465,null],[11,"is_destructor","wayland_protocols::unstable::xwayland_keyboard_grab::v1::server::zwp_xwayland_keyboard_grab_v1","",459,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",459,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",459,null],[11,"into_raw","","",459,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",459,null],[11,"as_raw_c_in","","",459,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",466,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",466,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",466,null],[11,"into_raw","","",466,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",466,null],[11,"as_raw_c_in","","",466,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",467,null],[0,"presentation_time","wayland_protocols","Presentation time protocol",null,null],[0,"client","wayland_protocols::presentation_time","Client-side API of this protocol",null,null],[0,"wp_presentation","wayland_protocols::presentation_time::client","timed presentation related wl_surface requests",null,null],[3,"WpPresentation","wayland_protocols::presentation_time::client::wp_presentation","",null,null],[4,"Error","","fatal presentation errors",null,null],[13,"InvalidTimestamp","","invalid value in tv_nsec",468,null],[13,"InvalidFlag","","invalid flag",468,null],[4,"Request","","",null,null],[13,"Destroy","","unbind from the presentation interface",469,null],[13,"Feedback","","request presentation feedback information",469,null],[12,"surface","wayland_protocols::presentation_time::client::wp_presentation::Request","",469,null],[12,"callback","","",469,null],[4,"Event","wayland_protocols::presentation_time::client::wp_presentation","",null,null],[13,"ClockId","","clock ID for timestamps",470,null],[12,"clk_id","wayland_protocols::presentation_time::client::wp_presentation::Event","",470,null],[8,"RequestsTrait","wayland_protocols::presentation_time::client::wp_presentation","",null,null],[10,"destroy","","unbind from the presentation interface",471,null],[10,"feedback","","request presentation feedback information",471,{"i":[{"n":"self"},{"n":"proxy"},{"n":"f"}],"o":{"g":["proxy"],"n":"result"}}],[0,"wp_presentation_feedback","wayland_protocols::presentation_time::client","presentation time feedback event",null,null],[3,"WpPresentationFeedback","wayland_protocols::presentation_time::client::wp_presentation_feedback","",null,null],[4,"Kind","","bitmask of flags in presented event",null,null],[13,"Vsync","","presentation was vsync'd",472,null],[13,"HwClock","","hardware provided the presentation timestamp",472,null],[13,"HwCompletion","","hardware signalled the start of the presentation",472,null],[13,"ZeroCopy","","presentation was done zero-copy",472,null],[4,"Request","","",null,null],[4,"Event","","",null,null],[13,"SyncOutput","","presentation synchronized to this output",473,null],[12,"output","wayland_protocols::presentation_time::client::wp_presentation_feedback::Event","",473,null],[13,"Presented","wayland_protocols::presentation_time::client::wp_presentation_feedback","the content update was displayed",473,null],[12,"tv_sec_hi","wayland_protocols::presentation_time::client::wp_presentation_feedback::Event","",473,null],[12,"tv_sec_lo","","",473,null],[12,"tv_nsec","","",473,null],[12,"refresh","","",473,null],[12,"seq_hi","","",473,null],[12,"seq_lo","","",473,null],[12,"flags","","",473,null],[13,"Discarded","wayland_protocols::presentation_time::client::wp_presentation_feedback","the content update was not displayed",473,null],[8,"RequestsTrait","","",null,null],[0,"server","wayland_protocols::presentation_time","Server-side API of this protocol",null,null],[0,"wp_presentation","wayland_protocols::presentation_time::server","timed presentation related wl_surface requests",null,null],[3,"WpPresentation","wayland_protocols::presentation_time::server::wp_presentation","",null,null],[4,"Error","","fatal presentation errors",null,null],[13,"InvalidTimestamp","","invalid value in tv_nsec",474,null],[13,"InvalidFlag","","invalid flag",474,null],[4,"Request","","",null,null],[13,"Destroy","","unbind from the presentation interface",475,null],[13,"Feedback","","request presentation feedback information",475,null],[12,"surface","wayland_protocols::presentation_time::server::wp_presentation::Request","",475,null],[12,"callback","","",475,null],[4,"Event","wayland_protocols::presentation_time::server::wp_presentation","",null,null],[13,"ClockId","","clock ID for timestamps",476,null],[12,"clk_id","wayland_protocols::presentation_time::server::wp_presentation::Event","",476,null],[0,"wp_presentation_feedback","wayland_protocols::presentation_time::server","presentation time feedback event",null,null],[3,"WpPresentationFeedback","wayland_protocols::presentation_time::server::wp_presentation_feedback","",null,null],[4,"Kind","","bitmask of flags in presented event",null,null],[13,"Vsync","","presentation was vsync'd",477,null],[13,"HwClock","","hardware provided the presentation timestamp",477,null],[13,"HwCompletion","","hardware signalled the start of the presentation",477,null],[13,"ZeroCopy","","presentation was done zero-copy",477,null],[4,"Request","","",null,null],[4,"Event","","",null,null],[13,"SyncOutput","","presentation synchronized to this output",478,null],[12,"output","wayland_protocols::presentation_time::server::wp_presentation_feedback::Event","",478,null],[13,"Presented","wayland_protocols::presentation_time::server::wp_presentation_feedback","the content update was displayed",478,null],[12,"tv_sec_hi","wayland_protocols::presentation_time::server::wp_presentation_feedback::Event","",478,null],[12,"tv_sec_lo","","",478,null],[12,"tv_nsec","","",478,null],[12,"refresh","","",478,null],[12,"seq_hi","","",478,null],[12,"seq_lo","","",478,null],[12,"flags","","",478,null],[13,"Discarded","wayland_protocols::presentation_time::server::wp_presentation_feedback","the content update was not displayed",478,null],[0,"c_interfaces","wayland_protocols::presentation_time","C interfaces for this protocol",null,null],[7,"wl_surface_interface","wayland_protocols::presentation_time::c_interfaces","",null,null],[7,"wl_output_interface","","",null,null],[7,"wp_presentation_requests","","",null,null],[7,"wp_presentation_events","","",null,null],[7,"wp_presentation_interface","","",null,null],[7,"wp_presentation_feedback_events","","",null,null],[7,"wp_presentation_feedback_interface","","",null,null],[0,"xdg_shell","wayland_protocols","XDG Shell protocol",null,null],[0,"client","wayland_protocols::xdg_shell","Client-side API of this protocol",null,null],[0,"xdg_wm_base","wayland_protocols::xdg_shell::client","create desktop-style surfaces",null,null],[3,"XdgWmBase","wayland_protocols::xdg_shell::client::xdg_wm_base","",null,null],[4,"Error","","",null,null],[13,"Role","","given wl_surface has another role",479,null],[13,"DefunctSurfaces","","xdg_wm_base was destroyed before children",479,null],[13,"NotTheTopmostPopup","","the client tried to map or destroy a non-topmost popup",479,null],[13,"InvalidPopupParent","","the client specified an invalid popup parent surface",479,null],[13,"InvalidSurfaceState","","the client provided an invalid surface state",479,null],[13,"InvalidPositioner","","the client provided an invalid positioner",479,null],[4,"Request","","",null,null],[13,"Destroy","","destroy xdg_wm_base",480,null],[13,"CreatePositioner","","create a positioner object",480,null],[12,"id","wayland_protocols::xdg_shell::client::xdg_wm_base::Request","",480,null],[13,"GetXdgSurface","wayland_protocols::xdg_shell::client::xdg_wm_base","create a shell surface from a surface",480,null],[12,"id","wayland_protocols::xdg_shell::client::xdg_wm_base::Request","",480,null],[12,"surface","","",480,null],[13,"Pong","wayland_protocols::xdg_shell::client::xdg_wm_base","respond to a ping event",480,null],[12,"serial","wayland_protocols::xdg_shell::client::xdg_wm_base::Request","",480,null],[4,"Event","wayland_protocols::xdg_shell::client::xdg_wm_base","",null,null],[13,"Ping","","check if the client is alive",481,null],[12,"serial","wayland_protocols::xdg_shell::client::xdg_wm_base::Event","",481,null],[8,"RequestsTrait","wayland_protocols::xdg_shell::client::xdg_wm_base","",null,null],[10,"destroy","","destroy xdg_wm_base",482,null],[10,"create_positioner","","create a positioner object",482,{"i":[{"n":"self"},{"n":"f"}],"o":{"g":["proxy"],"n":"result"}}],[10,"get_xdg_surface","","create a shell surface from a surface",482,{"i":[{"n":"self"},{"n":"proxy"},{"n":"f"}],"o":{"g":["proxy"],"n":"result"}}],[10,"pong","","respond to a ping event",482,null],[0,"xdg_positioner","wayland_protocols::xdg_shell::client","child surface positioner",null,null],[3,"ConstraintAdjustment","wayland_protocols::xdg_shell::client::xdg_positioner","constraint adjustments",null,null],[3,"XdgPositioner","","",null,null],[4,"Error","","",null,null],[13,"InvalidInput","","invalid input provided",483,null],[4,"Anchor","","",null,null],[13,"None","","",484,null],[13,"Top","","",484,null],[13,"Bottom","","",484,null],[13,"Left","","",484,null],[13,"Right","","",484,null],[13,"TopLeft","","",484,null],[13,"BottomLeft","","",484,null],[13,"TopRight","","",484,null],[13,"BottomRight","","",484,null],[4,"Gravity","","",null,null],[13,"None","","",485,null],[13,"Top","","",485,null],[13,"Bottom","","",485,null],[13,"Left","","",485,null],[13,"Right","","",485,null],[13,"TopLeft","","",485,null],[13,"BottomLeft","","",485,null],[13,"TopRight","","",485,null],[13,"BottomRight","","",485,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the xdg_positioner object",486,null],[13,"SetSize","","set the size of the to-be positioned rectangle",486,null],[12,"width","wayland_protocols::xdg_shell::client::xdg_positioner::Request","",486,null],[12,"height","","",486,null],[13,"SetAnchorRect","wayland_protocols::xdg_shell::client::xdg_positioner","set the anchor rectangle within the parent surface",486,null],[12,"x","wayland_protocols::xdg_shell::client::xdg_positioner::Request","",486,null],[12,"y","","",486,null],[12,"width","","",486,null],[12,"height","","",486,null],[13,"SetAnchor","wayland_protocols::xdg_shell::client::xdg_positioner","set anchor rectangle anchor",486,null],[12,"anchor","wayland_protocols::xdg_shell::client::xdg_positioner::Request","",486,null],[13,"SetGravity","wayland_protocols::xdg_shell::client::xdg_positioner","set child surface gravity",486,null],[12,"gravity","wayland_protocols::xdg_shell::client::xdg_positioner::Request","",486,null],[13,"SetConstraintAdjustment","wayland_protocols::xdg_shell::client::xdg_positioner","set the adjustment to be done when constrained",486,null],[12,"constraint_adjustment","wayland_protocols::xdg_shell::client::xdg_positioner::Request","",486,null],[13,"SetOffset","wayland_protocols::xdg_shell::client::xdg_positioner","set surface position offset",486,null],[12,"x","wayland_protocols::xdg_shell::client::xdg_positioner::Request","",486,null],[12,"y","","",486,null],[4,"Event","wayland_protocols::xdg_shell::client::xdg_positioner","",null,null],[8,"RequestsTrait","","",null,null],[10,"destroy","","destroy the xdg_positioner object",487,null],[10,"set_size","","set the size of the to-be positioned rectangle",487,null],[10,"set_anchor_rect","","set the anchor rectangle within the parent surface",487,null],[10,"set_anchor","","set anchor rectangle anchor",487,null],[10,"set_gravity","","set child surface gravity",487,null],[10,"set_constraint_adjustment","","set the adjustment to be done when constrained",487,null],[10,"set_offset","","set surface position offset",487,null],[0,"xdg_surface","wayland_protocols::xdg_shell::client","desktop user interface surface base interface",null,null],[3,"XdgSurface","wayland_protocols::xdg_shell::client::xdg_surface","",null,null],[4,"Error","","",null,null],[13,"NotConstructed","","",488,null],[13,"AlreadyConstructed","","",488,null],[13,"UnconfiguredBuffer","","",488,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the xdg_surface",489,null],[13,"GetToplevel","","assign the xdg_toplevel surface role",489,null],[12,"id","wayland_protocols::xdg_shell::client::xdg_surface::Request","",489,null],[13,"GetPopup","wayland_protocols::xdg_shell::client::xdg_surface","assign the xdg_popup surface role",489,null],[12,"id","wayland_protocols::xdg_shell::client::xdg_surface::Request","",489,null],[12,"parent","","",489,null],[12,"positioner","","",489,null],[13,"SetWindowGeometry","wayland_protocols::xdg_shell::client::xdg_surface","set the new window geometry",489,null],[12,"x","wayland_protocols::xdg_shell::client::xdg_surface::Request","",489,null],[12,"y","","",489,null],[12,"width","","",489,null],[12,"height","","",489,null],[13,"AckConfigure","wayland_protocols::xdg_shell::client::xdg_surface","ack a configure event",489,null],[12,"serial","wayland_protocols::xdg_shell::client::xdg_surface::Request","",489,null],[4,"Event","wayland_protocols::xdg_shell::client::xdg_surface","",null,null],[13,"Configure","","suggest a surface change",490,null],[12,"serial","wayland_protocols::xdg_shell::client::xdg_surface::Event","",490,null],[8,"RequestsTrait","wayland_protocols::xdg_shell::client::xdg_surface","",null,null],[10,"destroy","","destroy the xdg_surface",491,null],[10,"get_toplevel","","assign the xdg_toplevel surface role",491,{"i":[{"n":"self"},{"n":"f"}],"o":{"g":["proxy"],"n":"result"}}],[10,"get_popup","","assign the xdg_popup surface role",491,{"i":[{"n":"self"},{"g":["proxy"],"n":"option"},{"n":"proxy"},{"n":"f"}],"o":{"g":["proxy"],"n":"result"}}],[10,"set_window_geometry","","set the new window geometry",491,null],[10,"ack_configure","","ack a configure event",491,null],[0,"xdg_toplevel","wayland_protocols::xdg_shell::client","toplevel surface",null,null],[3,"XdgToplevel","wayland_protocols::xdg_shell::client::xdg_toplevel","",null,null],[4,"ResizeEdge","","edge values for resizing",null,null],[13,"None","","",492,null],[13,"Top","","",492,null],[13,"Bottom","","",492,null],[13,"Left","","",492,null],[13,"TopLeft","","",492,null],[13,"BottomLeft","","",492,null],[13,"Right","","",492,null],[13,"TopRight","","",492,null],[13,"BottomRight","","",492,null],[4,"State","","types of state on the surface",null,null],[13,"Maximized","","the surface is maximized",493,null],[13,"Fullscreen","","the surface is fullscreen",493,null],[13,"Resizing","","the surface is being resized",493,null],[13,"Activated","","the surface is now activated",493,null],[13,"TiledLeft","","the surface is tiled",493,null],[13,"TiledRight","","the surface is tiled",493,null],[13,"TiledTop","","the surface is tiled",493,null],[13,"TiledBottom","","the surface is tiled",493,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the xdg_toplevel",494,null],[13,"SetParent","","set the parent of this surface",494,null],[12,"parent","wayland_protocols::xdg_shell::client::xdg_toplevel::Request","",494,null],[13,"SetTitle","wayland_protocols::xdg_shell::client::xdg_toplevel","set surface title",494,null],[12,"title","wayland_protocols::xdg_shell::client::xdg_toplevel::Request","",494,null],[13,"SetAppId","wayland_protocols::xdg_shell::client::xdg_toplevel","set application ID",494,null],[12,"app_id","wayland_protocols::xdg_shell::client::xdg_toplevel::Request","",494,null],[13,"ShowWindowMenu","wayland_protocols::xdg_shell::client::xdg_toplevel","show the window menu",494,null],[12,"seat","wayland_protocols::xdg_shell::client::xdg_toplevel::Request","",494,null],[12,"serial","","",494,null],[12,"x","","",494,null],[12,"y","","",494,null],[13,"Move","wayland_protocols::xdg_shell::client::xdg_toplevel","start an interactive move",494,null],[12,"seat","wayland_protocols::xdg_shell::client::xdg_toplevel::Request","",494,null],[12,"serial","","",494,null],[13,"Resize","wayland_protocols::xdg_shell::client::xdg_toplevel","start an interactive resize",494,null],[12,"seat","wayland_protocols::xdg_shell::client::xdg_toplevel::Request","",494,null],[12,"serial","","",494,null],[12,"edges","","",494,null],[13,"SetMaxSize","wayland_protocols::xdg_shell::client::xdg_toplevel","set the maximum size",494,null],[12,"width","wayland_protocols::xdg_shell::client::xdg_toplevel::Request","",494,null],[12,"height","","",494,null],[13,"SetMinSize","wayland_protocols::xdg_shell::client::xdg_toplevel","set the minimum size",494,null],[12,"width","wayland_protocols::xdg_shell::client::xdg_toplevel::Request","",494,null],[12,"height","","",494,null],[13,"SetMaximized","wayland_protocols::xdg_shell::client::xdg_toplevel","maximize the window",494,null],[13,"UnsetMaximized","","unmaximize the window",494,null],[13,"SetFullscreen","","set the window as fullscreen on an output",494,null],[12,"output","wayland_protocols::xdg_shell::client::xdg_toplevel::Request","",494,null],[13,"UnsetFullscreen","wayland_protocols::xdg_shell::client::xdg_toplevel","unset the window as fullscreen",494,null],[13,"SetMinimized","","set the window as minimized",494,null],[4,"Event","","",null,null],[13,"Configure","","suggest a surface change",495,null],[12,"width","wayland_protocols::xdg_shell::client::xdg_toplevel::Event","",495,null],[12,"height","","",495,null],[12,"states","","",495,null],[13,"Close","wayland_protocols::xdg_shell::client::xdg_toplevel","surface wants to be closed",495,null],[8,"RequestsTrait","","",null,null],[10,"destroy","","destroy the xdg_toplevel",496,null],[10,"set_parent","","set the parent of this surface",496,null],[10,"set_title","","set surface title",496,null],[10,"set_app_id","","set application ID",496,null],[10,"show_window_menu","","show the window menu",496,null],[10,"_move","","start an interactive move",496,null],[10,"resize","","start an interactive resize",496,null],[10,"set_max_size","","set the maximum size",496,null],[10,"set_min_size","","set the minimum size",496,null],[10,"set_maximized","","maximize the window",496,null],[10,"unset_maximized","","unmaximize the window",496,null],[10,"set_fullscreen","","set the window as fullscreen on an output",496,null],[10,"unset_fullscreen","","unset the window as fullscreen",496,null],[10,"set_minimized","","set the window as minimized",496,null],[0,"xdg_popup","wayland_protocols::xdg_shell::client","short-lived, popup surfaces for menus",null,null],[3,"XdgPopup","wayland_protocols::xdg_shell::client::xdg_popup","",null,null],[4,"Error","","",null,null],[13,"InvalidGrab","","tried to grab after being mapped",497,null],[4,"Request","","",null,null],[13,"Destroy","","remove xdg_popup interface",498,null],[13,"Grab","","make the popup take an explicit grab",498,null],[12,"seat","wayland_protocols::xdg_shell::client::xdg_popup::Request","",498,null],[12,"serial","","",498,null],[4,"Event","wayland_protocols::xdg_shell::client::xdg_popup","",null,null],[13,"Configure","","configure the popup surface",499,null],[12,"x","wayland_protocols::xdg_shell::client::xdg_popup::Event","",499,null],[12,"y","","",499,null],[12,"width","","",499,null],[12,"height","","",499,null],[13,"PopupDone","wayland_protocols::xdg_shell::client::xdg_popup","popup interaction is done",499,null],[8,"RequestsTrait","","",null,null],[10,"destroy","","remove xdg_popup interface",500,null],[10,"grab","","make the popup take an explicit grab",500,null],[0,"server","wayland_protocols::xdg_shell","Server-side API of this protocol",null,null],[0,"xdg_wm_base","wayland_protocols::xdg_shell::server","create desktop-style surfaces",null,null],[3,"XdgWmBase","wayland_protocols::xdg_shell::server::xdg_wm_base","",null,null],[4,"Error","","",null,null],[13,"Role","","given wl_surface has another role",501,null],[13,"DefunctSurfaces","","xdg_wm_base was destroyed before children",501,null],[13,"NotTheTopmostPopup","","the client tried to map or destroy a non-topmost popup",501,null],[13,"InvalidPopupParent","","the client specified an invalid popup parent surface",501,null],[13,"InvalidSurfaceState","","the client provided an invalid surface state",501,null],[13,"InvalidPositioner","","the client provided an invalid positioner",501,null],[4,"Request","","",null,null],[13,"Destroy","","destroy xdg_wm_base",502,null],[13,"CreatePositioner","","create a positioner object",502,null],[12,"id","wayland_protocols::xdg_shell::server::xdg_wm_base::Request","",502,null],[13,"GetXdgSurface","wayland_protocols::xdg_shell::server::xdg_wm_base","create a shell surface from a surface",502,null],[12,"id","wayland_protocols::xdg_shell::server::xdg_wm_base::Request","",502,null],[12,"surface","","",502,null],[13,"Pong","wayland_protocols::xdg_shell::server::xdg_wm_base","respond to a ping event",502,null],[12,"serial","wayland_protocols::xdg_shell::server::xdg_wm_base::Request","",502,null],[4,"Event","wayland_protocols::xdg_shell::server::xdg_wm_base","",null,null],[13,"Ping","","check if the client is alive",503,null],[12,"serial","wayland_protocols::xdg_shell::server::xdg_wm_base::Event","",503,null],[0,"xdg_positioner","wayland_protocols::xdg_shell::server","child surface positioner",null,null],[3,"ConstraintAdjustment","wayland_protocols::xdg_shell::server::xdg_positioner","constraint adjustments",null,null],[3,"XdgPositioner","","",null,null],[4,"Error","","",null,null],[13,"InvalidInput","","invalid input provided",504,null],[4,"Anchor","","",null,null],[13,"None","","",505,null],[13,"Top","","",505,null],[13,"Bottom","","",505,null],[13,"Left","","",505,null],[13,"Right","","",505,null],[13,"TopLeft","","",505,null],[13,"BottomLeft","","",505,null],[13,"TopRight","","",505,null],[13,"BottomRight","","",505,null],[4,"Gravity","","",null,null],[13,"None","","",506,null],[13,"Top","","",506,null],[13,"Bottom","","",506,null],[13,"Left","","",506,null],[13,"Right","","",506,null],[13,"TopLeft","","",506,null],[13,"BottomLeft","","",506,null],[13,"TopRight","","",506,null],[13,"BottomRight","","",506,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the xdg_positioner object",507,null],[13,"SetSize","","set the size of the to-be positioned rectangle",507,null],[12,"width","wayland_protocols::xdg_shell::server::xdg_positioner::Request","",507,null],[12,"height","","",507,null],[13,"SetAnchorRect","wayland_protocols::xdg_shell::server::xdg_positioner","set the anchor rectangle within the parent surface",507,null],[12,"x","wayland_protocols::xdg_shell::server::xdg_positioner::Request","",507,null],[12,"y","","",507,null],[12,"width","","",507,null],[12,"height","","",507,null],[13,"SetAnchor","wayland_protocols::xdg_shell::server::xdg_positioner","set anchor rectangle anchor",507,null],[12,"anchor","wayland_protocols::xdg_shell::server::xdg_positioner::Request","",507,null],[13,"SetGravity","wayland_protocols::xdg_shell::server::xdg_positioner","set child surface gravity",507,null],[12,"gravity","wayland_protocols::xdg_shell::server::xdg_positioner::Request","",507,null],[13,"SetConstraintAdjustment","wayland_protocols::xdg_shell::server::xdg_positioner","set the adjustment to be done when constrained",507,null],[12,"constraint_adjustment","wayland_protocols::xdg_shell::server::xdg_positioner::Request","",507,null],[13,"SetOffset","wayland_protocols::xdg_shell::server::xdg_positioner","set surface position offset",507,null],[12,"x","wayland_protocols::xdg_shell::server::xdg_positioner::Request","",507,null],[12,"y","","",507,null],[4,"Event","wayland_protocols::xdg_shell::server::xdg_positioner","",null,null],[0,"xdg_surface","wayland_protocols::xdg_shell::server","desktop user interface surface base interface",null,null],[3,"XdgSurface","wayland_protocols::xdg_shell::server::xdg_surface","",null,null],[4,"Error","","",null,null],[13,"NotConstructed","","",508,null],[13,"AlreadyConstructed","","",508,null],[13,"UnconfiguredBuffer","","",508,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the xdg_surface",509,null],[13,"GetToplevel","","assign the xdg_toplevel surface role",509,null],[12,"id","wayland_protocols::xdg_shell::server::xdg_surface::Request","",509,null],[13,"GetPopup","wayland_protocols::xdg_shell::server::xdg_surface","assign the xdg_popup surface role",509,null],[12,"id","wayland_protocols::xdg_shell::server::xdg_surface::Request","",509,null],[12,"parent","","",509,null],[12,"positioner","","",509,null],[13,"SetWindowGeometry","wayland_protocols::xdg_shell::server::xdg_surface","set the new window geometry",509,null],[12,"x","wayland_protocols::xdg_shell::server::xdg_surface::Request","",509,null],[12,"y","","",509,null],[12,"width","","",509,null],[12,"height","","",509,null],[13,"AckConfigure","wayland_protocols::xdg_shell::server::xdg_surface","ack a configure event",509,null],[12,"serial","wayland_protocols::xdg_shell::server::xdg_surface::Request","",509,null],[4,"Event","wayland_protocols::xdg_shell::server::xdg_surface","",null,null],[13,"Configure","","suggest a surface change",510,null],[12,"serial","wayland_protocols::xdg_shell::server::xdg_surface::Event","",510,null],[0,"xdg_toplevel","wayland_protocols::xdg_shell::server","toplevel surface",null,null],[3,"XdgToplevel","wayland_protocols::xdg_shell::server::xdg_toplevel","",null,null],[4,"ResizeEdge","","edge values for resizing",null,null],[13,"None","","",511,null],[13,"Top","","",511,null],[13,"Bottom","","",511,null],[13,"Left","","",511,null],[13,"TopLeft","","",511,null],[13,"BottomLeft","","",511,null],[13,"Right","","",511,null],[13,"TopRight","","",511,null],[13,"BottomRight","","",511,null],[4,"State","","types of state on the surface",null,null],[13,"Maximized","","the surface is maximized",512,null],[13,"Fullscreen","","the surface is fullscreen",512,null],[13,"Resizing","","the surface is being resized",512,null],[13,"Activated","","the surface is now activated",512,null],[13,"TiledLeft","","the surface is tiled",512,null],[13,"TiledRight","","the surface is tiled",512,null],[13,"TiledTop","","the surface is tiled",512,null],[13,"TiledBottom","","the surface is tiled",512,null],[4,"Request","","",null,null],[13,"Destroy","","destroy the xdg_toplevel",513,null],[13,"SetParent","","set the parent of this surface",513,null],[12,"parent","wayland_protocols::xdg_shell::server::xdg_toplevel::Request","",513,null],[13,"SetTitle","wayland_protocols::xdg_shell::server::xdg_toplevel","set surface title",513,null],[12,"title","wayland_protocols::xdg_shell::server::xdg_toplevel::Request","",513,null],[13,"SetAppId","wayland_protocols::xdg_shell::server::xdg_toplevel","set application ID",513,null],[12,"app_id","wayland_protocols::xdg_shell::server::xdg_toplevel::Request","",513,null],[13,"ShowWindowMenu","wayland_protocols::xdg_shell::server::xdg_toplevel","show the window menu",513,null],[12,"seat","wayland_protocols::xdg_shell::server::xdg_toplevel::Request","",513,null],[12,"serial","","",513,null],[12,"x","","",513,null],[12,"y","","",513,null],[13,"Move","wayland_protocols::xdg_shell::server::xdg_toplevel","start an interactive move",513,null],[12,"seat","wayland_protocols::xdg_shell::server::xdg_toplevel::Request","",513,null],[12,"serial","","",513,null],[13,"Resize","wayland_protocols::xdg_shell::server::xdg_toplevel","start an interactive resize",513,null],[12,"seat","wayland_protocols::xdg_shell::server::xdg_toplevel::Request","",513,null],[12,"serial","","",513,null],[12,"edges","","",513,null],[13,"SetMaxSize","wayland_protocols::xdg_shell::server::xdg_toplevel","set the maximum size",513,null],[12,"width","wayland_protocols::xdg_shell::server::xdg_toplevel::Request","",513,null],[12,"height","","",513,null],[13,"SetMinSize","wayland_protocols::xdg_shell::server::xdg_toplevel","set the minimum size",513,null],[12,"width","wayland_protocols::xdg_shell::server::xdg_toplevel::Request","",513,null],[12,"height","","",513,null],[13,"SetMaximized","wayland_protocols::xdg_shell::server::xdg_toplevel","maximize the window",513,null],[13,"UnsetMaximized","","unmaximize the window",513,null],[13,"SetFullscreen","","set the window as fullscreen on an output",513,null],[12,"output","wayland_protocols::xdg_shell::server::xdg_toplevel::Request","",513,null],[13,"UnsetFullscreen","wayland_protocols::xdg_shell::server::xdg_toplevel","unset the window as fullscreen",513,null],[13,"SetMinimized","","set the window as minimized",513,null],[4,"Event","","",null,null],[13,"Configure","","suggest a surface change",514,null],[12,"width","wayland_protocols::xdg_shell::server::xdg_toplevel::Event","",514,null],[12,"height","","",514,null],[12,"states","","",514,null],[13,"Close","wayland_protocols::xdg_shell::server::xdg_toplevel","surface wants to be closed",514,null],[0,"xdg_popup","wayland_protocols::xdg_shell::server","short-lived, popup surfaces for menus",null,null],[3,"XdgPopup","wayland_protocols::xdg_shell::server::xdg_popup","",null,null],[4,"Error","","",null,null],[13,"InvalidGrab","","tried to grab after being mapped",515,null],[4,"Request","","",null,null],[13,"Destroy","","remove xdg_popup interface",516,null],[13,"Grab","","make the popup take an explicit grab",516,null],[12,"seat","wayland_protocols::xdg_shell::server::xdg_popup::Request","",516,null],[12,"serial","","",516,null],[4,"Event","wayland_protocols::xdg_shell::server::xdg_popup","",null,null],[13,"Configure","","configure the popup surface",517,null],[12,"x","wayland_protocols::xdg_shell::server::xdg_popup::Event","",517,null],[12,"y","","",517,null],[12,"width","","",517,null],[12,"height","","",517,null],[13,"PopupDone","wayland_protocols::xdg_shell::server::xdg_popup","popup interaction is done",517,null],[0,"c_interfaces","wayland_protocols::xdg_shell","C interfaces for this protocol",null,null],[7,"wl_seat_interface","wayland_protocols::xdg_shell::c_interfaces","",null,null],[7,"wl_surface_interface","","",null,null],[7,"wl_output_interface","","",null,null],[7,"xdg_wm_base_requests","","",null,null],[7,"xdg_wm_base_events","","",null,null],[7,"xdg_wm_base_interface","","",null,null],[7,"xdg_positioner_requests","","",null,null],[7,"xdg_positioner_interface","","",null,null],[7,"xdg_surface_requests","","",null,null],[7,"xdg_surface_events","","",null,null],[7,"xdg_surface_interface","","",null,null],[7,"xdg_toplevel_requests","","",null,null],[7,"xdg_toplevel_events","","",null,null],[7,"xdg_toplevel_interface","","",null,null],[7,"xdg_popup_requests","","",null,null],[7,"xdg_popup_events","","",null,null],[7,"xdg_popup_interface","","",null,null],[0,"viewporter","wayland_protocols","Viewporter protocol",null,null],[0,"client","wayland_protocols::viewporter","Client-side API of this protocol",null,null],[0,"wp_viewporter","wayland_protocols::viewporter::client","surface cropping and scaling",null,null],[3,"WpViewporter","wayland_protocols::viewporter::client::wp_viewporter","",null,null],[4,"Error","","",null,null],[13,"ViewportExists","","the surface already has a viewport object associated",518,null],[4,"Request","","",null,null],[13,"Destroy","","unbind from the cropping and scaling interface",519,null],[13,"GetViewport","","extend surface interface for crop and scale",519,null],[12,"id","wayland_protocols::viewporter::client::wp_viewporter::Request","",519,null],[12,"surface","","",519,null],[4,"Event","wayland_protocols::viewporter::client::wp_viewporter","",null,null],[8,"RequestsTrait","","",null,null],[10,"destroy","","unbind from the cropping and scaling interface",520,null],[10,"get_viewport","","extend surface interface for crop and scale",520,{"i":[{"n":"self"},{"n":"proxy"},{"n":"f"}],"o":{"g":["proxy"],"n":"result"}}],[0,"wp_viewport","wayland_protocols::viewporter::client","crop and scale interface to a wl_surface",null,null],[3,"WpViewport","wayland_protocols::viewporter::client::wp_viewport","",null,null],[4,"Error","","",null,null],[13,"BadValue","","negative or zero values in width or height",521,null],[13,"BadSize","","destination size is not integer",521,null],[13,"OutOfBuffer","","source rectangle extends outside of the content area",521,null],[13,"NoSurface","","the wl_surface was destroyed",521,null],[4,"Request","","",null,null],[13,"Destroy","","remove scaling and cropping from the surface",522,null],[13,"SetSource","","set the source rectangle for cropping",522,null],[12,"x","wayland_protocols::viewporter::client::wp_viewport::Request","",522,null],[12,"y","","",522,null],[12,"width","","",522,null],[12,"height","","",522,null],[13,"SetDestination","wayland_protocols::viewporter::client::wp_viewport","set the surface size for scaling",522,null],[12,"width","wayland_protocols::viewporter::client::wp_viewport::Request","",522,null],[12,"height","","",522,null],[4,"Event","wayland_protocols::viewporter::client::wp_viewport","",null,null],[8,"RequestsTrait","","",null,null],[10,"destroy","","remove scaling and cropping from the surface",523,null],[10,"set_source","","set the source rectangle for cropping",523,null],[10,"set_destination","","set the surface size for scaling",523,null],[0,"server","wayland_protocols::viewporter","Server-side API of this protocol",null,null],[0,"wp_viewporter","wayland_protocols::viewporter::server","surface cropping and scaling",null,null],[3,"WpViewporter","wayland_protocols::viewporter::server::wp_viewporter","",null,null],[4,"Error","","",null,null],[13,"ViewportExists","","the surface already has a viewport object associated",524,null],[4,"Request","","",null,null],[13,"Destroy","","unbind from the cropping and scaling interface",525,null],[13,"GetViewport","","extend surface interface for crop and scale",525,null],[12,"id","wayland_protocols::viewporter::server::wp_viewporter::Request","",525,null],[12,"surface","","",525,null],[4,"Event","wayland_protocols::viewporter::server::wp_viewporter","",null,null],[0,"wp_viewport","wayland_protocols::viewporter::server","crop and scale interface to a wl_surface",null,null],[3,"WpViewport","wayland_protocols::viewporter::server::wp_viewport","",null,null],[4,"Error","","",null,null],[13,"BadValue","","negative or zero values in width or height",526,null],[13,"BadSize","","destination size is not integer",526,null],[13,"OutOfBuffer","","source rectangle extends outside of the content area",526,null],[13,"NoSurface","","the wl_surface was destroyed",526,null],[4,"Request","","",null,null],[13,"Destroy","","remove scaling and cropping from the surface",527,null],[13,"SetSource","","set the source rectangle for cropping",527,null],[12,"x","wayland_protocols::viewporter::server::wp_viewport::Request","",527,null],[12,"y","","",527,null],[12,"width","","",527,null],[12,"height","","",527,null],[13,"SetDestination","wayland_protocols::viewporter::server::wp_viewport","set the surface size for scaling",527,null],[12,"width","wayland_protocols::viewporter::server::wp_viewport::Request","",527,null],[12,"height","","",527,null],[4,"Event","wayland_protocols::viewporter::server::wp_viewport","",null,null],[0,"c_interfaces","wayland_protocols::viewporter","C interfaces for this protocol",null,null],[7,"wl_surface_interface","wayland_protocols::viewporter::c_interfaces","",null,null],[7,"wp_viewporter_requests","","",null,null],[7,"wp_viewporter_interface","","",null,null],[7,"wp_viewport_requests","","",null,null],[7,"wp_viewport_interface","","",null,null],[11,"clone","wayland_protocols::presentation_time::client::wp_presentation","",468,{"i":[{"n":"self"}],"o":{"n":"error"}}],[11,"fmt","","",468,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",468,{"i":[{"n":"self"},{"n":"error"}],"o":{"n":"bool"}}],[11,"from_raw","","",468,{"i":[{"n":"u32"}],"o":{"g":["error"],"n":"option"}}],[11,"to_raw","","",468,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"is_destructor","","",469,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",469,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",469,null],[11,"into_raw","","",469,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",469,null],[11,"as_raw_c_in","","",469,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",470,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",470,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",470,null],[11,"into_raw","","",470,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",470,null],[11,"as_raw_c_in","","",470,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",528,null],[11,"clone","wayland_protocols::presentation_time::client::wp_presentation_feedback","",472,{"i":[{"n":"self"}],"o":{"n":"kind"}}],[11,"fmt","","",472,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",472,{"i":[{"n":"self"},{"n":"kind"}],"o":{"n":"bool"}}],[11,"from_raw","","",472,{"i":[{"n":"u32"}],"o":{"g":["kind"],"n":"option"}}],[11,"to_raw","","",472,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"is_destructor","","",529,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",529,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",529,null],[11,"into_raw","","",529,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",529,null],[11,"as_raw_c_in","","",529,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",473,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",473,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",473,null],[11,"into_raw","","",473,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",473,null],[11,"as_raw_c_in","","",473,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",530,null],[11,"clone","wayland_protocols::presentation_time::server::wp_presentation","",474,{"i":[{"n":"self"}],"o":{"n":"error"}}],[11,"fmt","","",474,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",474,{"i":[{"n":"self"},{"n":"error"}],"o":{"n":"bool"}}],[11,"from_raw","","",474,{"i":[{"n":"u32"}],"o":{"g":["error"],"n":"option"}}],[11,"to_raw","","",474,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"is_destructor","","",475,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",475,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",475,null],[11,"into_raw","","",475,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",475,null],[11,"as_raw_c_in","","",475,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",476,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",476,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",476,null],[11,"into_raw","","",476,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",476,null],[11,"as_raw_c_in","","",476,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",531,null],[11,"clone","wayland_protocols::presentation_time::server::wp_presentation_feedback","",477,{"i":[{"n":"self"}],"o":{"n":"kind"}}],[11,"fmt","","",477,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",477,{"i":[{"n":"self"},{"n":"kind"}],"o":{"n":"bool"}}],[11,"from_raw","","",477,{"i":[{"n":"u32"}],"o":{"g":["kind"],"n":"option"}}],[11,"to_raw","","",477,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"is_destructor","","",532,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",532,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",532,null],[11,"into_raw","","",532,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",532,null],[11,"as_raw_c_in","","",532,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",478,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",478,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",478,null],[11,"into_raw","","",478,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",478,null],[11,"as_raw_c_in","","",478,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",533,null],[11,"clone","wayland_protocols::xdg_shell::client::xdg_wm_base","",479,{"i":[{"n":"self"}],"o":{"n":"error"}}],[11,"fmt","","",479,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",479,{"i":[{"n":"self"},{"n":"error"}],"o":{"n":"bool"}}],[11,"from_raw","","",479,{"i":[{"n":"u32"}],"o":{"g":["error"],"n":"option"}}],[11,"to_raw","","",479,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"is_destructor","","",480,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",480,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",480,null],[11,"into_raw","","",480,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",480,null],[11,"as_raw_c_in","","",480,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",481,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",481,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",481,null],[11,"into_raw","","",481,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",481,null],[11,"as_raw_c_in","","",481,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",534,null],[11,"clone","wayland_protocols::xdg_shell::client::xdg_positioner","",483,{"i":[{"n":"self"}],"o":{"n":"error"}}],[11,"fmt","","",483,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",483,{"i":[{"n":"self"},{"n":"error"}],"o":{"n":"bool"}}],[11,"from_raw","","",483,{"i":[{"n":"u32"}],"o":{"g":["error"],"n":"option"}}],[11,"to_raw","","",483,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"clone","","",484,{"i":[{"n":"self"}],"o":{"n":"anchor"}}],[11,"fmt","","",484,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",484,{"i":[{"n":"self"},{"n":"anchor"}],"o":{"n":"bool"}}],[11,"from_raw","","",484,{"i":[{"n":"u32"}],"o":{"g":["anchor"],"n":"option"}}],[11,"to_raw","","",484,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"clone","","",485,{"i":[{"n":"self"}],"o":{"n":"gravity"}}],[11,"fmt","","",485,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",485,{"i":[{"n":"self"},{"n":"gravity"}],"o":{"n":"bool"}}],[11,"from_raw","","",485,{"i":[{"n":"u32"}],"o":{"g":["gravity"],"n":"option"}}],[11,"to_raw","","",485,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"eq","","",535,{"i":[{"n":"self"},{"n":"constraintadjustment"}],"o":{"n":"bool"}}],[11,"ne","","",535,{"i":[{"n":"self"},{"n":"constraintadjustment"}],"o":{"n":"bool"}}],[11,"clone","","",535,{"i":[{"n":"self"}],"o":{"n":"constraintadjustment"}}],[11,"partial_cmp","","",535,{"i":[{"n":"self"},{"n":"constraintadjustment"}],"o":{"g":["ordering"],"n":"option"}}],[11,"lt","","",535,{"i":[{"n":"self"},{"n":"constraintadjustment"}],"o":{"n":"bool"}}],[11,"le","","",535,{"i":[{"n":"self"},{"n":"constraintadjustment"}],"o":{"n":"bool"}}],[11,"gt","","",535,{"i":[{"n":"self"},{"n":"constraintadjustment"}],"o":{"n":"bool"}}],[11,"ge","","",535,{"i":[{"n":"self"},{"n":"constraintadjustment"}],"o":{"n":"bool"}}],[11,"cmp","","",535,{"i":[{"n":"self"},{"n":"constraintadjustment"}],"o":{"n":"ordering"}}],[11,"hash","","",535,null],[11,"fmt","","",535,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",535,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",535,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",535,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",535,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[18,"None","","don't move the child surface when constrained",535,null],[18,"SlideX","","move along the x axis until unconstrained",535,null],[18,"SlideY","","move along the y axis until unconstrained",535,null],[18,"FlipX","","invert the anchor and gravity on the x axis",535,null],[18,"FlipY","","invert the anchor and gravity on the y axis",535,null],[18,"ResizeX","","horizontally resize the surface",535,null],[18,"ResizeY","","vertically resize the surface",535,null],[11,"empty","","Returns an empty set of flags.",535,{"o":{"n":"constraintadjustment"}}],[11,"all","","Returns the set containing all flags.",535,{"o":{"n":"constraintadjustment"}}],[11,"bits","","Returns the raw value of the flags currently stored.",535,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",535,{"i":[{"n":"u32"}],"o":{"g":["constraintadjustment"],"n":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",535,{"i":[{"n":"u32"}],"o":{"n":"constraintadjustment"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",535,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",535,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",535,{"i":[{"n":"self"},{"n":"constraintadjustment"}],"o":{"n":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",535,{"i":[{"n":"self"},{"n":"constraintadjustment"}],"o":{"n":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",535,{"i":[{"n":"self"},{"n":"constraintadjustment"}]}],[11,"remove","","Removes the specified flags in-place.",535,{"i":[{"n":"self"},{"n":"constraintadjustment"}]}],[11,"toggle","","Toggles the specified flags in-place.",535,{"i":[{"n":"self"},{"n":"constraintadjustment"}]}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",535,{"i":[{"n":"self"},{"n":"constraintadjustment"},{"n":"bool"}]}],[11,"bitor","","Returns the union of the two sets of flags.",535,{"i":[{"n":"self"},{"n":"constraintadjustment"}],"o":{"n":"constraintadjustment"}}],[11,"bitor_assign","","Adds the set of flags.",535,{"i":[{"n":"self"},{"n":"constraintadjustment"}]}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",535,{"i":[{"n":"self"},{"n":"constraintadjustment"}],"o":{"n":"constraintadjustment"}}],[11,"bitxor_assign","","Toggles the set of flags.",535,{"i":[{"n":"self"},{"n":"constraintadjustment"}]}],[11,"bitand","","Returns the intersection between the two sets of flags.",535,{"i":[{"n":"self"},{"n":"constraintadjustment"}],"o":{"n":"constraintadjustment"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",535,{"i":[{"n":"self"},{"n":"constraintadjustment"}]}],[11,"sub","","Returns the set difference of the two sets of flags.",535,{"i":[{"n":"self"},{"n":"constraintadjustment"}],"o":{"n":"constraintadjustment"}}],[11,"sub_assign","","Disables all flags enabled in the set.",535,{"i":[{"n":"self"},{"n":"constraintadjustment"}]}],[11,"not","","Returns the complement of this set of flags.",535,{"i":[{"n":"self"}],"o":{"n":"constraintadjustment"}}],[11,"extend","","",535,{"i":[{"n":"self"},{"n":"t"}]}],[11,"from_iter","","",535,{"i":[{"n":"t"}],"o":{"n":"constraintadjustment"}}],[11,"from_raw","","",535,{"i":[{"n":"u32"}],"o":{"g":["constraintadjustment"],"n":"option"}}],[11,"to_raw","","",535,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"is_destructor","","",486,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",486,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",486,null],[11,"into_raw","","",486,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",486,null],[11,"as_raw_c_in","","",486,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",536,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",536,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",536,null],[11,"into_raw","","",536,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",536,null],[11,"as_raw_c_in","","",536,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",537,null],[11,"clone","wayland_protocols::xdg_shell::client::xdg_surface","",488,{"i":[{"n":"self"}],"o":{"n":"error"}}],[11,"fmt","","",488,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",488,{"i":[{"n":"self"},{"n":"error"}],"o":{"n":"bool"}}],[11,"from_raw","","",488,{"i":[{"n":"u32"}],"o":{"g":["error"],"n":"option"}}],[11,"to_raw","","",488,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"is_destructor","","",489,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",489,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",489,null],[11,"into_raw","","",489,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",489,null],[11,"as_raw_c_in","","",489,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",490,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",490,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",490,null],[11,"into_raw","","",490,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",490,null],[11,"as_raw_c_in","","",490,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",538,null],[11,"clone","wayland_protocols::xdg_shell::client::xdg_toplevel","",492,{"i":[{"n":"self"}],"o":{"n":"resizeedge"}}],[11,"fmt","","",492,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",492,{"i":[{"n":"self"},{"n":"resizeedge"}],"o":{"n":"bool"}}],[11,"from_raw","","",492,{"i":[{"n":"u32"}],"o":{"g":["resizeedge"],"n":"option"}}],[11,"to_raw","","",492,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"clone","","",493,{"i":[{"n":"self"}],"o":{"n":"state"}}],[11,"fmt","","",493,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",493,{"i":[{"n":"self"},{"n":"state"}],"o":{"n":"bool"}}],[11,"from_raw","","",493,{"i":[{"n":"u32"}],"o":{"g":["state"],"n":"option"}}],[11,"to_raw","","",493,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"is_destructor","","",494,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",494,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",494,null],[11,"into_raw","","",494,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",494,null],[11,"as_raw_c_in","","",494,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",495,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",495,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",495,null],[11,"into_raw","","",495,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",495,null],[11,"as_raw_c_in","","",495,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",539,null],[11,"clone","wayland_protocols::xdg_shell::client::xdg_popup","",497,{"i":[{"n":"self"}],"o":{"n":"error"}}],[11,"fmt","","",497,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",497,{"i":[{"n":"self"},{"n":"error"}],"o":{"n":"bool"}}],[11,"from_raw","","",497,{"i":[{"n":"u32"}],"o":{"g":["error"],"n":"option"}}],[11,"to_raw","","",497,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"is_destructor","","",498,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",498,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",498,null],[11,"into_raw","","",498,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",498,null],[11,"as_raw_c_in","","",498,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",499,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",499,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",499,null],[11,"into_raw","","",499,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",499,null],[11,"as_raw_c_in","","",499,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",540,null],[11,"clone","wayland_protocols::xdg_shell::server::xdg_wm_base","",501,{"i":[{"n":"self"}],"o":{"n":"error"}}],[11,"fmt","","",501,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",501,{"i":[{"n":"self"},{"n":"error"}],"o":{"n":"bool"}}],[11,"from_raw","","",501,{"i":[{"n":"u32"}],"o":{"g":["error"],"n":"option"}}],[11,"to_raw","","",501,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"is_destructor","","",502,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",502,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",502,null],[11,"into_raw","","",502,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",502,null],[11,"as_raw_c_in","","",502,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",503,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",503,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",503,null],[11,"into_raw","","",503,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",503,null],[11,"as_raw_c_in","","",503,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",541,null],[11,"clone","wayland_protocols::xdg_shell::server::xdg_positioner","",504,{"i":[{"n":"self"}],"o":{"n":"error"}}],[11,"fmt","","",504,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",504,{"i":[{"n":"self"},{"n":"error"}],"o":{"n":"bool"}}],[11,"from_raw","","",504,{"i":[{"n":"u32"}],"o":{"g":["error"],"n":"option"}}],[11,"to_raw","","",504,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"clone","","",505,{"i":[{"n":"self"}],"o":{"n":"anchor"}}],[11,"fmt","","",505,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",505,{"i":[{"n":"self"},{"n":"anchor"}],"o":{"n":"bool"}}],[11,"from_raw","","",505,{"i":[{"n":"u32"}],"o":{"g":["anchor"],"n":"option"}}],[11,"to_raw","","",505,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"clone","","",506,{"i":[{"n":"self"}],"o":{"n":"gravity"}}],[11,"fmt","","",506,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",506,{"i":[{"n":"self"},{"n":"gravity"}],"o":{"n":"bool"}}],[11,"from_raw","","",506,{"i":[{"n":"u32"}],"o":{"g":["gravity"],"n":"option"}}],[11,"to_raw","","",506,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"eq","","",542,{"i":[{"n":"self"},{"n":"constraintadjustment"}],"o":{"n":"bool"}}],[11,"ne","","",542,{"i":[{"n":"self"},{"n":"constraintadjustment"}],"o":{"n":"bool"}}],[11,"clone","","",542,{"i":[{"n":"self"}],"o":{"n":"constraintadjustment"}}],[11,"partial_cmp","","",542,{"i":[{"n":"self"},{"n":"constraintadjustment"}],"o":{"g":["ordering"],"n":"option"}}],[11,"lt","","",542,{"i":[{"n":"self"},{"n":"constraintadjustment"}],"o":{"n":"bool"}}],[11,"le","","",542,{"i":[{"n":"self"},{"n":"constraintadjustment"}],"o":{"n":"bool"}}],[11,"gt","","",542,{"i":[{"n":"self"},{"n":"constraintadjustment"}],"o":{"n":"bool"}}],[11,"ge","","",542,{"i":[{"n":"self"},{"n":"constraintadjustment"}],"o":{"n":"bool"}}],[11,"cmp","","",542,{"i":[{"n":"self"},{"n":"constraintadjustment"}],"o":{"n":"ordering"}}],[11,"hash","","",542,null],[11,"fmt","","",542,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",542,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",542,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",542,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",542,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[18,"None","","don't move the child surface when constrained",542,null],[18,"SlideX","","move along the x axis until unconstrained",542,null],[18,"SlideY","","move along the y axis until unconstrained",542,null],[18,"FlipX","","invert the anchor and gravity on the x axis",542,null],[18,"FlipY","","invert the anchor and gravity on the y axis",542,null],[18,"ResizeX","","horizontally resize the surface",542,null],[18,"ResizeY","","vertically resize the surface",542,null],[11,"empty","","Returns an empty set of flags.",542,{"o":{"n":"constraintadjustment"}}],[11,"all","","Returns the set containing all flags.",542,{"o":{"n":"constraintadjustment"}}],[11,"bits","","Returns the raw value of the flags currently stored.",542,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",542,{"i":[{"n":"u32"}],"o":{"g":["constraintadjustment"],"n":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",542,{"i":[{"n":"u32"}],"o":{"n":"constraintadjustment"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",542,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",542,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",542,{"i":[{"n":"self"},{"n":"constraintadjustment"}],"o":{"n":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",542,{"i":[{"n":"self"},{"n":"constraintadjustment"}],"o":{"n":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",542,{"i":[{"n":"self"},{"n":"constraintadjustment"}]}],[11,"remove","","Removes the specified flags in-place.",542,{"i":[{"n":"self"},{"n":"constraintadjustment"}]}],[11,"toggle","","Toggles the specified flags in-place.",542,{"i":[{"n":"self"},{"n":"constraintadjustment"}]}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",542,{"i":[{"n":"self"},{"n":"constraintadjustment"},{"n":"bool"}]}],[11,"bitor","","Returns the union of the two sets of flags.",542,{"i":[{"n":"self"},{"n":"constraintadjustment"}],"o":{"n":"constraintadjustment"}}],[11,"bitor_assign","","Adds the set of flags.",542,{"i":[{"n":"self"},{"n":"constraintadjustment"}]}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",542,{"i":[{"n":"self"},{"n":"constraintadjustment"}],"o":{"n":"constraintadjustment"}}],[11,"bitxor_assign","","Toggles the set of flags.",542,{"i":[{"n":"self"},{"n":"constraintadjustment"}]}],[11,"bitand","","Returns the intersection between the two sets of flags.",542,{"i":[{"n":"self"},{"n":"constraintadjustment"}],"o":{"n":"constraintadjustment"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",542,{"i":[{"n":"self"},{"n":"constraintadjustment"}]}],[11,"sub","","Returns the set difference of the two sets of flags.",542,{"i":[{"n":"self"},{"n":"constraintadjustment"}],"o":{"n":"constraintadjustment"}}],[11,"sub_assign","","Disables all flags enabled in the set.",542,{"i":[{"n":"self"},{"n":"constraintadjustment"}]}],[11,"not","","Returns the complement of this set of flags.",542,{"i":[{"n":"self"}],"o":{"n":"constraintadjustment"}}],[11,"extend","","",542,{"i":[{"n":"self"},{"n":"t"}]}],[11,"from_iter","","",542,{"i":[{"n":"t"}],"o":{"n":"constraintadjustment"}}],[11,"from_raw","","",542,{"i":[{"n":"u32"}],"o":{"g":["constraintadjustment"],"n":"option"}}],[11,"to_raw","","",542,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"is_destructor","","",507,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",507,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",507,null],[11,"into_raw","","",507,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",507,null],[11,"as_raw_c_in","","",507,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",543,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",543,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",543,null],[11,"into_raw","","",543,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",543,null],[11,"as_raw_c_in","","",543,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",544,null],[11,"clone","wayland_protocols::xdg_shell::server::xdg_surface","",508,{"i":[{"n":"self"}],"o":{"n":"error"}}],[11,"fmt","","",508,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",508,{"i":[{"n":"self"},{"n":"error"}],"o":{"n":"bool"}}],[11,"from_raw","","",508,{"i":[{"n":"u32"}],"o":{"g":["error"],"n":"option"}}],[11,"to_raw","","",508,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"is_destructor","","",509,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",509,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",509,null],[11,"into_raw","","",509,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",509,null],[11,"as_raw_c_in","","",509,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",510,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",510,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",510,null],[11,"into_raw","","",510,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",510,null],[11,"as_raw_c_in","","",510,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",545,null],[11,"clone","wayland_protocols::xdg_shell::server::xdg_toplevel","",511,{"i":[{"n":"self"}],"o":{"n":"resizeedge"}}],[11,"fmt","","",511,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",511,{"i":[{"n":"self"},{"n":"resizeedge"}],"o":{"n":"bool"}}],[11,"from_raw","","",511,{"i":[{"n":"u32"}],"o":{"g":["resizeedge"],"n":"option"}}],[11,"to_raw","","",511,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"clone","","",512,{"i":[{"n":"self"}],"o":{"n":"state"}}],[11,"fmt","","",512,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",512,{"i":[{"n":"self"},{"n":"state"}],"o":{"n":"bool"}}],[11,"from_raw","","",512,{"i":[{"n":"u32"}],"o":{"g":["state"],"n":"option"}}],[11,"to_raw","","",512,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"is_destructor","","",513,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",513,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",513,null],[11,"into_raw","","",513,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",513,null],[11,"as_raw_c_in","","",513,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",514,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",514,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",514,null],[11,"into_raw","","",514,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",514,null],[11,"as_raw_c_in","","",514,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",546,null],[11,"clone","wayland_protocols::xdg_shell::server::xdg_popup","",515,{"i":[{"n":"self"}],"o":{"n":"error"}}],[11,"fmt","","",515,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",515,{"i":[{"n":"self"},{"n":"error"}],"o":{"n":"bool"}}],[11,"from_raw","","",515,{"i":[{"n":"u32"}],"o":{"g":["error"],"n":"option"}}],[11,"to_raw","","",515,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"is_destructor","","",516,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",516,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",516,null],[11,"into_raw","","",516,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",516,null],[11,"as_raw_c_in","","",516,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",517,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",517,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",517,null],[11,"into_raw","","",517,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",517,null],[11,"as_raw_c_in","","",517,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",547,null],[11,"clone","wayland_protocols::viewporter::client::wp_viewporter","",518,{"i":[{"n":"self"}],"o":{"n":"error"}}],[11,"fmt","","",518,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",518,{"i":[{"n":"self"},{"n":"error"}],"o":{"n":"bool"}}],[11,"from_raw","","",518,{"i":[{"n":"u32"}],"o":{"g":["error"],"n":"option"}}],[11,"to_raw","","",518,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"is_destructor","","",519,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",519,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",519,null],[11,"into_raw","","",519,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",519,null],[11,"as_raw_c_in","","",519,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",548,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",548,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",548,null],[11,"into_raw","","",548,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",548,null],[11,"as_raw_c_in","","",548,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",549,null],[11,"clone","wayland_protocols::viewporter::client::wp_viewport","",521,{"i":[{"n":"self"}],"o":{"n":"error"}}],[11,"fmt","","",521,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",521,{"i":[{"n":"self"},{"n":"error"}],"o":{"n":"bool"}}],[11,"from_raw","","",521,{"i":[{"n":"u32"}],"o":{"g":["error"],"n":"option"}}],[11,"to_raw","","",521,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"is_destructor","","",522,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",522,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",522,null],[11,"into_raw","","",522,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",522,null],[11,"as_raw_c_in","","",522,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",550,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",550,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",550,null],[11,"into_raw","","",550,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",550,null],[11,"as_raw_c_in","","",550,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",551,null],[11,"clone","wayland_protocols::viewporter::server::wp_viewporter","",524,{"i":[{"n":"self"}],"o":{"n":"error"}}],[11,"fmt","","",524,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",524,{"i":[{"n":"self"},{"n":"error"}],"o":{"n":"bool"}}],[11,"from_raw","","",524,{"i":[{"n":"u32"}],"o":{"g":["error"],"n":"option"}}],[11,"to_raw","","",524,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"is_destructor","","",525,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",525,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",525,null],[11,"into_raw","","",525,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",525,null],[11,"as_raw_c_in","","",525,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",552,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",552,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",552,null],[11,"into_raw","","",552,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",552,null],[11,"as_raw_c_in","","",552,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",553,null],[11,"clone","wayland_protocols::viewporter::server::wp_viewport","",526,{"i":[{"n":"self"}],"o":{"n":"error"}}],[11,"fmt","","",526,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",526,{"i":[{"n":"self"},{"n":"error"}],"o":{"n":"bool"}}],[11,"from_raw","","",526,{"i":[{"n":"u32"}],"o":{"g":["error"],"n":"option"}}],[11,"to_raw","","",526,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"is_destructor","","",527,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",527,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",527,null],[11,"into_raw","","",527,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",527,null],[11,"as_raw_c_in","","",527,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",554,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",554,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",554,null],[11,"into_raw","","",554,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",554,null],[11,"as_raw_c_in","","",554,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",555,null]],"paths":[[4,"Capability"],[4,"PresentMethod"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Event"],[4,"Capability"],[4,"PresentMethod"],[4,"Error"],[4,"Request"],[4,"Event"],[4,"Event"],[3,"ZwpFullscreenShellV1"],[4,"Request"],[3,"ZwpFullscreenShellModeFeedbackV1"],[3,"ZwpFullscreenShellV1"],[4,"Request"],[3,"ZwpFullscreenShellModeFeedbackV1"],[4,"Request"],[8,"RequestsTrait"],[4,"Request"],[8,"RequestsTrait"],[4,"Request"],[4,"Request"],[4,"Event"],[3,"ZwpIdleInhibitManagerV1"],[4,"Event"],[3,"ZwpIdleInhibitorV1"],[4,"Event"],[3,"ZwpIdleInhibitManagerV1"],[4,"Event"],[3,"ZwpIdleInhibitorV1"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Event"],[4,"Request"],[8,"RequestsTrait"],[4,"Position"],[4,"Request"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[4,"Event"],[4,"Request"],[4,"Position"],[4,"Request"],[3,"ZwpInputMethodContextV1"],[4,"Request"],[3,"ZwpInputMethodV1"],[4,"Event"],[3,"ZwpInputPanelV1"],[4,"Event"],[3,"ZwpInputPanelSurfaceV1"],[3,"ZwpInputMethodContextV1"],[4,"Request"],[3,"ZwpInputMethodV1"],[4,"Event"],[3,"ZwpInputPanelV1"],[4,"Event"],[3,"ZwpInputPanelSurfaceV1"],[4,"Error"],[4,"Request"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Error"],[4,"Request"],[4,"Request"],[4,"Event"],[4,"Event"],[3,"ZwpKeyboardShortcutsInhibitManagerV1"],[3,"ZwpKeyboardShortcutsInhibitorV1"],[4,"Event"],[3,"ZwpKeyboardShortcutsInhibitManagerV1"],[3,"ZwpKeyboardShortcutsInhibitorV1"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Error"],[4,"Flags"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[4,"Error"],[4,"Flags"],[4,"Request"],[4,"Event"],[3,"ZwpLinuxDmabufV1"],[3,"ZwpLinuxBufferParamsV1"],[3,"ZwpLinuxDmabufV1"],[3,"ZwpLinuxBufferParamsV1"],[4,"Error"],[4,"Lifetime"],[4,"Request"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Error"],[4,"Lifetime"],[4,"Request"],[4,"Request"],[4,"Event"],[4,"Request"],[4,"Event"],[4,"Event"],[3,"ZwpPointerConstraintsV1"],[3,"ZwpLockedPointerV1"],[3,"ZwpConfinedPointerV1"],[4,"Event"],[3,"ZwpPointerConstraintsV1"],[3,"ZwpLockedPointerV1"],[3,"ZwpConfinedPointerV1"],[4,"Request"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[4,"Request"],[4,"Event"],[4,"Request"],[4,"Event"],[4,"Event"],[3,"ZwpPointerGesturesV1"],[3,"ZwpPointerGestureSwipeV1"],[3,"ZwpPointerGesturePinchV1"],[4,"Event"],[3,"ZwpPointerGesturesV1"],[3,"ZwpPointerGestureSwipeV1"],[3,"ZwpPointerGesturePinchV1"],[4,"Request"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[4,"Request"],[4,"Event"],[4,"Event"],[3,"ZwpRelativePointerManagerV1"],[3,"ZwpRelativePointerV1"],[4,"Event"],[3,"ZwpRelativePointerManagerV1"],[3,"ZwpRelativePointerV1"],[4,"Request"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Type"],[4,"Capability"],[4,"ButtonState"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[4,"Request"],[4,"Event"],[4,"Type"],[4,"Capability"],[4,"ButtonState"],[4,"Error"],[4,"Request"],[4,"Event"],[4,"Request"],[4,"Event"],[4,"Event"],[3,"ZwpTabletManagerV1"],[3,"ZwpTabletSeatV1"],[3,"ZwpTabletToolV1"],[3,"ZwpTabletV1"],[4,"Event"],[3,"ZwpTabletManagerV1"],[3,"ZwpTabletSeatV1"],[3,"ZwpTabletToolV1"],[3,"ZwpTabletV1"],[4,"Request"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Type"],[4,"Capability"],[4,"ButtonState"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Source"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Source"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"ButtonState"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[4,"Request"],[4,"Event"],[4,"Type"],[4,"Capability"],[4,"ButtonState"],[4,"Error"],[4,"Request"],[4,"Event"],[4,"Request"],[4,"Event"],[4,"Source"],[4,"Request"],[4,"Event"],[4,"Source"],[4,"Request"],[4,"Event"],[4,"Request"],[4,"Event"],[4,"ButtonState"],[4,"Request"],[4,"Event"],[4,"Event"],[3,"ZwpTabletManagerV2"],[3,"ZwpTabletSeatV2"],[3,"ZwpTabletToolV2"],[3,"ZwpTabletV2"],[3,"ZwpTabletPadRingV2"],[3,"ZwpTabletPadStripV2"],[3,"ZwpTabletPadGroupV2"],[3,"ZwpTabletPadV2"],[4,"Event"],[3,"ZwpTabletManagerV2"],[3,"ZwpTabletSeatV2"],[3,"ZwpTabletToolV2"],[3,"ZwpTabletV2"],[3,"ZwpTabletPadRingV2"],[3,"ZwpTabletPadStripV2"],[3,"ZwpTabletPadGroupV2"],[3,"ZwpTabletPadV2"],[4,"ContentHint"],[4,"ContentPurpose"],[4,"PreeditStyle"],[4,"TextDirection"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[8,"RequestsTrait"],[4,"ContentHint"],[4,"ContentPurpose"],[4,"PreeditStyle"],[4,"TextDirection"],[4,"Request"],[4,"Event"],[4,"Request"],[3,"ZwpTextInputV1"],[4,"Event"],[3,"ZwpTextInputManagerV1"],[3,"ZwpTextInputV1"],[4,"Event"],[3,"ZwpTextInputManagerV1"],[4,"Request"],[8,"RequestsTrait"],[4,"Error"],[4,"Mode"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[4,"Error"],[4,"Mode"],[4,"Request"],[4,"Event"],[4,"Event"],[3,"ZxdgDecorationManagerV1"],[3,"ZxdgToplevelDecorationV1"],[4,"Event"],[3,"ZxdgDecorationManagerV1"],[3,"ZxdgToplevelDecorationV1"],[4,"Request"],[8,"RequestsTrait"],[4,"Request"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[4,"Request"],[4,"Request"],[4,"Event"],[4,"Request"],[4,"Event"],[4,"Event"],[3,"ZxdgExporterV1"],[4,"Event"],[3,"ZxdgImporterV1"],[3,"ZxdgExportedV1"],[3,"ZxdgImportedV1"],[4,"Event"],[3,"ZxdgExporterV1"],[4,"Event"],[3,"ZxdgImporterV1"],[3,"ZxdgExportedV1"],[3,"ZxdgImportedV1"],[4,"Request"],[8,"RequestsTrait"],[4,"Request"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[4,"Request"],[4,"Request"],[4,"Event"],[4,"Request"],[4,"Event"],[4,"Event"],[3,"ZxdgExporterV2"],[4,"Event"],[3,"ZxdgImporterV2"],[3,"ZxdgExportedV2"],[3,"ZxdgImportedV2"],[4,"Event"],[3,"ZxdgExporterV2"],[4,"Event"],[3,"ZxdgImporterV2"],[3,"ZxdgExportedV2"],[3,"ZxdgImportedV2"],[4,"Request"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[4,"Request"],[4,"Event"],[4,"Event"],[3,"ZxdgOutputManagerV1"],[3,"ZxdgOutputV1"],[4,"Event"],[3,"ZxdgOutputManagerV1"],[3,"ZxdgOutputV1"],[4,"Version"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"ResizeEdge"],[4,"State"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Version"],[4,"Error"],[4,"Request"],[4,"Event"],[4,"ResizeEdge"],[4,"State"],[4,"Request"],[4,"Event"],[4,"Request"],[4,"Event"],[3,"XdgShell"],[3,"XdgSurface"],[3,"XdgPopup"],[3,"XdgShell"],[3,"XdgSurface"],[3,"XdgPopup"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Error"],[4,"Request"],[8,"RequestsTrait"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"ResizeEdge"],[4,"State"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Error"],[4,"Request"],[4,"Event"],[4,"Error"],[4,"Request"],[4,"Error"],[4,"Request"],[4,"Event"],[4,"ResizeEdge"],[4,"State"],[4,"Request"],[4,"Event"],[4,"Error"],[4,"Request"],[4,"Event"],[3,"ZxdgShellV6"],[3,"Anchor"],[3,"Gravity"],[3,"ConstraintAdjustment"],[4,"Event"],[3,"ZxdgPositionerV6"],[3,"ZxdgSurfaceV6"],[3,"ZxdgToplevelV6"],[3,"ZxdgPopupV6"],[3,"ZxdgShellV6"],[3,"Anchor"],[3,"Gravity"],[3,"ConstraintAdjustment"],[4,"Event"],[3,"ZxdgPositionerV6"],[3,"ZxdgSurfaceV6"],[3,"ZxdgToplevelV6"],[3,"ZxdgPopupV6"],[4,"Request"],[8,"RequestsTrait"],[4,"Request"],[8,"RequestsTrait"],[4,"Request"],[4,"Request"],[4,"Event"],[3,"ZwpXwaylandKeyboardGrabManagerV1"],[4,"Event"],[3,"ZwpXwaylandKeyboardGrabV1"],[4,"Event"],[3,"ZwpXwaylandKeyboardGrabManagerV1"],[4,"Event"],[3,"ZwpXwaylandKeyboardGrabV1"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Kind"],[4,"Event"],[4,"Error"],[4,"Request"],[4,"Event"],[4,"Kind"],[4,"Event"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Error"],[4,"Anchor"],[4,"Gravity"],[4,"Request"],[8,"RequestsTrait"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"ResizeEdge"],[4,"State"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Error"],[4,"Request"],[4,"Event"],[8,"RequestsTrait"],[4,"Error"],[4,"Request"],[4,"Event"],[4,"Error"],[4,"Anchor"],[4,"Gravity"],[4,"Request"],[4,"Error"],[4,"Request"],[4,"Event"],[4,"ResizeEdge"],[4,"State"],[4,"Request"],[4,"Event"],[4,"Error"],[4,"Request"],[4,"Event"],[4,"Error"],[4,"Request"],[8,"RequestsTrait"],[4,"Error"],[4,"Request"],[8,"RequestsTrait"],[4,"Error"],[4,"Request"],[4,"Error"],[4,"Request"],[3,"WpPresentation"],[4,"Request"],[3,"WpPresentationFeedback"],[3,"WpPresentation"],[4,"Request"],[3,"WpPresentationFeedback"],[3,"XdgWmBase"],[3,"ConstraintAdjustment"],[4,"Event"],[3,"XdgPositioner"],[3,"XdgSurface"],[3,"XdgToplevel"],[3,"XdgPopup"],[3,"XdgWmBase"],[3,"ConstraintAdjustment"],[4,"Event"],[3,"XdgPositioner"],[3,"XdgSurface"],[3,"XdgToplevel"],[3,"XdgPopup"],[4,"Event"],[3,"WpViewporter"],[4,"Event"],[3,"WpViewport"],[4,"Event"],[3,"WpViewporter"],[4,"Event"],[3,"WpViewport"]]};
searchIndex["wayland_scanner"] = {"doc":"Wayland scanner crate","items":[[4,"Side","wayland_scanner","Side to generate",null,null],[13,"Client","","wayland client applications",0,null],[13,"Server","","wayland compositors",0,null],[5,"generate_c_interfaces","","Generate the interfaces for a protocol",null,{"i":[{"n":"p1"},{"n":"p2"}]}],[5,"generate_rust_code","","Generate the code for a protocol using the Rust implementation",null,{"i":[{"n":"p1"},{"n":"p2"},{"n":"side"}]}],[5,"generate_c_code","","Generate the code for a protocol using the C system libs",null,{"i":[{"n":"p1"},{"n":"p2"},{"n":"side"}]}],[5,"generate_c_interfaces_streams","","Generate the interfaces for a protocol from/to IO streams",null,{"i":[{"n":"p1"},{"n":"p2"}]}],[5,"generate_rust_code_streams","","Generate the code for a protocol from/to IO streams using the rust implementation",null,{"i":[{"n":"p1"},{"n":"p2"},{"n":"side"}]}],[5,"generate_c_code_streams","","Generate the code for a protocol from/to IO streams using the C system libs",null,{"i":[{"n":"p1"},{"n":"p2"},{"n":"side"}]}],[11,"clone","","",0,{"i":[{"n":"self"}],"o":{"n":"side"}}],[11,"eq","","",0,{"i":[{"n":"self"},{"n":"side"}],"o":{"n":"bool"}}],[11,"fmt","","",0,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}]],"paths":[[4,"Side"]]};
searchIndex["wayland_server"] = {"doc":"Server-side Wayland connector","items":[[3,"UserDataMap","wayland_server","A storage able to store several values of `UserData` of different types. It behaves similarly to a `TypeMap`.",null,null],[3,"AnonymousObject","","Anonymous interface",null,null],[8,"Interface","","The description of a wayland interface",null,null],[16,"Request","","Set of requests associated to this interface",0,null],[16,"Event","","Set of events associated to this interface",0,null],[18,"NAME","","Name of this interface",0,null],[18,"VERSION","","Maximum supported version of this interface",0,null],[10,"c_interface","","Pointer to the C representation of this interface",0,null],[8,"MessageGroup","","A group of messages",null,null],[18,"MESSAGES","","Wire representation of this MessageGroup",1,null],[16,"Map","","The wrapper type for ObjectMap allowing the mapping of Object and NewId arguments to the object map during parsing.",1,null],[10,"is_destructor","","Whether this message is a destructor",1,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[10,"child","","Retrieve the child `Object` associated with this message if any",1,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[10,"from_raw","","Construct a message from its raw representation",1,null],[10,"into_raw","","Turn this message into its raw representation",1,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[10,"from_raw_c","","Construct a message of this group from its C representation",1,null],[10,"as_raw_c_in","","Build a C representation of this message",1,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[4,"NoMessage","","An empty enum representing a MessageGroup with no messages",null,null],[3,"Client","","A handle to a client connected to your server",null,null],[3,"Display","","The wayland display",null,null],[3,"DisplayToken","","A token that is required for providing non-Send implementations to ressources",null,null],[3,"Global","","A handle to a global object",null,null],[3,"NewResource","","A newly-created resource that needs implementation",null,null],[3,"Resource","","An handle to a wayland resource",null,null],[4,"ResourceMap","","A handle to the object map internal to the lib state",null,null],[11,"clone","","",2,{"i":[{"n":"self"}],"o":{"n":"client"}}],[11,"from_ptr","","Create a client from a `wayland-server.so` pointer",2,null],[11,"c_ptr","","Retrieve a pointer to the underlying `wl_client` of `wayland-server.so`",2,null],[11,"alive","","Check whether this client is still connected to the server",2,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"equals","","Check whether this client handle refers to the same client as an other",2,{"i":[{"n":"self"},{"n":"client"}],"o":{"n":"bool"}}],[11,"flush","","Flush the pending events to this client",2,{"i":[{"n":"self"}]}],[11,"kill","","Kills this client",2,{"i":[{"n":"self"}]}],[11,"data_map","","Access the map handling user data associated to this client",2,{"i":[{"n":"self"}],"o":{"n":"userdatamap"}}],[11,"add_destructor","","Add a destructor for this client",2,{"i":[{"n":"self"},{"n":"f"}]}],[11,"create_resource","","Create a new resource for this client",2,{"i":[{"n":"self"},{"n":"u32"}],"o":{"g":["newresource"],"n":"option"}}],[11,"clone","","",3,{"i":[{"n":"self"}],"o":{"n":"displaytoken"}}],[11,"new","","Create a new display",4,{"i":[{"n":"loophandle"}],"o":{"n":"display"}}],[11,"get_token","","Get a `DisplayToken` for make non-send implementations",4,{"i":[{"n":"self"}],"o":{"n":"displaytoken"}}],[11,"create_global","","Create a new global object",4,{"i":[{"n":"self"},{"n":"u32"},{"n":"f"}],"o":{"n":"global"}}],[11,"create_global_with_filter","","Create a new global object with a filter",4,{"i":[{"n":"self"},{"n":"u32"},{"n":"f1"},{"n":"f2"}],"o":{"n":"global"}}],[11,"flush_clients","","Flush events to the clients",4,{"i":[{"n":"self"}]}],[11,"add_socket","","Add a listening socket to this display",4,{"i":[{"n":"self"},{"n":"option"}],"o":{"n":"ioresult"}}],[11,"add_socket_auto","","Add an automatically named listening socket to this display",4,{"i":[{"n":"self"}],"o":{"g":["osstring"],"n":"ioresult"}}],[11,"add_socket_from","","Add existing listening socket to this display",4,{"i":[{"n":"self"},{"n":"t"}],"o":{"n":"ioresult"}}],[11,"add_socket_fd","","Add existing listening socket to this display from a raw file descriptor",4,{"i":[{"n":"self"},{"n":"rawfd"}],"o":{"n":"ioresult"}}],[11,"create_client","","Create a new client to this display from an already-existing connected Fd",4,{"i":[{"n":"self"},{"n":"rawfd"}],"o":{"n":"client"}}],[11,"c_ptr","","Retrieve a pointer from the C lib to this `wl_display`",4,null],[11,"destroy","","Destroy the associated global object.",5,{"i":[{"n":"self"}]}],[11,"eq","","",6,{"i":[{"n":"self"},{"n":"resource"}],"o":{"n":"bool"}}],[11,"send","","Send an event through this object",6,null],[11,"is_alive","","Check if the object associated with this resource is still alive",6,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"version","","Retrieve the interface version of this wayland object instance",6,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"equals","","Check if the other resource refers to the same underlying wayland object",6,{"i":[{"n":"self"},{"n":"resource"}],"o":{"n":"bool"}}],[11,"same_client_as","","Check if this resource and the other belong to the same client",6,{"i":[{"n":"self"},{"n":"resource"}],"o":{"n":"bool"}}],[11,"post_error","","Posts a protocol error to this resource",6,{"i":[{"n":"self"},{"n":"u32"},{"n":"string"}]}],[11,"user_data","","Access the arbitrary payload associated to this object",6,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"client","","Retrieve an handle to the client associated with this resource",6,{"i":[{"n":"self"}],"o":{"g":["client"],"n":"option"}}],[11,"id","","Retrieve the object id of this wayland object",6,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"is_external","","Check whether this resource is managed by the library or not",6,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"c_ptr","","Get a raw pointer to the underlying wayland object",6,null],[11,"from_c_ptr","","Create a `Resource` instance from a C pointer",6,null],[11,"implement","","Implement this resource using given function, destructor, and user data.",7,{"i":[{"n":"self"},{"n":"f"},{"n":"option"},{"n":"ud"}],"o":{"n":"resource"}}],[11,"implement_nonsend","","Implement this resource using given function and implementation data.",7,{"i":[{"n":"self"},{"n":"f"},{"n":"option"},{"n":"ud"},{"n":"displaytoken"}],"o":{"n":"resource"}}],[11,"c_ptr","","Get a raw pointer to the underlying wayland object",7,null],[11,"from_c_ptr","","Create a `NewResource` instance from a C pointer.",7,null],[11,"clone","","",6,{"i":[{"n":"self"}],"o":{"n":"resource"}}],[0,"sys","","C-associated types",null,null],[0,"common","wayland_server::sys","Various types and functions that are used by both the client and the server libraries.",null,null],[3,"wl_message","wayland_server::sys::common","",null,null],[12,"name","","",8,null],[12,"signature","","",8,null],[12,"types","","",8,null],[3,"wl_interface","","",null,null],[12,"name","","",9,null],[12,"version","","",9,null],[12,"request_count","","",9,null],[12,"requests","","",9,null],[12,"event_count","","",9,null],[12,"events","","",9,null],[3,"wl_list","","",null,null],[12,"prev","","",10,null],[12,"next","","",10,null],[3,"wl_array","","",null,null],[12,"size","","",11,null],[12,"alloc","","",11,null],[12,"data","","",11,null],[6,"wl_fixed_t","","",null,null],[5,"wl_fixed_to_double","","",null,{"i":[{"n":"i32"}],"o":{"n":"f64"}}],[5,"wl_fixed_from_double","","",null,{"i":[{"n":"f64"}],"o":{"n":"i32"}}],[5,"wl_fixed_to_int","","",null,{"i":[{"n":"i32"}],"o":{"n":"i32"}}],[5,"wl_fixed_from_int","","",null,{"i":[{"n":"i32"}],"o":{"n":"i32"}}],[19,"wl_argument","","",null,null],[12,"i","","",12,null],[12,"u","","",12,null],[12,"f","","",12,null],[12,"s","","",12,null],[12,"o","","",12,null],[12,"n","","",12,null],[12,"a","","",12,null],[12,"h","","",12,null],[6,"wl_dispatcher_func_t","","",null,null],[6,"wl_log_func_t","","",null,null],[0,"server","wayland_server::sys","Bindings to the client library `libwayland-server.so`",null,null],[4,"wl_client","wayland_server::sys::server","",null,null],[4,"wl_display","","",null,null],[4,"wl_event_loop","","",null,null],[4,"wl_event_source","","",null,null],[4,"wl_global","","",null,null],[4,"wl_resource","","",null,null],[4,"wl_shm_buffer","","",null,null],[6,"wl_event_loop_fd_func_t","","",null,null],[6,"wl_event_loop_timer_func_t","","",null,null],[6,"wl_event_loop_signal_func_t","","",null,null],[6,"wl_event_loop_idle_func_t","","",null,null],[6,"wl_global_bind_func_t","","",null,null],[6,"wl_notify_func_t","","",null,null],[6,"wl_resource_destroy_func_t","","",null,null],[6,"wl_display_global_filter_func_t","","",null,null],[3,"wl_listener","","",null,null],[12,"link","","",13,null],[12,"notify","","",13,null],[3,"wl_signal","","",null,null],[12,"listener_list","","",14,null],[3,"WaylandServer","","",null,null],[12,"wl_client_flush","","",15,null],[12,"wl_client_destroy","","",15,null],[12,"wl_client_get_display","","",15,null],[12,"wl_client_get_credentials","","",15,null],[12,"wl_client_get_object","","",15,null],[12,"wl_client_add_destroy_listener","","",15,null],[12,"wl_client_get_destroy_listener","","",15,null],[12,"wl_client_post_no_memory","","",15,null],[12,"wl_resource_create","","",15,null],[12,"wl_client_create","","",15,null],[12,"wl_display_create","","",15,null],[12,"wl_display_destroy","","",15,null],[12,"wl_display_get_serial","","",15,null],[12,"wl_display_next_serial","","",15,null],[12,"wl_display_add_socket","","",15,null],[12,"wl_display_add_socket_auto","","",15,null],[12,"wl_display_add_socket_fd","","",15,null],[12,"wl_display_add_shm_format","","",15,null],[12,"wl_display_get_event_loop","","",15,null],[12,"wl_display_terminate","","",15,null],[12,"wl_display_run","","",15,null],[12,"wl_display_flush_clients","","",15,null],[12,"wl_display_add_destroy_listener","","",15,null],[12,"wl_display_get_destroy_listener","","",15,null],[12,"wl_global_create","","",15,null],[12,"wl_display_init_shm","","",15,null],[12,"wl_display_add_client_created_listener","","",15,null],[12,"wl_display_set_global_filter","","",15,null],[12,"wl_event_loop_create","","",15,null],[12,"wl_event_loop_destroy","","",15,null],[12,"wl_event_loop_add_fd","","",15,null],[12,"wl_event_loop_add_timer","","",15,null],[12,"wl_event_loop_add_signal","","",15,null],[12,"wl_event_loop_dispatch","","",15,null],[12,"wl_event_loop_dispatch_idle","","",15,null],[12,"wl_event_loop_add_idle","","",15,null],[12,"wl_event_loop_get_fd","","",15,null],[12,"wl_event_loop_add_destroy_listener","","",15,null],[12,"wl_event_loop_get_destroy_listener","","",15,null],[12,"wl_event_source_fd_update","","",15,null],[12,"wl_event_source_timer_update","","",15,null],[12,"wl_event_source_remove","","",15,null],[12,"wl_event_source_check","","",15,null],[12,"wl_global_destroy","","",15,null],[12,"wl_global_get_user_data","","",15,null],[12,"wl_resource_post_event_array","","",15,null],[12,"wl_resource_queue_event_array","","",15,null],[12,"wl_resource_post_no_memory","","",15,null],[12,"wl_resource_set_implementation","","",15,null],[12,"wl_resource_set_dispatcher","","",15,null],[12,"wl_resource_destroy","","",15,null],[12,"wl_resource_get_client","","",15,null],[12,"wl_resource_get_id","","",15,null],[12,"wl_resource_get_link","","",15,null],[12,"wl_resource_from_link","","",15,null],[12,"wl_resource_find_for_client","","",15,null],[12,"wl_resource_set_user_data","","",15,null],[12,"wl_resource_get_user_data","","",15,null],[12,"wl_resource_get_version","","",15,null],[12,"wl_resource_set_destructor","","",15,null],[12,"wl_resource_instance_of","","",15,null],[12,"wl_resource_add_destroy_listener","","",15,null],[12,"wl_resource_get_destroy_listener","","",15,null],[12,"wl_shm_buffer_begin_access","","",15,null],[12,"wl_shm_buffer_end_access","","",15,null],[12,"wl_shm_buffer_get","","",15,null],[12,"wl_shm_buffer_get_data","","",15,null],[12,"wl_shm_buffer_get_stride","","",15,null],[12,"wl_shm_buffer_get_format","","",15,null],[12,"wl_shm_buffer_get_width","","",15,null],[12,"wl_shm_buffer_get_height","","",15,null],[12,"wl_log_set_handler_server","","",15,null],[12,"wl_list_init","","",15,null],[12,"wl_list_insert","","",15,null],[12,"wl_list_remove","","",15,null],[12,"wl_list_length","","",15,null],[12,"wl_list_empty","","",15,null],[12,"wl_list_insert_list","","",15,null],[12,"wl_array_init","","",15,null],[12,"wl_array_release","","",15,null],[12,"wl_array_add","","",15,null],[12,"wl_array_copy","","",15,null],[12,"wl_resource_post_event","","",15,null],[12,"wl_resource_queue_event","","",15,null],[12,"wl_resource_post_error","","",15,null],[3,"WAYLAND_SERVER_OPTION","","",null,null],[3,"WAYLAND_SERVER_HANDLE","","",null,null],[5,"is_lib_available","","",null,{"o":{"n":"bool"}}],[0,"signal","","",null,null],[5,"wl_signal_init","wayland_server::sys::server::signal","",null,null],[5,"wl_signal_add","","",null,null],[5,"wl_signal_get","","",null,null],[5,"wl_signal_emit","","",null,null],[5,"rust_listener_create","","",null,null],[5,"rust_listener_get_user_data","","",null,null],[5,"rust_listener_set_user_data","","",null,null],[5,"rust_listener_destroy","","",null,null],[0,"protocol_interfaces","wayland_server::sys","",null,null],[7,"wl_display_requests","wayland_server::sys::protocol_interfaces","",null,null],[7,"wl_display_events","","",null,null],[7,"wl_display_interface","","",null,null],[7,"wl_registry_requests","","",null,null],[7,"wl_registry_events","","",null,null],[7,"wl_registry_interface","","",null,null],[7,"wl_callback_events","","",null,null],[7,"wl_callback_interface","","",null,null],[7,"wl_compositor_requests","","",null,null],[7,"wl_compositor_interface","","",null,null],[7,"wl_shm_pool_requests","","",null,null],[7,"wl_shm_pool_interface","","",null,null],[7,"wl_shm_requests","","",null,null],[7,"wl_shm_events","","",null,null],[7,"wl_shm_interface","","",null,null],[7,"wl_buffer_requests","","",null,null],[7,"wl_buffer_events","","",null,null],[7,"wl_buffer_interface","","",null,null],[7,"wl_data_offer_requests","","",null,null],[7,"wl_data_offer_events","","",null,null],[7,"wl_data_offer_interface","","",null,null],[7,"wl_data_source_requests","","",null,null],[7,"wl_data_source_events","","",null,null],[7,"wl_data_source_interface","","",null,null],[7,"wl_data_device_requests","","",null,null],[7,"wl_data_device_events","","",null,null],[7,"wl_data_device_interface","","",null,null],[7,"wl_data_device_manager_requests","","",null,null],[7,"wl_data_device_manager_interface","","",null,null],[7,"wl_shell_requests","","",null,null],[7,"wl_shell_interface","","",null,null],[7,"wl_shell_surface_requests","","",null,null],[7,"wl_shell_surface_events","","",null,null],[7,"wl_shell_surface_interface","","",null,null],[7,"wl_surface_requests","","",null,null],[7,"wl_surface_events","","",null,null],[7,"wl_surface_interface","","",null,null],[7,"wl_seat_requests","","",null,null],[7,"wl_seat_events","","",null,null],[7,"wl_seat_interface","","",null,null],[7,"wl_pointer_requests","","",null,null],[7,"wl_pointer_events","","",null,null],[7,"wl_pointer_interface","","",null,null],[7,"wl_keyboard_requests","","",null,null],[7,"wl_keyboard_events","","",null,null],[7,"wl_keyboard_interface","","",null,null],[7,"wl_touch_requests","","",null,null],[7,"wl_touch_events","","",null,null],[7,"wl_touch_interface","","",null,null],[7,"wl_output_requests","","",null,null],[7,"wl_output_events","","",null,null],[7,"wl_output_interface","","",null,null],[7,"wl_region_requests","","",null,null],[7,"wl_region_interface","","",null,null],[7,"wl_subcompositor_requests","","",null,null],[7,"wl_subcompositor_interface","","",null,null],[7,"wl_subsurface_requests","","",null,null],[7,"wl_subsurface_interface","","",null,null],[11,"get","wayland_server","Retrieve the Resource corresponding to a given id",16,{"i":[{"n":"self"},{"n":"u32"}],"o":{"g":["resource"],"n":"option"}}],[11,"get_new","","Create a new resource for a given id",16,{"i":[{"n":"self"},{"n":"u32"}],"o":{"g":["newresource"],"n":"option"}}],[0,"protocol","","Generated interfaces for the core wayland protocol",null,null],[0,"wl_callback","wayland_server::protocol","callback object",null,null],[3,"WlCallback","wayland_server::protocol::wl_callback","",null,null],[4,"Request","","",null,null],[4,"Event","","",null,null],[13,"Done","","done event",17,null],[12,"callback_data","wayland_server::protocol::wl_callback::Event","",17,null],[0,"wl_compositor","wayland_server::protocol","the compositor singleton",null,null],[3,"WlCompositor","wayland_server::protocol::wl_compositor","",null,null],[4,"Request","","",null,null],[13,"CreateSurface","","create new surface",18,null],[12,"id","wayland_server::protocol::wl_compositor::Request","",18,null],[13,"CreateRegion","wayland_server::protocol::wl_compositor","create new region",18,null],[12,"id","wayland_server::protocol::wl_compositor::Request","",18,null],[4,"Event","wayland_server::protocol::wl_compositor","",null,null],[0,"wl_shm_pool","wayland_server::protocol","a shared memory pool",null,null],[3,"WlShmPool","wayland_server::protocol::wl_shm_pool","",null,null],[4,"Request","","",null,null],[13,"CreateBuffer","","create a buffer from the pool",19,null],[12,"id","wayland_server::protocol::wl_shm_pool::Request","",19,null],[12,"offset","","",19,null],[12,"width","","",19,null],[12,"height","","",19,null],[12,"stride","","",19,null],[12,"format","","",19,null],[13,"Destroy","wayland_server::protocol::wl_shm_pool","destroy the pool",19,null],[13,"Resize","","change the size of the pool mapping",19,null],[12,"size","wayland_server::protocol::wl_shm_pool::Request","",19,null],[4,"Event","wayland_server::protocol::wl_shm_pool","",null,null],[0,"wl_shm","wayland_server::protocol","shared memory support",null,null],[3,"WlShm","wayland_server::protocol::wl_shm","",null,null],[4,"Error","","wl_shm error values",null,null],[13,"InvalidFormat","","buffer format is not known",20,null],[13,"InvalidStride","","invalid size or stride during pool or buffer creation",20,null],[13,"InvalidFd","","mmapping the file descriptor failed",20,null],[4,"Format","","pixel formats",null,null],[13,"Argb8888","","32-bit ARGB format, [31:0] A:R:G:B 8:8:8:8 little endian",21,null],[13,"Xrgb8888","","32-bit RGB format, [31:0] x:R:G:B 8:8:8:8 little endian",21,null],[13,"C8","","8-bit color index format, [7:0] C",21,null],[13,"Rgb332","","8-bit RGB format, [7:0] R:G:B 3:3:2",21,null],[13,"Bgr233","","8-bit BGR format, [7:0] B:G:R 2:3:3",21,null],[13,"Xrgb4444","","16-bit xRGB format, [15:0] x:R:G:B 4:4:4:4 little endian",21,null],[13,"Xbgr4444","","16-bit xBGR format, [15:0] x:B:G:R 4:4:4:4 little endian",21,null],[13,"Rgbx4444","","16-bit RGBx format, [15:0] R:G:B:x 4:4:4:4 little endian",21,null],[13,"Bgrx4444","","16-bit BGRx format, [15:0] B:G:R:x 4:4:4:4 little endian",21,null],[13,"Argb4444","","16-bit ARGB format, [15:0] A:R:G:B 4:4:4:4 little endian",21,null],[13,"Abgr4444","","16-bit ABGR format, [15:0] A:B:G:R 4:4:4:4 little endian",21,null],[13,"Rgba4444","","16-bit RBGA format, [15:0] R:G:B:A 4:4:4:4 little endian",21,null],[13,"Bgra4444","","16-bit BGRA format, [15:0] B:G:R:A 4:4:4:4 little endian",21,null],[13,"Xrgb1555","","16-bit xRGB format, [15:0] x:R:G:B 1:5:5:5 little endian",21,null],[13,"Xbgr1555","","16-bit xBGR 1555 format, [15:0] x:B:G:R 1:5:5:5 little endian",21,null],[13,"Rgbx5551","","16-bit RGBx 5551 format, [15:0] R:G:B:x 5:5:5:1 little endian",21,null],[13,"Bgrx5551","","16-bit BGRx 5551 format, [15:0] B:G:R:x 5:5:5:1 little endian",21,null],[13,"Argb1555","","16-bit ARGB 1555 format, [15:0] A:R:G:B 1:5:5:5 little endian",21,null],[13,"Abgr1555","","16-bit ABGR 1555 format, [15:0] A:B:G:R 1:5:5:5 little endian",21,null],[13,"Rgba5551","","16-bit RGBA 5551 format, [15:0] R:G:B:A 5:5:5:1 little endian",21,null],[13,"Bgra5551","","16-bit BGRA 5551 format, [15:0] B:G:R:A 5:5:5:1 little endian",21,null],[13,"Rgb565","","16-bit RGB 565 format, [15:0] R:G:B 5:6:5 little endian",21,null],[13,"Bgr565","","16-bit BGR 565 format, [15:0] B:G:R 5:6:5 little endian",21,null],[13,"Rgb888","","24-bit RGB format, [23:0] R:G:B little endian",21,null],[13,"Bgr888","","24-bit BGR format, [23:0] B:G:R little endian",21,null],[13,"Xbgr8888","","32-bit xBGR format, [31:0] x:B:G:R 8:8:8:8 little endian",21,null],[13,"Rgbx8888","","32-bit RGBx format, [31:0] R:G:B:x 8:8:8:8 little endian",21,null],[13,"Bgrx8888","","32-bit BGRx format, [31:0] B:G:R:x 8:8:8:8 little endian",21,null],[13,"Abgr8888","","32-bit ABGR format, [31:0] A:B:G:R 8:8:8:8 little endian",21,null],[13,"Rgba8888","","32-bit RGBA format, [31:0] R:G:B:A 8:8:8:8 little endian",21,null],[13,"Bgra8888","","32-bit BGRA format, [31:0] B:G:R:A 8:8:8:8 little endian",21,null],[13,"Xrgb2101010","","32-bit xRGB format, [31:0] x:R:G:B 2:10:10:10 little endian",21,null],[13,"Xbgr2101010","","32-bit xBGR format, [31:0] x:B:G:R 2:10:10:10 little endian",21,null],[13,"Rgbx1010102","","32-bit RGBx format, [31:0] R:G:B:x 10:10:10:2 little endian",21,null],[13,"Bgrx1010102","","32-bit BGRx format, [31:0] B:G:R:x 10:10:10:2 little endian",21,null],[13,"Argb2101010","","32-bit ARGB format, [31:0] A:R:G:B 2:10:10:10 little endian",21,null],[13,"Abgr2101010","","32-bit ABGR format, [31:0] A:B:G:R 2:10:10:10 little endian",21,null],[13,"Rgba1010102","","32-bit RGBA format, [31:0] R:G:B:A 10:10:10:2 little endian",21,null],[13,"Bgra1010102","","32-bit BGRA format, [31:0] B:G:R:A 10:10:10:2 little endian",21,null],[13,"Yuyv","","packed YCbCr format, [31:0] Cr0:Y1:Cb0:Y0 8:8:8:8 little endian",21,null],[13,"Yvyu","","packed YCbCr format, [31:0] Cb0:Y1:Cr0:Y0 8:8:8:8 little endian",21,null],[13,"Uyvy","","packed YCbCr format, [31:0] Y1:Cr0:Y0:Cb0 8:8:8:8 little endian",21,null],[13,"Vyuy","","packed YCbCr format, [31:0] Y1:Cb0:Y0:Cr0 8:8:8:8 little endian",21,null],[13,"Ayuv","","packed AYCbCr format, [31:0] A:Y:Cb:Cr 8:8:8:8 little endian",21,null],[13,"Nv12","","2 plane YCbCr Cr:Cb format, 2x2 subsampled Cr:Cb plane",21,null],[13,"Nv21","","2 plane YCbCr Cb:Cr format, 2x2 subsampled Cb:Cr plane",21,null],[13,"Nv16","","2 plane YCbCr Cr:Cb format, 2x1 subsampled Cr:Cb plane",21,null],[13,"Nv61","","2 plane YCbCr Cb:Cr format, 2x1 subsampled Cb:Cr plane",21,null],[13,"Yuv410","","3 plane YCbCr format, 4x4 subsampled Cb (1) and Cr (2) planes",21,null],[13,"Yvu410","","3 plane YCbCr format, 4x4 subsampled Cr (1) and Cb (2) planes",21,null],[13,"Yuv411","","3 plane YCbCr format, 4x1 subsampled Cb (1) and Cr (2) planes",21,null],[13,"Yvu411","","3 plane YCbCr format, 4x1 subsampled Cr (1) and Cb (2) planes",21,null],[13,"Yuv420","","3 plane YCbCr format, 2x2 subsampled Cb (1) and Cr (2) planes",21,null],[13,"Yvu420","","3 plane YCbCr format, 2x2 subsampled Cr (1) and Cb (2) planes",21,null],[13,"Yuv422","","3 plane YCbCr format, 2x1 subsampled Cb (1) and Cr (2) planes",21,null],[13,"Yvu422","","3 plane YCbCr format, 2x1 subsampled Cr (1) and Cb (2) planes",21,null],[13,"Yuv444","","3 plane YCbCr format, non-subsampled Cb (1) and Cr (2) planes",21,null],[13,"Yvu444","","3 plane YCbCr format, non-subsampled Cr (1) and Cb (2) planes",21,null],[4,"Request","","",null,null],[13,"CreatePool","","create a shm pool",22,null],[12,"id","wayland_server::protocol::wl_shm::Request","",22,null],[12,"fd","","",22,null],[12,"size","","",22,null],[4,"Event","wayland_server::protocol::wl_shm","",null,null],[13,"Format","","pixel format description",23,null],[12,"format","wayland_server::protocol::wl_shm::Event","",23,null],[0,"wl_buffer","wayland_server::protocol","content for a wl_surface",null,null],[3,"WlBuffer","wayland_server::protocol::wl_buffer","",null,null],[4,"Request","","",null,null],[13,"Destroy","","destroy a buffer",24,null],[4,"Event","","",null,null],[13,"Release","","compositor releases buffer",25,null],[0,"wl_data_offer","wayland_server::protocol","offer to transfer data",null,null],[3,"WlDataOffer","wayland_server::protocol::wl_data_offer","",null,null],[4,"Error","","",null,null],[13,"InvalidFinish","","finish request was called untimely",26,null],[13,"InvalidActionMask","","action mask contains invalid values",26,null],[13,"InvalidAction","","action argument has an invalid value",26,null],[13,"InvalidOffer","","offer doesn't accept this request",26,null],[4,"Request","","",null,null],[13,"Accept","","accept one of the offered mime types",27,null],[12,"serial","wayland_server::protocol::wl_data_offer::Request","",27,null],[12,"mime_type","","",27,null],[13,"Receive","wayland_server::protocol::wl_data_offer","request that the data is transferred",27,null],[12,"mime_type","wayland_server::protocol::wl_data_offer::Request","",27,null],[12,"fd","","",27,null],[13,"Destroy","wayland_server::protocol::wl_data_offer","destroy data offer",27,null],[13,"Finish","","the offer will no longer be used",27,null],[13,"SetActions","","set the available/preferred drag-and-drop actions",27,null],[12,"dnd_actions","wayland_server::protocol::wl_data_offer::Request","",27,null],[12,"preferred_action","","",27,null],[4,"Event","wayland_server::protocol::wl_data_offer","",null,null],[13,"Offer","","advertise offered mime type",28,null],[12,"mime_type","wayland_server::protocol::wl_data_offer::Event","",28,null],[13,"SourceActions","wayland_server::protocol::wl_data_offer","notify the source-side available actions",28,null],[12,"source_actions","wayland_server::protocol::wl_data_offer::Event","",28,null],[13,"Action","wayland_server::protocol::wl_data_offer","notify the selected action",28,null],[12,"dnd_action","wayland_server::protocol::wl_data_offer::Event","",28,null],[0,"wl_data_source","wayland_server::protocol","offer to transfer data",null,null],[3,"WlDataSource","wayland_server::protocol::wl_data_source","",null,null],[4,"Error","","",null,null],[13,"InvalidActionMask","","action mask contains invalid values",29,null],[13,"InvalidSource","","source doesn't accept this request",29,null],[4,"Request","","",null,null],[13,"Offer","","add an offered mime type",30,null],[12,"mime_type","wayland_server::protocol::wl_data_source::Request","",30,null],[13,"Destroy","wayland_server::protocol::wl_data_source","destroy the data source",30,null],[13,"SetActions","","set the available drag-and-drop actions",30,null],[12,"dnd_actions","wayland_server::protocol::wl_data_source::Request","",30,null],[4,"Event","wayland_server::protocol::wl_data_source","",null,null],[13,"Target","","a target accepts an offered mime type",31,null],[12,"mime_type","wayland_server::protocol::wl_data_source::Event","",31,null],[13,"Send","wayland_server::protocol::wl_data_source","send the data",31,null],[12,"mime_type","wayland_server::protocol::wl_data_source::Event","",31,null],[12,"fd","","",31,null],[13,"Cancelled","wayland_server::protocol::wl_data_source","selection was cancelled",31,null],[13,"DndDropPerformed","","the drag-and-drop operation physically finished",31,null],[13,"DndFinished","","the drag-and-drop operation concluded",31,null],[13,"Action","","notify the selected action",31,null],[12,"dnd_action","wayland_server::protocol::wl_data_source::Event","",31,null],[0,"wl_data_device","wayland_server::protocol","data transfer device",null,null],[3,"WlDataDevice","wayland_server::protocol::wl_data_device","",null,null],[4,"Error","","",null,null],[13,"Role","","given wl_surface has another role",32,null],[4,"Request","","",null,null],[13,"StartDrag","","start drag-and-drop operation",33,null],[12,"source","wayland_server::protocol::wl_data_device::Request","",33,null],[12,"origin","","",33,null],[12,"icon","","",33,null],[12,"serial","","",33,null],[13,"SetSelection","wayland_server::protocol::wl_data_device","copy data to the selection",33,null],[12,"source","wayland_server::protocol::wl_data_device::Request","",33,null],[12,"serial","","",33,null],[13,"Release","wayland_server::protocol::wl_data_device","destroy data device",33,null],[4,"Event","","",null,null],[13,"DataOffer","","introduce a new wl_data_offer",34,null],[12,"id","wayland_server::protocol::wl_data_device::Event","",34,null],[13,"Enter","wayland_server::protocol::wl_data_device","initiate drag-and-drop session",34,null],[12,"serial","wayland_server::protocol::wl_data_device::Event","",34,null],[12,"surface","","",34,null],[12,"x","","",34,null],[12,"y","","",34,null],[12,"id","","",34,null],[13,"Leave","wayland_server::protocol::wl_data_device","end drag-and-drop session",34,null],[13,"Motion","","drag-and-drop session motion",34,null],[12,"time","wayland_server::protocol::wl_data_device::Event","",34,null],[12,"x","","",34,null],[12,"y","","",34,null],[13,"Drop","wayland_server::protocol::wl_data_device","end drag-and-drop session successfully",34,null],[13,"Selection","","advertise new selection",34,null],[12,"id","wayland_server::protocol::wl_data_device::Event","",34,null],[0,"wl_data_device_manager","wayland_server::protocol","data transfer interface",null,null],[3,"DndAction","wayland_server::protocol::wl_data_device_manager","drag and drop actions",null,null],[3,"WlDataDeviceManager","","",null,null],[4,"Request","","",null,null],[13,"CreateDataSource","","create a new data source",35,null],[12,"id","wayland_server::protocol::wl_data_device_manager::Request","",35,null],[13,"GetDataDevice","wayland_server::protocol::wl_data_device_manager","create a new data device",35,null],[12,"id","wayland_server::protocol::wl_data_device_manager::Request","",35,null],[12,"seat","","",35,null],[4,"Event","wayland_server::protocol::wl_data_device_manager","",null,null],[0,"wl_shell","wayland_server::protocol","create desktop-style surfaces",null,null],[3,"WlShell","wayland_server::protocol::wl_shell","",null,null],[4,"Error","","",null,null],[13,"Role","","given wl_surface has another role",36,null],[4,"Request","","",null,null],[13,"GetShellSurface","","create a shell surface from a surface",37,null],[12,"id","wayland_server::protocol::wl_shell::Request","",37,null],[12,"surface","","",37,null],[4,"Event","wayland_server::protocol::wl_shell","",null,null],[0,"wl_shell_surface","wayland_server::protocol","desktop-style metadata interface",null,null],[3,"Resize","wayland_server::protocol::wl_shell_surface","edge values for resizing",null,null],[3,"Transient","","details of transient behaviour",null,null],[3,"WlShellSurface","","",null,null],[4,"FullscreenMethod","","different method to set the surface fullscreen",null,null],[13,"Default","","no preference, apply default policy",38,null],[13,"Scale","","scale, preserve the surface's aspect ratio and center on output",38,null],[13,"Driver","","switch output mode to the smallest mode that can fit the surface, add black borders to compensate size mismatch",38,null],[13,"Fill","","no upscaling, center on output and add black borders to compensate size mismatch",38,null],[4,"Request","","",null,null],[13,"Pong","","respond to a ping event",39,null],[12,"serial","wayland_server::protocol::wl_shell_surface::Request","",39,null],[13,"Move","wayland_server::protocol::wl_shell_surface","start an interactive move",39,null],[12,"seat","wayland_server::protocol::wl_shell_surface::Request","",39,null],[12,"serial","","",39,null],[13,"Resize","wayland_server::protocol::wl_shell_surface","start an interactive resize",39,null],[12,"seat","wayland_server::protocol::wl_shell_surface::Request","",39,null],[12,"serial","","",39,null],[12,"edges","","",39,null],[13,"SetToplevel","wayland_server::protocol::wl_shell_surface","make the surface a toplevel surface",39,null],[13,"SetTransient","","make the surface a transient surface",39,null],[12,"parent","wayland_server::protocol::wl_shell_surface::Request","",39,null],[12,"x","","",39,null],[12,"y","","",39,null],[12,"flags","","",39,null],[13,"SetFullscreen","wayland_server::protocol::wl_shell_surface","make the surface a fullscreen surface",39,null],[12,"method","wayland_server::protocol::wl_shell_surface::Request","",39,null],[12,"framerate","","",39,null],[12,"output","","",39,null],[13,"SetPopup","wayland_server::protocol::wl_shell_surface","make the surface a popup surface",39,null],[12,"seat","wayland_server::protocol::wl_shell_surface::Request","",39,null],[12,"serial","","",39,null],[12,"parent","","",39,null],[12,"x","","",39,null],[12,"y","","",39,null],[12,"flags","","",39,null],[13,"SetMaximized","wayland_server::protocol::wl_shell_surface","make the surface a maximized surface",39,null],[12,"output","wayland_server::protocol::wl_shell_surface::Request","",39,null],[13,"SetTitle","wayland_server::protocol::wl_shell_surface","set surface title",39,null],[12,"title","wayland_server::protocol::wl_shell_surface::Request","",39,null],[13,"SetClass","wayland_server::protocol::wl_shell_surface","set surface class",39,null],[12,"class_","wayland_server::protocol::wl_shell_surface::Request","",39,null],[4,"Event","wayland_server::protocol::wl_shell_surface","",null,null],[13,"Ping","","ping client",40,null],[12,"serial","wayland_server::protocol::wl_shell_surface::Event","",40,null],[13,"Configure","wayland_server::protocol::wl_shell_surface","suggest resize",40,null],[12,"edges","wayland_server::protocol::wl_shell_surface::Event","",40,null],[12,"width","","",40,null],[12,"height","","",40,null],[13,"PopupDone","wayland_server::protocol::wl_shell_surface","popup interaction is done",40,null],[0,"wl_surface","wayland_server::protocol","an onscreen surface",null,null],[3,"WlSurface","wayland_server::protocol::wl_surface","",null,null],[4,"Error","","wl_surface error values",null,null],[13,"InvalidScale","","buffer scale value is invalid",41,null],[13,"InvalidTransform","","buffer transform value is invalid",41,null],[4,"Request","","",null,null],[13,"Destroy","","delete surface",42,null],[13,"Attach","","set the surface contents",42,null],[12,"buffer","wayland_server::protocol::wl_surface::Request","",42,null],[12,"x","","",42,null],[12,"y","","",42,null],[13,"Damage","wayland_server::protocol::wl_surface","mark part of the surface damaged",42,null],[12,"x","wayland_server::protocol::wl_surface::Request","",42,null],[12,"y","","",42,null],[12,"width","","",42,null],[12,"height","","",42,null],[13,"Frame","wayland_server::protocol::wl_surface","request a frame throttling hint",42,null],[12,"callback","wayland_server::protocol::wl_surface::Request","",42,null],[13,"SetOpaqueRegion","wayland_server::protocol::wl_surface","set opaque region",42,null],[12,"region","wayland_server::protocol::wl_surface::Request","",42,null],[13,"SetInputRegion","wayland_server::protocol::wl_surface","set input region",42,null],[12,"region","wayland_server::protocol::wl_surface::Request","",42,null],[13,"Commit","wayland_server::protocol::wl_surface","commit pending surface state",42,null],[13,"SetBufferTransform","","sets the buffer transformation",42,null],[12,"transform","wayland_server::protocol::wl_surface::Request","",42,null],[13,"SetBufferScale","wayland_server::protocol::wl_surface","sets the buffer scaling factor",42,null],[12,"scale","wayland_server::protocol::wl_surface::Request","",42,null],[13,"DamageBuffer","wayland_server::protocol::wl_surface","mark part of the surface damaged using buffer coordinates",42,null],[12,"x","wayland_server::protocol::wl_surface::Request","",42,null],[12,"y","","",42,null],[12,"width","","",42,null],[12,"height","","",42,null],[4,"Event","wayland_server::protocol::wl_surface","",null,null],[13,"Enter","","surface enters an output",43,null],[12,"output","wayland_server::protocol::wl_surface::Event","",43,null],[13,"Leave","wayland_server::protocol::wl_surface","surface leaves an output",43,null],[12,"output","wayland_server::protocol::wl_surface::Event","",43,null],[0,"wl_seat","wayland_server::protocol","group of input devices",null,null],[3,"Capability","wayland_server::protocol::wl_seat","seat capability bitmask",null,null],[3,"WlSeat","","",null,null],[4,"Request","","",null,null],[13,"GetPointer","","return pointer object",44,null],[12,"id","wayland_server::protocol::wl_seat::Request","",44,null],[13,"GetKeyboard","wayland_server::protocol::wl_seat","return keyboard object",44,null],[12,"id","wayland_server::protocol::wl_seat::Request","",44,null],[13,"GetTouch","wayland_server::protocol::wl_seat","return touch object",44,null],[12,"id","wayland_server::protocol::wl_seat::Request","",44,null],[13,"Release","wayland_server::protocol::wl_seat","release the seat object",44,null],[4,"Event","","",null,null],[13,"Capabilities","","seat capabilities changed",45,null],[12,"capabilities","wayland_server::protocol::wl_seat::Event","",45,null],[13,"Name","wayland_server::protocol::wl_seat","unique identifier for this seat",45,null],[12,"name","wayland_server::protocol::wl_seat::Event","",45,null],[0,"wl_pointer","wayland_server::protocol","pointer input device",null,null],[3,"WlPointer","wayland_server::protocol::wl_pointer","",null,null],[4,"Error","","",null,null],[13,"Role","","given wl_surface has another role",46,null],[4,"ButtonState","","physical button state",null,null],[13,"Released","","the button is not pressed",47,null],[13,"Pressed","","the button is pressed",47,null],[4,"Axis","","axis types",null,null],[13,"VerticalScroll","","vertical axis",48,null],[13,"HorizontalScroll","","horizontal axis",48,null],[4,"AxisSource","","axis source types",null,null],[13,"Wheel","","a physical wheel",49,null],[13,"Finger","","finger on a touch surface",49,null],[13,"Continuous","","continuous coordinate space",49,null],[4,"Request","","",null,null],[13,"SetCursor","","set the pointer surface",50,null],[12,"serial","wayland_server::protocol::wl_pointer::Request","",50,null],[12,"surface","","",50,null],[12,"hotspot_x","","",50,null],[12,"hotspot_y","","",50,null],[13,"Release","wayland_server::protocol::wl_pointer","release the pointer object",50,null],[4,"Event","","",null,null],[13,"Enter","","enter event",51,null],[12,"serial","wayland_server::protocol::wl_pointer::Event","",51,null],[12,"surface","","",51,null],[12,"surface_x","","",51,null],[12,"surface_y","","",51,null],[13,"Leave","wayland_server::protocol::wl_pointer","leave event",51,null],[12,"serial","wayland_server::protocol::wl_pointer::Event","",51,null],[12,"surface","","",51,null],[13,"Motion","wayland_server::protocol::wl_pointer","pointer motion event",51,null],[12,"time","wayland_server::protocol::wl_pointer::Event","",51,null],[12,"surface_x","","",51,null],[12,"surface_y","","",51,null],[13,"Button","wayland_server::protocol::wl_pointer","pointer button event",51,null],[12,"serial","wayland_server::protocol::wl_pointer::Event","",51,null],[12,"time","","",51,null],[12,"button","","",51,null],[12,"state","","",51,null],[13,"Axis","wayland_server::protocol::wl_pointer","axis event",51,null],[12,"time","wayland_server::protocol::wl_pointer::Event","",51,null],[12,"axis","","",51,null],[12,"value","","",51,null],[13,"Frame","wayland_server::protocol::wl_pointer","end of a pointer event sequence",51,null],[13,"AxisSource","","axis source event",51,null],[12,"axis_source","wayland_server::protocol::wl_pointer::Event","",51,null],[13,"AxisStop","wayland_server::protocol::wl_pointer","axis stop event",51,null],[12,"time","wayland_server::protocol::wl_pointer::Event","",51,null],[12,"axis","","",51,null],[13,"AxisDiscrete","wayland_server::protocol::wl_pointer","axis click event",51,null],[12,"axis","wayland_server::protocol::wl_pointer::Event","",51,null],[12,"discrete","","",51,null],[0,"wl_keyboard","wayland_server::protocol","keyboard input device",null,null],[3,"WlKeyboard","wayland_server::protocol::wl_keyboard","",null,null],[4,"KeymapFormat","","keyboard mapping format",null,null],[13,"NoKeymap","","no keymap; client must understand how to interpret the raw keycode",52,null],[13,"XkbV1","","libxkbcommon compatible; to determine the xkb keycode, clients must add 8 to the key event keycode",52,null],[4,"KeyState","","physical key state",null,null],[13,"Released","","key is not pressed",53,null],[13,"Pressed","","key is pressed",53,null],[4,"Request","","",null,null],[13,"Release","","release the keyboard object",54,null],[4,"Event","","",null,null],[13,"Keymap","","keyboard mapping",55,null],[12,"format","wayland_server::protocol::wl_keyboard::Event","",55,null],[12,"fd","","",55,null],[12,"size","","",55,null],[13,"Enter","wayland_server::protocol::wl_keyboard","enter event",55,null],[12,"serial","wayland_server::protocol::wl_keyboard::Event","",55,null],[12,"surface","","",55,null],[12,"keys","","",55,null],[13,"Leave","wayland_server::protocol::wl_keyboard","leave event",55,null],[12,"serial","wayland_server::protocol::wl_keyboard::Event","",55,null],[12,"surface","","",55,null],[13,"Key","wayland_server::protocol::wl_keyboard","key event",55,null],[12,"serial","wayland_server::protocol::wl_keyboard::Event","",55,null],[12,"time","","",55,null],[12,"key","","",55,null],[12,"state","","",55,null],[13,"Modifiers","wayland_server::protocol::wl_keyboard","modifier and group state",55,null],[12,"serial","wayland_server::protocol::wl_keyboard::Event","",55,null],[12,"mods_depressed","","",55,null],[12,"mods_latched","","",55,null],[12,"mods_locked","","",55,null],[12,"group","","",55,null],[13,"RepeatInfo","wayland_server::protocol::wl_keyboard","repeat rate and delay",55,null],[12,"rate","wayland_server::protocol::wl_keyboard::Event","",55,null],[12,"delay","","",55,null],[0,"wl_touch","wayland_server::protocol","touchscreen input device",null,null],[3,"WlTouch","wayland_server::protocol::wl_touch","",null,null],[4,"Request","","",null,null],[13,"Release","","release the touch object",56,null],[4,"Event","","",null,null],[13,"Down","","touch down event and beginning of a touch sequence",57,null],[12,"serial","wayland_server::protocol::wl_touch::Event","",57,null],[12,"time","","",57,null],[12,"surface","","",57,null],[12,"id","","",57,null],[12,"x","","",57,null],[12,"y","","",57,null],[13,"Up","wayland_server::protocol::wl_touch","end of a touch event sequence",57,null],[12,"serial","wayland_server::protocol::wl_touch::Event","",57,null],[12,"time","","",57,null],[12,"id","","",57,null],[13,"Motion","wayland_server::protocol::wl_touch","update of touch point coordinates",57,null],[12,"time","wayland_server::protocol::wl_touch::Event","",57,null],[12,"id","","",57,null],[12,"x","","",57,null],[12,"y","","",57,null],[13,"Frame","wayland_server::protocol::wl_touch","end of touch frame event",57,null],[13,"Cancel","","touch session cancelled",57,null],[0,"wl_output","wayland_server::protocol","compositor output region",null,null],[3,"Mode","wayland_server::protocol::wl_output","mode information",null,null],[3,"WlOutput","","",null,null],[4,"Subpixel","","subpixel geometry information",null,null],[13,"Unknown","","unknown geometry",58,null],[13,"None","","no geometry",58,null],[13,"HorizontalRgb","","horizontal RGB",58,null],[13,"HorizontalBgr","","horizontal BGR",58,null],[13,"VerticalRgb","","vertical RGB",58,null],[13,"VerticalBgr","","vertical BGR",58,null],[4,"Transform","","transform from framebuffer to output",null,null],[13,"Normal","","no transform",59,null],[13,"_90","","90 degrees counter-clockwise",59,null],[13,"_180","","180 degrees counter-clockwise",59,null],[13,"_270","","270 degrees counter-clockwise",59,null],[13,"Flipped","","180 degree flip around a vertical axis",59,null],[13,"Flipped90","","flip and rotate 90 degrees counter-clockwise",59,null],[13,"Flipped180","","flip and rotate 180 degrees counter-clockwise",59,null],[13,"Flipped270","","flip and rotate 270 degrees counter-clockwise",59,null],[4,"Request","","",null,null],[13,"Release","","release the output object",60,null],[4,"Event","","",null,null],[13,"Geometry","","properties of the output",61,null],[12,"x","wayland_server::protocol::wl_output::Event","",61,null],[12,"y","","",61,null],[12,"physical_width","","",61,null],[12,"physical_height","","",61,null],[12,"subpixel","","",61,null],[12,"make","","",61,null],[12,"model","","",61,null],[12,"transform","","",61,null],[13,"Mode","wayland_server::protocol::wl_output","advertise available modes for the output",61,null],[12,"flags","wayland_server::protocol::wl_output::Event","",61,null],[12,"width","","",61,null],[12,"height","","",61,null],[12,"refresh","","",61,null],[13,"Done","wayland_server::protocol::wl_output","sent all information about output",61,null],[13,"Scale","","output scaling properties",61,null],[12,"factor","wayland_server::protocol::wl_output::Event","",61,null],[0,"wl_region","wayland_server::protocol","region interface",null,null],[3,"WlRegion","wayland_server::protocol::wl_region","",null,null],[4,"Request","","",null,null],[13,"Destroy","","destroy region",62,null],[13,"Add","","add rectangle to region",62,null],[12,"x","wayland_server::protocol::wl_region::Request","",62,null],[12,"y","","",62,null],[12,"width","","",62,null],[12,"height","","",62,null],[13,"Subtract","wayland_server::protocol::wl_region","subtract rectangle from region",62,null],[12,"x","wayland_server::protocol::wl_region::Request","",62,null],[12,"y","","",62,null],[12,"width","","",62,null],[12,"height","","",62,null],[4,"Event","wayland_server::protocol::wl_region","",null,null],[0,"wl_subcompositor","wayland_server::protocol","sub-surface compositing",null,null],[3,"WlSubcompositor","wayland_server::protocol::wl_subcompositor","",null,null],[4,"Error","","",null,null],[13,"BadSurface","","the to-be sub-surface is invalid",63,null],[4,"Request","","",null,null],[13,"Destroy","","unbind from the subcompositor interface",64,null],[13,"GetSubsurface","","give a surface the role sub-surface",64,null],[12,"id","wayland_server::protocol::wl_subcompositor::Request","",64,null],[12,"surface","","",64,null],[12,"parent","","",64,null],[4,"Event","wayland_server::protocol::wl_subcompositor","",null,null],[0,"wl_subsurface","wayland_server::protocol","sub-surface interface to a wl_surface",null,null],[3,"WlSubsurface","wayland_server::protocol::wl_subsurface","",null,null],[4,"Error","","",null,null],[13,"BadSurface","","wl_surface is not a sibling or the parent",65,null],[4,"Request","","",null,null],[13,"Destroy","","remove sub-surface interface",66,null],[13,"SetPosition","","reposition the sub-surface",66,null],[12,"x","wayland_server::protocol::wl_subsurface::Request","",66,null],[12,"y","","",66,null],[13,"PlaceAbove","wayland_server::protocol::wl_subsurface","restack the sub-surface",66,null],[12,"sibling","wayland_server::protocol::wl_subsurface::Request","",66,null],[13,"PlaceBelow","wayland_server::protocol::wl_subsurface","restack the sub-surface",66,null],[12,"sibling","wayland_server::protocol::wl_subsurface::Request","",66,null],[13,"SetSync","wayland_server::protocol::wl_subsurface","set sub-surface to synchronized mode",66,null],[13,"SetDesync","","set sub-surface to desynchronized mode",66,null],[4,"Event","","",null,null],[11,"is_destructor","wayland_server::protocol::wl_callback","",67,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",67,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",67,null],[11,"into_raw","","",67,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",67,null],[11,"as_raw_c_in","","",67,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",17,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",17,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",17,null],[11,"into_raw","","",17,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",17,null],[11,"as_raw_c_in","","",17,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",68,null],[11,"is_destructor","wayland_server::protocol::wl_compositor","",18,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",18,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",18,null],[11,"into_raw","","",18,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",18,null],[11,"as_raw_c_in","","",18,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",69,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",69,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",69,null],[11,"into_raw","","",69,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",69,null],[11,"as_raw_c_in","","",69,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",70,null],[11,"is_destructor","wayland_server::protocol::wl_shm_pool","",19,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",19,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",19,null],[11,"into_raw","","",19,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",19,null],[11,"as_raw_c_in","","",19,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",71,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",71,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",71,null],[11,"into_raw","","",71,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",71,null],[11,"as_raw_c_in","","",71,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",72,null],[11,"clone","wayland_server::protocol::wl_shm","",20,{"i":[{"n":"self"}],"o":{"n":"error"}}],[11,"fmt","","",20,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",20,{"i":[{"n":"self"},{"n":"error"}],"o":{"n":"bool"}}],[11,"from_raw","","",20,{"i":[{"n":"u32"}],"o":{"g":["error"],"n":"option"}}],[11,"to_raw","","",20,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"clone","","",21,{"i":[{"n":"self"}],"o":{"n":"format"}}],[11,"fmt","","",21,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",21,{"i":[{"n":"self"},{"n":"format"}],"o":{"n":"bool"}}],[11,"from_raw","","",21,{"i":[{"n":"u32"}],"o":{"g":["format"],"n":"option"}}],[11,"to_raw","","",21,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"is_destructor","","",22,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",22,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",22,null],[11,"into_raw","","",22,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",22,null],[11,"as_raw_c_in","","",22,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",23,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",23,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",23,null],[11,"into_raw","","",23,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",23,null],[11,"as_raw_c_in","","",23,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",73,null],[11,"is_destructor","wayland_server::protocol::wl_buffer","",24,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",24,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",24,null],[11,"into_raw","","",24,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",24,null],[11,"as_raw_c_in","","",24,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",25,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",25,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",25,null],[11,"into_raw","","",25,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",25,null],[11,"as_raw_c_in","","",25,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",74,null],[11,"clone","wayland_server::protocol::wl_data_offer","",26,{"i":[{"n":"self"}],"o":{"n":"error"}}],[11,"fmt","","",26,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",26,{"i":[{"n":"self"},{"n":"error"}],"o":{"n":"bool"}}],[11,"from_raw","","",26,{"i":[{"n":"u32"}],"o":{"g":["error"],"n":"option"}}],[11,"to_raw","","",26,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"is_destructor","","",27,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",27,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",27,null],[11,"into_raw","","",27,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",27,null],[11,"as_raw_c_in","","",27,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",28,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",28,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",28,null],[11,"into_raw","","",28,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",28,null],[11,"as_raw_c_in","","",28,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",75,null],[11,"clone","wayland_server::protocol::wl_data_source","",29,{"i":[{"n":"self"}],"o":{"n":"error"}}],[11,"fmt","","",29,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",29,{"i":[{"n":"self"},{"n":"error"}],"o":{"n":"bool"}}],[11,"from_raw","","",29,{"i":[{"n":"u32"}],"o":{"g":["error"],"n":"option"}}],[11,"to_raw","","",29,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"is_destructor","","",30,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",30,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",30,null],[11,"into_raw","","",30,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",30,null],[11,"as_raw_c_in","","",30,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",31,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",31,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",31,null],[11,"into_raw","","",31,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",31,null],[11,"as_raw_c_in","","",31,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",76,null],[11,"clone","wayland_server::protocol::wl_data_device","",32,{"i":[{"n":"self"}],"o":{"n":"error"}}],[11,"fmt","","",32,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",32,{"i":[{"n":"self"},{"n":"error"}],"o":{"n":"bool"}}],[11,"from_raw","","",32,{"i":[{"n":"u32"}],"o":{"g":["error"],"n":"option"}}],[11,"to_raw","","",32,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"is_destructor","","",33,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",33,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",33,null],[11,"into_raw","","",33,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",33,null],[11,"as_raw_c_in","","",33,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",34,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",34,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",34,null],[11,"into_raw","","",34,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",34,null],[11,"as_raw_c_in","","",34,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",77,null],[11,"eq","wayland_server::protocol::wl_data_device_manager","",78,{"i":[{"n":"self"},{"n":"dndaction"}],"o":{"n":"bool"}}],[11,"ne","","",78,{"i":[{"n":"self"},{"n":"dndaction"}],"o":{"n":"bool"}}],[11,"clone","","",78,{"i":[{"n":"self"}],"o":{"n":"dndaction"}}],[11,"partial_cmp","","",78,{"i":[{"n":"self"},{"n":"dndaction"}],"o":{"g":["ordering"],"n":"option"}}],[11,"lt","","",78,{"i":[{"n":"self"},{"n":"dndaction"}],"o":{"n":"bool"}}],[11,"le","","",78,{"i":[{"n":"self"},{"n":"dndaction"}],"o":{"n":"bool"}}],[11,"gt","","",78,{"i":[{"n":"self"},{"n":"dndaction"}],"o":{"n":"bool"}}],[11,"ge","","",78,{"i":[{"n":"self"},{"n":"dndaction"}],"o":{"n":"bool"}}],[11,"cmp","","",78,{"i":[{"n":"self"},{"n":"dndaction"}],"o":{"n":"ordering"}}],[11,"hash","","",78,null],[11,"fmt","","",78,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",78,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",78,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",78,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",78,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[18,"None","","no action",78,null],[18,"Copy","","copy action",78,null],[18,"Move","","move action",78,null],[18,"Ask","","ask action",78,null],[11,"empty","","Returns an empty set of flags.",78,{"o":{"n":"dndaction"}}],[11,"all","","Returns the set containing all flags.",78,{"o":{"n":"dndaction"}}],[11,"bits","","Returns the raw value of the flags currently stored.",78,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",78,{"i":[{"n":"u32"}],"o":{"g":["dndaction"],"n":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",78,{"i":[{"n":"u32"}],"o":{"n":"dndaction"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",78,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",78,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",78,{"i":[{"n":"self"},{"n":"dndaction"}],"o":{"n":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",78,{"i":[{"n":"self"},{"n":"dndaction"}],"o":{"n":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",78,{"i":[{"n":"self"},{"n":"dndaction"}]}],[11,"remove","","Removes the specified flags in-place.",78,{"i":[{"n":"self"},{"n":"dndaction"}]}],[11,"toggle","","Toggles the specified flags in-place.",78,{"i":[{"n":"self"},{"n":"dndaction"}]}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",78,{"i":[{"n":"self"},{"n":"dndaction"},{"n":"bool"}]}],[11,"bitor","","Returns the union of the two sets of flags.",78,{"i":[{"n":"self"},{"n":"dndaction"}],"o":{"n":"dndaction"}}],[11,"bitor_assign","","Adds the set of flags.",78,{"i":[{"n":"self"},{"n":"dndaction"}]}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",78,{"i":[{"n":"self"},{"n":"dndaction"}],"o":{"n":"dndaction"}}],[11,"bitxor_assign","","Toggles the set of flags.",78,{"i":[{"n":"self"},{"n":"dndaction"}]}],[11,"bitand","","Returns the intersection between the two sets of flags.",78,{"i":[{"n":"self"},{"n":"dndaction"}],"o":{"n":"dndaction"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",78,{"i":[{"n":"self"},{"n":"dndaction"}]}],[11,"sub","","Returns the set difference of the two sets of flags.",78,{"i":[{"n":"self"},{"n":"dndaction"}],"o":{"n":"dndaction"}}],[11,"sub_assign","","Disables all flags enabled in the set.",78,{"i":[{"n":"self"},{"n":"dndaction"}]}],[11,"not","","Returns the complement of this set of flags.",78,{"i":[{"n":"self"}],"o":{"n":"dndaction"}}],[11,"extend","","",78,{"i":[{"n":"self"},{"n":"t"}]}],[11,"from_iter","","",78,{"i":[{"n":"t"}],"o":{"n":"dndaction"}}],[11,"from_raw","","",78,{"i":[{"n":"u32"}],"o":{"g":["dndaction"],"n":"option"}}],[11,"to_raw","","",78,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"is_destructor","","",35,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",35,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",35,null],[11,"into_raw","","",35,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",35,null],[11,"as_raw_c_in","","",35,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",79,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",79,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",79,null],[11,"into_raw","","",79,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",79,null],[11,"as_raw_c_in","","",79,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",80,null],[11,"clone","wayland_server::protocol::wl_shell","",36,{"i":[{"n":"self"}],"o":{"n":"error"}}],[11,"fmt","","",36,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",36,{"i":[{"n":"self"},{"n":"error"}],"o":{"n":"bool"}}],[11,"from_raw","","",36,{"i":[{"n":"u32"}],"o":{"g":["error"],"n":"option"}}],[11,"to_raw","","",36,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"is_destructor","","",37,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",37,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",37,null],[11,"into_raw","","",37,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",37,null],[11,"as_raw_c_in","","",37,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",81,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",81,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",81,null],[11,"into_raw","","",81,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",81,null],[11,"as_raw_c_in","","",81,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",82,null],[11,"eq","wayland_server::protocol::wl_shell_surface","",83,{"i":[{"n":"self"},{"n":"resize"}],"o":{"n":"bool"}}],[11,"ne","","",83,{"i":[{"n":"self"},{"n":"resize"}],"o":{"n":"bool"}}],[11,"clone","","",83,{"i":[{"n":"self"}],"o":{"n":"resize"}}],[11,"partial_cmp","","",83,{"i":[{"n":"self"},{"n":"resize"}],"o":{"g":["ordering"],"n":"option"}}],[11,"lt","","",83,{"i":[{"n":"self"},{"n":"resize"}],"o":{"n":"bool"}}],[11,"le","","",83,{"i":[{"n":"self"},{"n":"resize"}],"o":{"n":"bool"}}],[11,"gt","","",83,{"i":[{"n":"self"},{"n":"resize"}],"o":{"n":"bool"}}],[11,"ge","","",83,{"i":[{"n":"self"},{"n":"resize"}],"o":{"n":"bool"}}],[11,"cmp","","",83,{"i":[{"n":"self"},{"n":"resize"}],"o":{"n":"ordering"}}],[11,"hash","","",83,null],[11,"fmt","","",83,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",83,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",83,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",83,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",83,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[18,"None","","no edge",83,null],[18,"Top","","top edge",83,null],[18,"Bottom","","bottom edge",83,null],[18,"Left","","left edge",83,null],[18,"TopLeft","","top and left edges",83,null],[18,"BottomLeft","","bottom and left edges",83,null],[18,"Right","","right edge",83,null],[18,"TopRight","","top and right edges",83,null],[18,"BottomRight","","bottom and right edges",83,null],[11,"empty","","Returns an empty set of flags.",83,{"o":{"n":"resize"}}],[11,"all","","Returns the set containing all flags.",83,{"o":{"n":"resize"}}],[11,"bits","","Returns the raw value of the flags currently stored.",83,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",83,{"i":[{"n":"u32"}],"o":{"g":["resize"],"n":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",83,{"i":[{"n":"u32"}],"o":{"n":"resize"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",83,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",83,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",83,{"i":[{"n":"self"},{"n":"resize"}],"o":{"n":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",83,{"i":[{"n":"self"},{"n":"resize"}],"o":{"n":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",83,{"i":[{"n":"self"},{"n":"resize"}]}],[11,"remove","","Removes the specified flags in-place.",83,{"i":[{"n":"self"},{"n":"resize"}]}],[11,"toggle","","Toggles the specified flags in-place.",83,{"i":[{"n":"self"},{"n":"resize"}]}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",83,{"i":[{"n":"self"},{"n":"resize"},{"n":"bool"}]}],[11,"bitor","","Returns the union of the two sets of flags.",83,{"i":[{"n":"self"},{"n":"resize"}],"o":{"n":"resize"}}],[11,"bitor_assign","","Adds the set of flags.",83,{"i":[{"n":"self"},{"n":"resize"}]}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",83,{"i":[{"n":"self"},{"n":"resize"}],"o":{"n":"resize"}}],[11,"bitxor_assign","","Toggles the set of flags.",83,{"i":[{"n":"self"},{"n":"resize"}]}],[11,"bitand","","Returns the intersection between the two sets of flags.",83,{"i":[{"n":"self"},{"n":"resize"}],"o":{"n":"resize"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",83,{"i":[{"n":"self"},{"n":"resize"}]}],[11,"sub","","Returns the set difference of the two sets of flags.",83,{"i":[{"n":"self"},{"n":"resize"}],"o":{"n":"resize"}}],[11,"sub_assign","","Disables all flags enabled in the set.",83,{"i":[{"n":"self"},{"n":"resize"}]}],[11,"not","","Returns the complement of this set of flags.",83,{"i":[{"n":"self"}],"o":{"n":"resize"}}],[11,"extend","","",83,{"i":[{"n":"self"},{"n":"t"}]}],[11,"from_iter","","",83,{"i":[{"n":"t"}],"o":{"n":"resize"}}],[11,"from_raw","","",83,{"i":[{"n":"u32"}],"o":{"g":["resize"],"n":"option"}}],[11,"to_raw","","",83,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"eq","","",84,{"i":[{"n":"self"},{"n":"transient"}],"o":{"n":"bool"}}],[11,"ne","","",84,{"i":[{"n":"self"},{"n":"transient"}],"o":{"n":"bool"}}],[11,"clone","","",84,{"i":[{"n":"self"}],"o":{"n":"transient"}}],[11,"partial_cmp","","",84,{"i":[{"n":"self"},{"n":"transient"}],"o":{"g":["ordering"],"n":"option"}}],[11,"lt","","",84,{"i":[{"n":"self"},{"n":"transient"}],"o":{"n":"bool"}}],[11,"le","","",84,{"i":[{"n":"self"},{"n":"transient"}],"o":{"n":"bool"}}],[11,"gt","","",84,{"i":[{"n":"self"},{"n":"transient"}],"o":{"n":"bool"}}],[11,"ge","","",84,{"i":[{"n":"self"},{"n":"transient"}],"o":{"n":"bool"}}],[11,"cmp","","",84,{"i":[{"n":"self"},{"n":"transient"}],"o":{"n":"ordering"}}],[11,"hash","","",84,null],[11,"fmt","","",84,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",84,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",84,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",84,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",84,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[18,"Inactive","","do not set keyboard focus",84,null],[11,"empty","","Returns an empty set of flags.",84,{"o":{"n":"transient"}}],[11,"all","","Returns the set containing all flags.",84,{"o":{"n":"transient"}}],[11,"bits","","Returns the raw value of the flags currently stored.",84,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",84,{"i":[{"n":"u32"}],"o":{"g":["transient"],"n":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",84,{"i":[{"n":"u32"}],"o":{"n":"transient"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",84,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",84,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",84,{"i":[{"n":"self"},{"n":"transient"}],"o":{"n":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",84,{"i":[{"n":"self"},{"n":"transient"}],"o":{"n":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",84,{"i":[{"n":"self"},{"n":"transient"}]}],[11,"remove","","Removes the specified flags in-place.",84,{"i":[{"n":"self"},{"n":"transient"}]}],[11,"toggle","","Toggles the specified flags in-place.",84,{"i":[{"n":"self"},{"n":"transient"}]}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",84,{"i":[{"n":"self"},{"n":"transient"},{"n":"bool"}]}],[11,"bitor","","Returns the union of the two sets of flags.",84,{"i":[{"n":"self"},{"n":"transient"}],"o":{"n":"transient"}}],[11,"bitor_assign","","Adds the set of flags.",84,{"i":[{"n":"self"},{"n":"transient"}]}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",84,{"i":[{"n":"self"},{"n":"transient"}],"o":{"n":"transient"}}],[11,"bitxor_assign","","Toggles the set of flags.",84,{"i":[{"n":"self"},{"n":"transient"}]}],[11,"bitand","","Returns the intersection between the two sets of flags.",84,{"i":[{"n":"self"},{"n":"transient"}],"o":{"n":"transient"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",84,{"i":[{"n":"self"},{"n":"transient"}]}],[11,"sub","","Returns the set difference of the two sets of flags.",84,{"i":[{"n":"self"},{"n":"transient"}],"o":{"n":"transient"}}],[11,"sub_assign","","Disables all flags enabled in the set.",84,{"i":[{"n":"self"},{"n":"transient"}]}],[11,"not","","Returns the complement of this set of flags.",84,{"i":[{"n":"self"}],"o":{"n":"transient"}}],[11,"extend","","",84,{"i":[{"n":"self"},{"n":"t"}]}],[11,"from_iter","","",84,{"i":[{"n":"t"}],"o":{"n":"transient"}}],[11,"from_raw","","",84,{"i":[{"n":"u32"}],"o":{"g":["transient"],"n":"option"}}],[11,"to_raw","","",84,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"clone","","",38,{"i":[{"n":"self"}],"o":{"n":"fullscreenmethod"}}],[11,"fmt","","",38,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",38,{"i":[{"n":"self"},{"n":"fullscreenmethod"}],"o":{"n":"bool"}}],[11,"from_raw","","",38,{"i":[{"n":"u32"}],"o":{"g":["fullscreenmethod"],"n":"option"}}],[11,"to_raw","","",38,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"is_destructor","","",39,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",39,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",39,null],[11,"into_raw","","",39,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",39,null],[11,"as_raw_c_in","","",39,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",40,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",40,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",40,null],[11,"into_raw","","",40,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",40,null],[11,"as_raw_c_in","","",40,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",85,null],[11,"clone","wayland_server::protocol::wl_surface","",41,{"i":[{"n":"self"}],"o":{"n":"error"}}],[11,"fmt","","",41,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",41,{"i":[{"n":"self"},{"n":"error"}],"o":{"n":"bool"}}],[11,"from_raw","","",41,{"i":[{"n":"u32"}],"o":{"g":["error"],"n":"option"}}],[11,"to_raw","","",41,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"is_destructor","","",42,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",42,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",42,null],[11,"into_raw","","",42,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",42,null],[11,"as_raw_c_in","","",42,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",43,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",43,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",43,null],[11,"into_raw","","",43,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",43,null],[11,"as_raw_c_in","","",43,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",86,null],[11,"eq","wayland_server::protocol::wl_seat","",87,{"i":[{"n":"self"},{"n":"capability"}],"o":{"n":"bool"}}],[11,"ne","","",87,{"i":[{"n":"self"},{"n":"capability"}],"o":{"n":"bool"}}],[11,"clone","","",87,{"i":[{"n":"self"}],"o":{"n":"capability"}}],[11,"partial_cmp","","",87,{"i":[{"n":"self"},{"n":"capability"}],"o":{"g":["ordering"],"n":"option"}}],[11,"lt","","",87,{"i":[{"n":"self"},{"n":"capability"}],"o":{"n":"bool"}}],[11,"le","","",87,{"i":[{"n":"self"},{"n":"capability"}],"o":{"n":"bool"}}],[11,"gt","","",87,{"i":[{"n":"self"},{"n":"capability"}],"o":{"n":"bool"}}],[11,"ge","","",87,{"i":[{"n":"self"},{"n":"capability"}],"o":{"n":"bool"}}],[11,"cmp","","",87,{"i":[{"n":"self"},{"n":"capability"}],"o":{"n":"ordering"}}],[11,"hash","","",87,null],[11,"fmt","","",87,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",87,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",87,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",87,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",87,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[18,"Pointer","","the seat has pointer devices",87,null],[18,"Keyboard","","the seat has one or more keyboards",87,null],[18,"Touch","","the seat has touch devices",87,null],[11,"empty","","Returns an empty set of flags.",87,{"o":{"n":"capability"}}],[11,"all","","Returns the set containing all flags.",87,{"o":{"n":"capability"}}],[11,"bits","","Returns the raw value of the flags currently stored.",87,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",87,{"i":[{"n":"u32"}],"o":{"g":["capability"],"n":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",87,{"i":[{"n":"u32"}],"o":{"n":"capability"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",87,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",87,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",87,{"i":[{"n":"self"},{"n":"capability"}],"o":{"n":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",87,{"i":[{"n":"self"},{"n":"capability"}],"o":{"n":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",87,{"i":[{"n":"self"},{"n":"capability"}]}],[11,"remove","","Removes the specified flags in-place.",87,{"i":[{"n":"self"},{"n":"capability"}]}],[11,"toggle","","Toggles the specified flags in-place.",87,{"i":[{"n":"self"},{"n":"capability"}]}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",87,{"i":[{"n":"self"},{"n":"capability"},{"n":"bool"}]}],[11,"bitor","","Returns the union of the two sets of flags.",87,{"i":[{"n":"self"},{"n":"capability"}],"o":{"n":"capability"}}],[11,"bitor_assign","","Adds the set of flags.",87,{"i":[{"n":"self"},{"n":"capability"}]}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",87,{"i":[{"n":"self"},{"n":"capability"}],"o":{"n":"capability"}}],[11,"bitxor_assign","","Toggles the set of flags.",87,{"i":[{"n":"self"},{"n":"capability"}]}],[11,"bitand","","Returns the intersection between the two sets of flags.",87,{"i":[{"n":"self"},{"n":"capability"}],"o":{"n":"capability"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",87,{"i":[{"n":"self"},{"n":"capability"}]}],[11,"sub","","Returns the set difference of the two sets of flags.",87,{"i":[{"n":"self"},{"n":"capability"}],"o":{"n":"capability"}}],[11,"sub_assign","","Disables all flags enabled in the set.",87,{"i":[{"n":"self"},{"n":"capability"}]}],[11,"not","","Returns the complement of this set of flags.",87,{"i":[{"n":"self"}],"o":{"n":"capability"}}],[11,"extend","","",87,{"i":[{"n":"self"},{"n":"t"}]}],[11,"from_iter","","",87,{"i":[{"n":"t"}],"o":{"n":"capability"}}],[11,"from_raw","","",87,{"i":[{"n":"u32"}],"o":{"g":["capability"],"n":"option"}}],[11,"to_raw","","",87,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"is_destructor","","",44,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",44,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",44,null],[11,"into_raw","","",44,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",44,null],[11,"as_raw_c_in","","",44,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",45,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",45,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",45,null],[11,"into_raw","","",45,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",45,null],[11,"as_raw_c_in","","",45,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",88,null],[11,"clone","wayland_server::protocol::wl_pointer","",46,{"i":[{"n":"self"}],"o":{"n":"error"}}],[11,"fmt","","",46,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",46,{"i":[{"n":"self"},{"n":"error"}],"o":{"n":"bool"}}],[11,"from_raw","","",46,{"i":[{"n":"u32"}],"o":{"g":["error"],"n":"option"}}],[11,"to_raw","","",46,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"clone","","",47,{"i":[{"n":"self"}],"o":{"n":"buttonstate"}}],[11,"fmt","","",47,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",47,{"i":[{"n":"self"},{"n":"buttonstate"}],"o":{"n":"bool"}}],[11,"from_raw","","",47,{"i":[{"n":"u32"}],"o":{"g":["buttonstate"],"n":"option"}}],[11,"to_raw","","",47,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"clone","","",48,{"i":[{"n":"self"}],"o":{"n":"axis"}}],[11,"fmt","","",48,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",48,{"i":[{"n":"self"},{"n":"axis"}],"o":{"n":"bool"}}],[11,"from_raw","","",48,{"i":[{"n":"u32"}],"o":{"g":["axis"],"n":"option"}}],[11,"to_raw","","",48,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"clone","","",49,{"i":[{"n":"self"}],"o":{"n":"axissource"}}],[11,"fmt","","",49,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",49,{"i":[{"n":"self"},{"n":"axissource"}],"o":{"n":"bool"}}],[11,"from_raw","","",49,{"i":[{"n":"u32"}],"o":{"g":["axissource"],"n":"option"}}],[11,"to_raw","","",49,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"is_destructor","","",50,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",50,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",50,null],[11,"into_raw","","",50,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",50,null],[11,"as_raw_c_in","","",50,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",51,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",51,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",51,null],[11,"into_raw","","",51,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",51,null],[11,"as_raw_c_in","","",51,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",89,null],[11,"clone","wayland_server::protocol::wl_keyboard","",52,{"i":[{"n":"self"}],"o":{"n":"keymapformat"}}],[11,"fmt","","",52,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",52,{"i":[{"n":"self"},{"n":"keymapformat"}],"o":{"n":"bool"}}],[11,"from_raw","","",52,{"i":[{"n":"u32"}],"o":{"g":["keymapformat"],"n":"option"}}],[11,"to_raw","","",52,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"clone","","",53,{"i":[{"n":"self"}],"o":{"n":"keystate"}}],[11,"fmt","","",53,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",53,{"i":[{"n":"self"},{"n":"keystate"}],"o":{"n":"bool"}}],[11,"from_raw","","",53,{"i":[{"n":"u32"}],"o":{"g":["keystate"],"n":"option"}}],[11,"to_raw","","",53,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"is_destructor","","",54,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",54,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",54,null],[11,"into_raw","","",54,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",54,null],[11,"as_raw_c_in","","",54,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",55,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",55,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",55,null],[11,"into_raw","","",55,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",55,null],[11,"as_raw_c_in","","",55,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",90,null],[11,"is_destructor","wayland_server::protocol::wl_touch","",56,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",56,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",56,null],[11,"into_raw","","",56,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",56,null],[11,"as_raw_c_in","","",56,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",57,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",57,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",57,null],[11,"into_raw","","",57,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",57,null],[11,"as_raw_c_in","","",57,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",91,null],[11,"clone","wayland_server::protocol::wl_output","",58,{"i":[{"n":"self"}],"o":{"n":"subpixel"}}],[11,"fmt","","",58,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",58,{"i":[{"n":"self"},{"n":"subpixel"}],"o":{"n":"bool"}}],[11,"from_raw","","",58,{"i":[{"n":"u32"}],"o":{"g":["subpixel"],"n":"option"}}],[11,"to_raw","","",58,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"clone","","",59,{"i":[{"n":"self"}],"o":{"n":"transform"}}],[11,"fmt","","",59,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",59,{"i":[{"n":"self"},{"n":"transform"}],"o":{"n":"bool"}}],[11,"from_raw","","",59,{"i":[{"n":"u32"}],"o":{"g":["transform"],"n":"option"}}],[11,"to_raw","","",59,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"eq","","",92,{"i":[{"n":"self"},{"n":"mode"}],"o":{"n":"bool"}}],[11,"ne","","",92,{"i":[{"n":"self"},{"n":"mode"}],"o":{"n":"bool"}}],[11,"clone","","",92,{"i":[{"n":"self"}],"o":{"n":"mode"}}],[11,"partial_cmp","","",92,{"i":[{"n":"self"},{"n":"mode"}],"o":{"g":["ordering"],"n":"option"}}],[11,"lt","","",92,{"i":[{"n":"self"},{"n":"mode"}],"o":{"n":"bool"}}],[11,"le","","",92,{"i":[{"n":"self"},{"n":"mode"}],"o":{"n":"bool"}}],[11,"gt","","",92,{"i":[{"n":"self"},{"n":"mode"}],"o":{"n":"bool"}}],[11,"ge","","",92,{"i":[{"n":"self"},{"n":"mode"}],"o":{"n":"bool"}}],[11,"cmp","","",92,{"i":[{"n":"self"},{"n":"mode"}],"o":{"n":"ordering"}}],[11,"hash","","",92,null],[11,"fmt","","",92,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",92,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",92,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",92,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"fmt","","",92,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[18,"Current","","indicates this is the current mode",92,null],[18,"Preferred","","indicates this is the preferred mode",92,null],[11,"empty","","Returns an empty set of flags.",92,{"o":{"n":"mode"}}],[11,"all","","Returns the set containing all flags.",92,{"o":{"n":"mode"}}],[11,"bits","","Returns the raw value of the flags currently stored.",92,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",92,{"i":[{"n":"u32"}],"o":{"g":["mode"],"n":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",92,{"i":[{"n":"u32"}],"o":{"n":"mode"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",92,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",92,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",92,{"i":[{"n":"self"},{"n":"mode"}],"o":{"n":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",92,{"i":[{"n":"self"},{"n":"mode"}],"o":{"n":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",92,{"i":[{"n":"self"},{"n":"mode"}]}],[11,"remove","","Removes the specified flags in-place.",92,{"i":[{"n":"self"},{"n":"mode"}]}],[11,"toggle","","Toggles the specified flags in-place.",92,{"i":[{"n":"self"},{"n":"mode"}]}],[11,"set","","Inserts or removes the specified flags depending on the passed value.",92,{"i":[{"n":"self"},{"n":"mode"},{"n":"bool"}]}],[11,"bitor","","Returns the union of the two sets of flags.",92,{"i":[{"n":"self"},{"n":"mode"}],"o":{"n":"mode"}}],[11,"bitor_assign","","Adds the set of flags.",92,{"i":[{"n":"self"},{"n":"mode"}]}],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",92,{"i":[{"n":"self"},{"n":"mode"}],"o":{"n":"mode"}}],[11,"bitxor_assign","","Toggles the set of flags.",92,{"i":[{"n":"self"},{"n":"mode"}]}],[11,"bitand","","Returns the intersection between the two sets of flags.",92,{"i":[{"n":"self"},{"n":"mode"}],"o":{"n":"mode"}}],[11,"bitand_assign","","Disables all flags disabled in the set.",92,{"i":[{"n":"self"},{"n":"mode"}]}],[11,"sub","","Returns the set difference of the two sets of flags.",92,{"i":[{"n":"self"},{"n":"mode"}],"o":{"n":"mode"}}],[11,"sub_assign","","Disables all flags enabled in the set.",92,{"i":[{"n":"self"},{"n":"mode"}]}],[11,"not","","Returns the complement of this set of flags.",92,{"i":[{"n":"self"}],"o":{"n":"mode"}}],[11,"extend","","",92,{"i":[{"n":"self"},{"n":"t"}]}],[11,"from_iter","","",92,{"i":[{"n":"t"}],"o":{"n":"mode"}}],[11,"from_raw","","",92,{"i":[{"n":"u32"}],"o":{"g":["mode"],"n":"option"}}],[11,"to_raw","","",92,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"is_destructor","","",60,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",60,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",60,null],[11,"into_raw","","",60,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",60,null],[11,"as_raw_c_in","","",60,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",61,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",61,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",61,null],[11,"into_raw","","",61,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",61,null],[11,"as_raw_c_in","","",61,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",93,null],[11,"is_destructor","wayland_server::protocol::wl_region","",62,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",62,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",62,null],[11,"into_raw","","",62,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",62,null],[11,"as_raw_c_in","","",62,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",94,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",94,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",94,null],[11,"into_raw","","",94,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",94,null],[11,"as_raw_c_in","","",94,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",95,null],[11,"clone","wayland_server::protocol::wl_subcompositor","",63,{"i":[{"n":"self"}],"o":{"n":"error"}}],[11,"fmt","","",63,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",63,{"i":[{"n":"self"},{"n":"error"}],"o":{"n":"bool"}}],[11,"from_raw","","",63,{"i":[{"n":"u32"}],"o":{"g":["error"],"n":"option"}}],[11,"to_raw","","",63,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"is_destructor","","",64,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",64,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",64,null],[11,"into_raw","","",64,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",64,null],[11,"as_raw_c_in","","",64,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",96,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",96,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",96,null],[11,"into_raw","","",96,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",96,null],[11,"as_raw_c_in","","",96,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",97,null],[11,"clone","wayland_server::protocol::wl_subsurface","",65,{"i":[{"n":"self"}],"o":{"n":"error"}}],[11,"fmt","","",65,{"i":[{"n":"self"},{"n":"formatter"}],"o":{"n":"result"}}],[11,"eq","","",65,{"i":[{"n":"self"},{"n":"error"}],"o":{"n":"bool"}}],[11,"from_raw","","",65,{"i":[{"n":"u32"}],"o":{"g":["error"],"n":"option"}}],[11,"to_raw","","",65,{"i":[{"n":"self"}],"o":{"n":"u32"}}],[11,"is_destructor","","",66,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",66,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",66,null],[11,"into_raw","","",66,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",66,null],[11,"as_raw_c_in","","",66,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"is_destructor","","",98,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",98,{"i":[{"n":"u16"},{"n":"u32"},{"n":"meta"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",98,null],[11,"into_raw","","",98,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",98,null],[11,"as_raw_c_in","","",98,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",99,null],[11,"new","wayland_server","Create a new map",100,{"o":{"n":"userdatamap"}}],[11,"get","","Attempt to access the wrapped user data of a given type",100,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"insert_if_missing","","Insert a value in the map if it is not already there",100,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"bool"}}],[11,"insert_if_missing_threadsafe","","Insert a value in the map if it is not already there",100,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"bool"}}],[11,"is_destructor","","",101,{"i":[{"n":"self"}],"o":{"n":"bool"}}],[11,"child","","",101,{"i":[{"n":"u16"},{"n":"u32"},{"n":"m"}],"o":{"g":["object"],"n":"option"}}],[11,"from_raw","","",101,null],[11,"into_raw","","",101,{"i":[{"n":"self"},{"n":"u32"}],"o":{"n":"message"}}],[11,"from_raw_c","","",101,null],[11,"as_raw_c_in","","",101,{"i":[{"n":"self"},{"n":"f"}],"o":{"n":"t"}}],[11,"c_interface","","",102,null],[11,"initialize","wayland_server::sys::server","",103,null],[11,"initialize","","",104,null],[11,"deref","","",104,{"i":[{"n":"self"}],"o":{"n":"waylandserver"}}],[11,"deref","","",103,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"open","","",15,{"i":[{"n":"str"}],"o":{"g":["waylandserver","dlerror"],"n":"result"}}]],"paths":[[8,"Interface"],[8,"MessageGroup"],[3,"Client"],[3,"DisplayToken"],[3,"Display"],[3,"Global"],[3,"Resource"],[3,"NewResource"],[3,"wl_message"],[3,"wl_interface"],[3,"wl_list"],[3,"wl_array"],[19,"wl_argument"],[3,"wl_listener"],[3,"wl_signal"],[3,"WaylandServer"],[4,"ResourceMap"],[4,"Event"],[4,"Request"],[4,"Request"],[4,"Error"],[4,"Format"],[4,"Request"],[4,"Event"],[4,"Request"],[4,"Event"],[4,"Error"],[4,"Request"],[4,"Event"],[4,"Error"],[4,"Request"],[4,"Event"],[4,"Error"],[4,"Request"],[4,"Event"],[4,"Request"],[4,"Error"],[4,"Request"],[4,"FullscreenMethod"],[4,"Request"],[4,"Event"],[4,"Error"],[4,"Request"],[4,"Event"],[4,"Request"],[4,"Event"],[4,"Error"],[4,"ButtonState"],[4,"Axis"],[4,"AxisSource"],[4,"Request"],[4,"Event"],[4,"KeymapFormat"],[4,"KeyState"],[4,"Request"],[4,"Event"],[4,"Request"],[4,"Event"],[4,"Subpixel"],[4,"Transform"],[4,"Request"],[4,"Event"],[4,"Request"],[4,"Error"],[4,"Request"],[4,"Error"],[4,"Request"],[4,"Request"],[3,"WlCallback"],[4,"Event"],[3,"WlCompositor"],[4,"Event"],[3,"WlShmPool"],[3,"WlShm"],[3,"WlBuffer"],[3,"WlDataOffer"],[3,"WlDataSource"],[3,"WlDataDevice"],[3,"DndAction"],[4,"Event"],[3,"WlDataDeviceManager"],[4,"Event"],[3,"WlShell"],[3,"Resize"],[3,"Transient"],[3,"WlShellSurface"],[3,"WlSurface"],[3,"Capability"],[3,"WlSeat"],[3,"WlPointer"],[3,"WlKeyboard"],[3,"WlTouch"],[3,"Mode"],[3,"WlOutput"],[4,"Event"],[3,"WlRegion"],[4,"Event"],[3,"WlSubcompositor"],[4,"Event"],[3,"WlSubsurface"],[3,"UserDataMap"],[4,"NoMessage"],[3,"AnonymousObject"],[3,"WAYLAND_SERVER_OPTION"],[3,"WAYLAND_SERVER_HANDLE"]]};
searchIndex["wayland_sys"] = {"doc":"FFI bindings to the wayland system libraries.","items":[[6,"gid_t","wayland_sys","",null,null],[6,"pid_t","","",null,null],[6,"uid_t","","",null,null],[0,"common","","Various types and functions that are used by both the client and the server libraries.",null,null],[3,"wl_message","wayland_sys::common","",null,null],[12,"name","","",0,null],[12,"signature","","",0,null],[12,"types","","",0,null],[3,"wl_interface","","",null,null],[12,"name","","",1,null],[12,"version","","",1,null],[12,"request_count","","",1,null],[12,"requests","","",1,null],[12,"event_count","","",1,null],[12,"events","","",1,null],[3,"wl_list","","",null,null],[12,"prev","","",2,null],[12,"next","","",2,null],[3,"wl_array","","",null,null],[12,"size","","",3,null],[12,"alloc","","",3,null],[12,"data","","",3,null],[19,"wl_argument","","",null,null],[12,"i","","",4,null],[12,"u","","",4,null],[12,"f","","",4,null],[12,"s","","",4,null],[12,"o","","",4,null],[12,"n","","",4,null],[12,"a","","",4,null],[12,"h","","",4,null],[5,"wl_fixed_to_double","","",null,{"i":[{"n":"wl_fixed_t"}],"o":{"n":"f64"}}],[5,"wl_fixed_from_double","","",null,{"i":[{"n":"f64"}],"o":{"n":"wl_fixed_t"}}],[5,"wl_fixed_to_int","","",null,{"i":[{"n":"wl_fixed_t"}],"o":{"n":"i32"}}],[5,"wl_fixed_from_int","","",null,{"i":[{"n":"i32"}],"o":{"n":"wl_fixed_t"}}],[6,"wl_fixed_t","","",null,null],[6,"wl_dispatcher_func_t","","",null,null],[6,"wl_log_func_t","","",null,null],[0,"client","wayland_sys","Bindings to the client library `libwayland-client.so`",null,null],[3,"WaylandClient","wayland_sys::client","",null,null],[12,"wl_display_connect_to_fd","","",5,null],[12,"wl_display_connect","","",5,null],[12,"wl_display_disconnect","","",5,null],[12,"wl_display_get_fd","","",5,null],[12,"wl_display_roundtrip","","",5,null],[12,"wl_display_read_events","","",5,null],[12,"wl_display_prepare_read","","",5,null],[12,"wl_display_cancel_read","","",5,null],[12,"wl_display_dispatch","","",5,null],[12,"wl_display_dispatch_pending","","",5,null],[12,"wl_display_get_error","","",5,null],[12,"wl_display_get_protocol_error","","",5,null],[12,"wl_display_flush","","",5,null],[12,"wl_event_queue_destroy","","",5,null],[12,"wl_display_create_queue","","",5,null],[12,"wl_display_roundtrip_queue","","",5,null],[12,"wl_display_prepare_read_queue","","",5,null],[12,"wl_display_dispatch_queue","","",5,null],[12,"wl_display_dispatch_queue_pending","","",5,null],[12,"wl_proxy_create","","",5,null],[12,"wl_proxy_destroy","","",5,null],[12,"wl_proxy_add_listener","","",5,null],[12,"wl_proxy_get_listener","","",5,null],[12,"wl_proxy_add_dispatcher","","",5,null],[12,"wl_proxy_marshal_array_constructor","","",5,null],[12,"wl_proxy_marshal_array_constructor_versioned","","",5,null],[12,"wl_proxy_marshal_array","","",5,null],[12,"wl_proxy_set_user_data","","",5,null],[12,"wl_proxy_get_user_data","","",5,null],[12,"wl_proxy_get_id","","",5,null],[12,"wl_proxy_get_class","","",5,null],[12,"wl_proxy_set_queue","","",5,null],[12,"wl_proxy_get_version","","",5,null],[12,"wl_proxy_create_wrapper","","",5,null],[12,"wl_proxy_wrapper_destroy","","",5,null],[12,"wl_log_set_handler_client","","",5,null],[12,"wl_list_init","","",5,null],[12,"wl_list_insert","","",5,null],[12,"wl_list_remove","","",5,null],[12,"wl_list_length","","",5,null],[12,"wl_list_empty","","",5,null],[12,"wl_list_insert_list","","",5,null],[12,"wl_array_init","","",5,null],[12,"wl_array_release","","",5,null],[12,"wl_array_add","","",5,null],[12,"wl_array_copy","","",5,null],[12,"wl_proxy_marshal_constructor","","",5,null],[12,"wl_proxy_marshal_constructor_versioned","","",5,null],[12,"wl_proxy_marshal","","",5,null],[3,"WAYLAND_CLIENT_OPTION","","",null,null],[3,"WAYLAND_CLIENT_HANDLE","","",null,null],[4,"wl_proxy","","",null,null],[4,"wl_display","","",null,null],[4,"wl_event_queue","","",null,null],[5,"is_lib_available","","",null,{"o":{"n":"bool"}}],[11,"open","","",5,{"i":[{"n":"str"}],"o":{"g":["waylandclient","dlerror"],"n":"result"}}],[11,"deref","","",6,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"initialize","","",6,{"i":[{"n":"self"}]}],[11,"deref","","",7,{"i":[{"n":"self"}],"o":{"n":"waylandclient"}}],[11,"initialize","","",7,{"i":[{"n":"self"}]}],[0,"server","wayland_sys","Bindings to the client library `libwayland-server.so`",null,null],[3,"wl_listener","wayland_sys::server","",null,null],[12,"link","","",8,null],[12,"notify","","",8,null],[3,"wl_signal","","",null,null],[12,"listener_list","","",9,null],[3,"WaylandServer","","",null,null],[12,"wl_client_flush","","",10,null],[12,"wl_client_destroy","","",10,null],[12,"wl_client_get_display","","",10,null],[12,"wl_client_get_credentials","","",10,null],[12,"wl_client_get_object","","",10,null],[12,"wl_client_add_destroy_listener","","",10,null],[12,"wl_client_get_destroy_listener","","",10,null],[12,"wl_client_post_no_memory","","",10,null],[12,"wl_resource_create","","",10,null],[12,"wl_client_create","","",10,null],[12,"wl_display_create","","",10,null],[12,"wl_display_destroy","","",10,null],[12,"wl_display_get_serial","","",10,null],[12,"wl_display_next_serial","","",10,null],[12,"wl_display_add_socket","","",10,null],[12,"wl_display_add_socket_auto","","",10,null],[12,"wl_display_add_socket_fd","","",10,null],[12,"wl_display_add_shm_format","","",10,null],[12,"wl_display_get_event_loop","","",10,null],[12,"wl_display_terminate","","",10,null],[12,"wl_display_run","","",10,null],[12,"wl_display_flush_clients","","",10,null],[12,"wl_display_add_destroy_listener","","",10,null],[12,"wl_display_get_destroy_listener","","",10,null],[12,"wl_global_create","","",10,null],[12,"wl_display_init_shm","","",10,null],[12,"wl_display_add_client_created_listener","","",10,null],[12,"wl_display_set_global_filter","","",10,null],[12,"wl_event_loop_create","","",10,null],[12,"wl_event_loop_destroy","","",10,null],[12,"wl_event_loop_add_fd","","",10,null],[12,"wl_event_loop_add_timer","","",10,null],[12,"wl_event_loop_add_signal","","",10,null],[12,"wl_event_loop_dispatch","","",10,null],[12,"wl_event_loop_dispatch_idle","","",10,null],[12,"wl_event_loop_add_idle","","",10,null],[12,"wl_event_loop_get_fd","","",10,null],[12,"wl_event_loop_add_destroy_listener","","",10,null],[12,"wl_event_loop_get_destroy_listener","","",10,null],[12,"wl_event_source_fd_update","","",10,null],[12,"wl_event_source_timer_update","","",10,null],[12,"wl_event_source_remove","","",10,null],[12,"wl_event_source_check","","",10,null],[12,"wl_global_destroy","","",10,null],[12,"wl_global_get_user_data","","",10,null],[12,"wl_resource_post_event_array","","",10,null],[12,"wl_resource_queue_event_array","","",10,null],[12,"wl_resource_post_no_memory","","",10,null],[12,"wl_resource_set_implementation","","",10,null],[12,"wl_resource_set_dispatcher","","",10,null],[12,"wl_resource_destroy","","",10,null],[12,"wl_resource_get_client","","",10,null],[12,"wl_resource_get_id","","",10,null],[12,"wl_resource_get_link","","",10,null],[12,"wl_resource_from_link","","",10,null],[12,"wl_resource_find_for_client","","",10,null],[12,"wl_resource_set_user_data","","",10,null],[12,"wl_resource_get_user_data","","",10,null],[12,"wl_resource_get_version","","",10,null],[12,"wl_resource_set_destructor","","",10,null],[12,"wl_resource_instance_of","","",10,null],[12,"wl_resource_add_destroy_listener","","",10,null],[12,"wl_resource_get_destroy_listener","","",10,null],[12,"wl_shm_buffer_begin_access","","",10,null],[12,"wl_shm_buffer_end_access","","",10,null],[12,"wl_shm_buffer_get","","",10,null],[12,"wl_shm_buffer_get_data","","",10,null],[12,"wl_shm_buffer_get_stride","","",10,null],[12,"wl_shm_buffer_get_format","","",10,null],[12,"wl_shm_buffer_get_width","","",10,null],[12,"wl_shm_buffer_get_height","","",10,null],[12,"wl_log_set_handler_server","","",10,null],[12,"wl_list_init","","",10,null],[12,"wl_list_insert","","",10,null],[12,"wl_list_remove","","",10,null],[12,"wl_list_length","","",10,null],[12,"wl_list_empty","","",10,null],[12,"wl_list_insert_list","","",10,null],[12,"wl_array_init","","",10,null],[12,"wl_array_release","","",10,null],[12,"wl_array_add","","",10,null],[12,"wl_array_copy","","",10,null],[12,"wl_resource_post_event","","",10,null],[12,"wl_resource_queue_event","","",10,null],[12,"wl_resource_post_error","","",10,null],[3,"WAYLAND_SERVER_OPTION","","",null,null],[3,"WAYLAND_SERVER_HANDLE","","",null,null],[4,"wl_client","","",null,null],[4,"wl_display","","",null,null],[4,"wl_event_loop","","",null,null],[4,"wl_event_source","","",null,null],[4,"wl_global","","",null,null],[4,"wl_resource","","",null,null],[4,"wl_shm_buffer","","",null,null],[5,"is_lib_available","","",null,{"o":{"n":"bool"}}],[0,"signal","","",null,null],[5,"wl_signal_init","wayland_sys::server::signal","",null,null],[5,"wl_signal_add","","",null,null],[5,"wl_signal_get","","",null,null],[5,"wl_signal_emit","","",null,null],[5,"rust_listener_create","","",null,null],[5,"rust_listener_get_user_data","","",null,null],[5,"rust_listener_set_user_data","","",null,null],[5,"rust_listener_destroy","","",null,null],[6,"wl_event_loop_fd_func_t","wayland_sys::server","",null,null],[6,"wl_event_loop_timer_func_t","","",null,null],[6,"wl_event_loop_signal_func_t","","",null,null],[6,"wl_event_loop_idle_func_t","","",null,null],[6,"wl_global_bind_func_t","","",null,null],[6,"wl_notify_func_t","","",null,null],[6,"wl_resource_destroy_func_t","","",null,null],[6,"wl_display_global_filter_func_t","","",null,null],[11,"open","","",10,{"i":[{"n":"str"}],"o":{"g":["waylandserver","dlerror"],"n":"result"}}],[11,"deref","","",11,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"initialize","","",11,{"i":[{"n":"self"}]}],[11,"deref","","",12,{"i":[{"n":"self"}],"o":{"n":"waylandserver"}}],[11,"initialize","","",12,{"i":[{"n":"self"}]}],[0,"egl","wayland_sys","Bindings to the EGL library `libwayland-egl.so`",null,null],[3,"WaylandEgl","wayland_sys::egl","",null,null],[12,"wl_egl_window_create","","",13,null],[12,"wl_egl_window_destroy","","",13,null],[12,"wl_egl_window_resize","","",13,null],[12,"wl_egl_window_get_attached_size","","",13,null],[3,"WAYLAND_EGL_OPTION","","",null,null],[3,"WAYLAND_EGL_HANDLE","","",null,null],[4,"wl_egl_window","","",null,null],[5,"is_lib_available","","",null,{"o":{"n":"bool"}}],[11,"open","","",13,{"i":[{"n":"str"}],"o":{"g":["waylandegl","dlerror"],"n":"result"}}],[11,"deref","","",14,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"initialize","","",14,{"i":[{"n":"self"}]}],[11,"deref","","",15,{"i":[{"n":"self"}],"o":{"n":"waylandegl"}}],[11,"initialize","","",15,{"i":[{"n":"self"}]}],[0,"cursor","wayland_sys","Bindings to the `wayland-cursor.so` library",null,null],[3,"wl_cursor_image","wayland_sys::cursor","",null,null],[12,"width","","actual width",16,null],[12,"height","","actual height",16,null],[12,"hotspot_x","","hot spot x (must be inside image)",16,null],[12,"hotspot_y","","hot spot y (must be inside image)",16,null],[12,"delay","","animation delay to next frame",16,null],[3,"wl_cursor","","",null,null],[12,"image_count","","",17,null],[12,"images","","",17,null],[12,"name","","",17,null],[3,"WaylandCursor","","",null,null],[12,"wl_cursor_theme_load","","",18,null],[12,"wl_cursor_theme_destroy","","",18,null],[12,"wl_cursor_theme_get_cursor","","",18,null],[12,"wl_cursor_image_get_buffer","","",18,null],[12,"wl_cursor_frame","","",18,null],[12,"wl_cursor_frame_and_duration","","",18,null],[3,"WAYLAND_CURSOR_OPTION","","",null,null],[3,"WAYLAND_CURSOR_HANDLE","","",null,null],[4,"wl_cursor_theme","","",null,null],[5,"is_lib_available","","",null,{"o":{"n":"bool"}}],[11,"open","","",18,{"i":[{"n":"str"}],"o":{"g":["waylandcursor","dlerror"],"n":"result"}}],[11,"deref","","",19,{"i":[{"n":"self"}],"o":{"n":"option"}}],[11,"initialize","","",19,{"i":[{"n":"self"}]}],[11,"deref","","",20,{"i":[{"n":"self"}],"o":{"n":"waylandcursor"}}],[11,"initialize","","",20,{"i":[{"n":"self"}]}],[7,"RUST_MANAGED","wayland_sys","Magic pointer for wayland objects managed by wayland-client or wayland-server",null,null],[14,"ffi_dispatch","","",null,null]],"paths":[[3,"wl_message"],[3,"wl_interface"],[3,"wl_list"],[3,"wl_array"],[19,"wl_argument"],[3,"WaylandClient"],[3,"WAYLAND_CLIENT_OPTION"],[3,"WAYLAND_CLIENT_HANDLE"],[3,"wl_listener"],[3,"wl_signal"],[3,"WaylandServer"],[3,"WAYLAND_SERVER_OPTION"],[3,"WAYLAND_SERVER_HANDLE"],[3,"WaylandEgl"],[3,"WAYLAND_EGL_OPTION"],[3,"WAYLAND_EGL_HANDLE"],[3,"wl_cursor_image"],[3,"wl_cursor"],[3,"WaylandCursor"],[3,"WAYLAND_CURSOR_OPTION"],[3,"WAYLAND_CURSOR_HANDLE"]]};
initSearch(searchIndex);
